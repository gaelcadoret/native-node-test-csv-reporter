{"result":[{"scriptId":"6","url":"node:internal/per_context/primordials","functions":[{"functionName":"SafeIterator","ranges":[{"startOffset":9499,"endOffset":9570,"count":4}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":9575,"endOffset":9624,"count":84}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9629,"endOffset":9674,"count":3}],"isBlockCoverage":true},{"functionName":"desc.value","ranges":[{"startOffset":11239,"endOffset":11306,"count":1}],"isBlockCoverage":true},{"functionName":"SafeMap","ranges":[{"startOffset":11964,"endOffset":11992,"count":68}],"isBlockCoverage":false},{"functionName":"SafeWeakMap","ranges":[{"startOffset":12136,"endOffset":12164,"count":1}],"isBlockCoverage":false},{"functionName":"SafeSet","ranges":[{"startOffset":12293,"endOffset":12321,"count":64}],"isBlockCoverage":false},{"functionName":"SafeFinalizationRegistry","ranges":[{"startOffset":12745,"endOffset":12801,"count":2}],"isBlockCoverage":true},{"functionName":"SafeWeakRef","ranges":[{"startOffset":12954,"endOffset":12992,"count":4}],"isBlockCoverage":true}]},{"scriptId":"9","url":"node:internal/bootstrap/realm","functions":[{"functionName":"internalBinding","ranges":[{"startOffset":5929,"endOffset":6191,"count":72}],"isBlockCoverage":false},{"functionName":"getOwn","ranges":[{"startOffset":6351,"endOffset":6505,"count":1642},{"startOffset":6487,"endOffset":6502,"count":0}],"isBlockCoverage":true},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":9014,"endOffset":9089,"count":51}],"isBlockCoverage":true},{"functionName":"canBeRequiredWithoutScheme","ranges":[{"startOffset":9100,"endOffset":9194,"count":225}],"isBlockCoverage":true},{"functionName":"normalizeRequirableId","ranges":[{"startOffset":9205,"endOffset":9550,"count":149},{"startOffset":9281,"endOffset":9443,"count":0},{"startOffset":9499,"endOffset":9523,"count":21},{"startOffset":9523,"endOffset":9549,"count":128}],"isBlockCoverage":true},{"functionName":"getCanBeRequiredByUsersWithoutSchemeList","ranges":[{"startOffset":9813,"endOffset":9922,"count":1}],"isBlockCoverage":true},{"functionName":"compileForPublicLoader","ranges":[{"startOffset":10080,"endOffset":10792,"count":24},{"startOffset":10161,"endOffset":10353,"count":0},{"startOffset":10417,"endOffset":10714,"count":10},{"startOffset":10676,"endOffset":10680,"count":0}],"isBlockCoverage":true},{"functionName":"getESMFacade","ranges":[{"startOffset":10796,"endOffset":11558,"count":24},{"startOffset":10834,"endOffset":10853,"count":14},{"startOffset":10853,"endOffset":11557,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11295,"endOffset":11398,"count":10}],"isBlockCoverage":true},{"functionName":"syncExports","ranges":[{"startOffset":11854,"endOffset":12198,"count":34},{"startOffset":11973,"endOffset":12188,"count":1642},{"startOffset":12050,"endOffset":12059,"count":0}],"isBlockCoverage":true},{"functionName":"compileForInternalLoader","ranges":[{"startOffset":12202,"endOffset":13024,"count":691}],"isBlockCoverage":false},{"functionName":"requireBuiltin","ranges":[{"startOffset":13219,"endOffset":13584,"count":668}],"isBlockCoverage":false}]},{"scriptId":"10","url":"node:internal/errors","functions":[{"functionName":"isErrorStackTraceLimitWritable","ranges":[{"startOffset":5751,"endOffset":6258,"count":75},{"startOffset":5981,"endOffset":6004,"count":0},{"startOffset":6105,"endOffset":6148,"count":0},{"startOffset":6227,"endOffset":6255,"count":0}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":10461,"endOffset":11463,"count":24}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":11208,"endOffset":11286,"count":0}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":12515,"endOffset":13388,"count":24},{"startOffset":12928,"endOffset":13387,"count":0}],"isBlockCoverage":true},{"functionName":"lazyUv","ranges":[{"startOffset":13406,"endOffset":13486,"count":1}],"isBlockCoverage":true},{"functionName":"uvErrmapGet","ranges":[{"startOffset":13543,"endOffset":13695,"count":1}],"isBlockCoverage":true},{"functionName":"captureLargerStackTrace","ranges":[{"startOffset":13748,"endOffset":14150,"count":25}],"isBlockCoverage":true},{"functionName":"errnoException","ranges":[{"startOffset":17290,"endOffset":18154,"count":1},{"startOffset":17701,"endOffset":17741,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48376,"endOffset":48529,"count":24}],"isBlockCoverage":true}]},{"scriptId":"11","url":"node:internal/bootstrap/node","functions":[{"functionName":"get","ranges":[{"startOffset":3830,"endOffset":3880,"count":5}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3886,"endOffset":3944,"count":2}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4086,"endOffset":4122,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4128,"endOffset":4547,"count":2},{"startOffset":4187,"endOffset":4469,"count":1},{"startOffset":4252,"endOffset":4266,"count":0},{"startOffset":4267,"endOffset":4315,"count":0},{"startOffset":4317,"endOffset":4352,"count":0},{"startOffset":4469,"endOffset":4518,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":12772,"endOffset":12808,"count":110}],"isBlockCoverage":true}]},{"scriptId":"13","url":"node:internal/async_hooks","functions":[{"functionName":"newAsyncId","ranges":[{"startOffset":14549,"endOffset":14619,"count":4}],"isBlockCoverage":true},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":14994,"endOffset":15284,"count":4},{"startOffset":15250,"endOffset":15283,"count":0}],"isBlockCoverage":true},{"functionName":"hasHooks","ranges":[{"startOffset":16096,"endOffset":16159,"count":16}],"isBlockCoverage":true},{"functionName":"enabledHooksExist","ranges":[{"startOffset":16161,"endOffset":16220,"count":3}],"isBlockCoverage":true},{"functionName":"initHooksExist","ranges":[{"startOffset":16222,"endOffset":16277,"count":4}],"isBlockCoverage":true},{"functionName":"destroyHooksExist","ranges":[{"startOffset":16338,"endOffset":16399,"count":3}],"isBlockCoverage":true},{"functionName":"emitBeforeScript","ranges":[{"startOffset":16890,"endOffset":17066,"count":3},{"startOffset":17038,"endOffset":17064,"count":0}],"isBlockCoverage":true},{"functionName":"emitAfterScript","ranges":[{"startOffset":17069,"endOffset":17189,"count":3},{"startOffset":17133,"endOffset":17158,"count":0}],"isBlockCoverage":true},{"functionName":"pushAsyncContext","ranges":[{"startOffset":17534,"endOffset":18104,"count":3},{"startOffset":17754,"endOffset":17804,"count":0}],"isBlockCoverage":true},{"functionName":"popAsyncContext","ranges":[{"startOffset":18169,"endOffset":18780,"count":3},{"startOffset":18285,"endOffset":18298,"count":0},{"startOffset":18377,"endOffset":18483,"count":0}],"isBlockCoverage":true}]},{"scriptId":"14","url":"node:internal/validators","functions":[{"functionName":"isUint32","ranges":[{"startOffset":946,"endOffset":1008,"count":79}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2186,"endOffset":2567,"count":1},{"startOffset":2306,"endOffset":2360,"count":0},{"startOffset":2400,"endOffset":2454,"count":0},{"startOffset":2497,"endOffset":2563,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3512,"endOffset":3944,"count":108},{"startOffset":3582,"endOffset":3646,"count":0},{"startOffset":3678,"endOffset":3742,"count":0},{"startOffset":3766,"endOffset":3769,"count":0},{"startOffset":3866,"endOffset":3942,"count":0}],"isBlockCoverage":true},{"functionName":"validateString","ranges":[{"startOffset":4097,"endOffset":4229,"count":1759}],"isBlockCoverage":false},{"functionName":"validateNumber","ranges":[{"startOffset":4430,"endOffset":4898,"count":1},{"startOffset":4528,"endOffset":4582,"count":0},{"startOffset":4603,"endOffset":4617,"count":0},{"startOffset":4635,"endOffset":4649,"count":0},{"startOffset":4690,"endOffset":4711,"count":0},{"startOffset":4714,"endOffset":4896,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5084,"endOffset":5417,"count":2},{"startOffset":5155,"endOffset":5415,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5228,"endOffset":5289,"count":0}],"isBlockCoverage":false},{"functionName":"validateBoolean","ranges":[{"startOffset":5573,"endOffset":5708,"count":55},{"startOffset":5651,"endOffset":5706,"count":0}],"isBlockCoverage":true},{"functionName":"getOwnPropertyValueOrDefault","ranges":[{"startOffset":5820,"endOffset":6001,"count":12},{"startOffset":5913,"endOffset":5960,"count":0},{"startOffset":5980,"endOffset":5998,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6266,"endOffset":6821,"count":4},{"startOffset":6676,"endOffset":6746,"count":0},{"startOffset":6749,"endOffset":6817,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7775,"endOffset":8053,"count":110},{"startOffset":7837,"endOffset":7900,"count":0},{"startOffset":7933,"endOffset":8051,"count":0}],"isBlockCoverage":true},{"functionName":"validateStringArray","ranges":[{"startOffset":8218,"endOffset":8387,"count":54},{"startOffset":8333,"endOffset":8385,"count":270}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11385,"endOffset":11602,"count":2},{"startOffset":11432,"endOffset":11528,"count":0},{"startOffset":11530,"endOffset":11600,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11802,"endOffset":11918,"count":176}],"isBlockCoverage":false}]},{"scriptId":"15","url":"node:internal/util","functions":[{"functionName":"getDeprecationWarningEmitter","ranges":[{"startOffset":2696,"endOffset":3345,"count":16}],"isBlockCoverage":false},{"functionName":"shouldEmitWarning","ranges":[{"startOffset":2795,"endOffset":2805,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2842,"endOffset":3342,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":4094,"endOffset":5092,"count":16}],"isBlockCoverage":false},{"functionName":"deprecated","ranges":[{"startOffset":4518,"endOffset":4704,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":5615,"endOffset":5746,"count":79},{"startOffset":5685,"endOffset":5703,"count":0},{"startOffset":5719,"endOffset":5745,"count":0}],"isBlockCoverage":true},{"functionName":"convertToValidSignal","ranges":[{"startOffset":9241,"endOffset":9562,"count":2},{"startOffset":9314,"endOffset":9351,"count":0},{"startOffset":9357,"endOffset":9371,"count":0},{"startOffset":9519,"endOffset":9561,"count":0}],"isBlockCoverage":true},{"functionName":"getSystemErrorName","ranges":[{"startOffset":9912,"endOffset":10041,"count":1},{"startOffset":10007,"endOffset":10038,"count":0}],"isBlockCoverage":true},{"functionName":"promisify","ranges":[{"startOffset":10276,"endOffset":12137,"count":3},{"startOffset":10396,"endOffset":10452,"count":1},{"startOffset":10539,"endOffset":10816,"count":0},{"startOffset":11923,"endOffset":12085,"count":8}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":11016,"endOffset":11535,"count":0}],"isBlockCoverage":false},{"functionName":"spliceOne","ranges":[{"startOffset":12695,"endOffset":12822,"count":18},{"startOffset":12776,"endOffset":12806,"count":0}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":14144,"endOffset":14317,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14201,"endOffset":14314,"count":9},{"startOffset":14237,"endOffset":14244,"count":0}],"isBlockCoverage":true},{"functionName":"defineOperation","ranges":[{"startOffset":14811,"endOffset":15012,"count":1}],"isBlockCoverage":false},{"functionName":"exposeInterface","ranges":[{"startOffset":15064,"endOffset":15284,"count":1}],"isBlockCoverage":false},{"functionName":"defineLazyProperties","ranges":[{"startOffset":15783,"endOffset":16716,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":16002,"endOffset":16145,"count":10}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":16248,"endOffset":16444,"count":10}],"isBlockCoverage":true},{"functionName":"defineReplaceableLazyAttribute","ranges":[{"startOffset":16718,"endOffset":17618,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16930,"endOffset":17166,"count":4},{"startOffset":16978,"endOffset":17031,"count":0},{"startOffset":17056,"endOffset":17087,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":17271,"endOffset":17342,"count":0}],"isBlockCoverage":false},{"functionName":"exposeLazyInterfaces","ranges":[{"startOffset":17620,"endOffset":17720,"count":1}],"isBlockCoverage":false},{"functionName":"setOwnProperty","ranges":[{"startOffset":18664,"endOffset":18854,"count":112}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20956,"endOffset":21084,"count":333},{"startOffset":21000,"endOffset":21062,"count":3}],"isBlockCoverage":true},{"functionName":"setupCoverageHooks","ranges":[{"startOffset":21212,"endOffset":21889,"count":1},{"startOffset":21682,"endOffset":21859,"count":0}],"isBlockCoverage":true},{"functionName":"guessHandleType","ranges":[{"startOffset":21962,"endOffset":22059,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":22061,"endOffset":22605,"count":4}],"isBlockCoverage":false},{"functionName":"WeakReference","ranges":[{"startOffset":22136,"endOffset":22203,"count":4}],"isBlockCoverage":true},{"functionName":"incRef","ranges":[{"startOffset":22207,"endOffset":22425,"count":0}],"isBlockCoverage":false},{"functionName":"decRef","ranges":[{"startOffset":22429,"endOffset":22557,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22561,"endOffset":22603,"count":0}],"isBlockCoverage":false}]},{"scriptId":"16","url":"node:internal/options","functions":[{"functionName":"getCLIOptionsFromBinding","ranges":[{"startOffset":464,"endOffset":598,"count":171},{"startOffset":521,"endOffset":575,"count":1}],"isBlockCoverage":true},{"functionName":"getEmbedderOptions","ranges":[{"startOffset":733,"endOffset":877,"count":4},{"startOffset":789,"endOffset":849,"count":1}],"isBlockCoverage":true},{"functionName":"refreshOptions","ranges":[{"startOffset":879,"endOffset":960,"count":1}],"isBlockCoverage":true},{"functionName":"getOptionValue","ranges":[{"startOffset":962,"endOffset":1228,"count":171},{"startOffset":1084,"endOffset":1185,"count":7},{"startOffset":1185,"endOffset":1225,"count":164}],"isBlockCoverage":true}]},{"scriptId":"17","url":"node:internal/util/types","functions":[{"functionName":"isUint8Array","ranges":[{"startOffset":236,"endOffset":342,"count":155}],"isBlockCoverage":true},{"functionName":"isBigInt64Array","ranges":[{"startOffset":1232,"endOffset":1344,"count":1}],"isBlockCoverage":true}]},{"scriptId":"21","url":"node:internal/assert","functions":[{"functionName":"assert","ranges":[{"startOffset":157,"endOffset":307,"count":82},{"startOffset":205,"endOffset":305,"count":0}],"isBlockCoverage":true}]},{"scriptId":"22","url":"node:internal/util/debuglog","functions":[{"functionName":"initializeDebugEnv","ranges":[{"startOffset":503,"endOffset":976,"count":1},{"startOffset":595,"endOffset":932,"count":0}],"isBlockCoverage":true},{"functionName":"testEnabled","ranges":[{"startOffset":870,"endOffset":927,"count":0}],"isBlockCoverage":false},{"functionName":"testEnabled","ranges":[{"startOffset":958,"endOffset":969,"count":4}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":1404,"endOffset":1412,"count":302}],"isBlockCoverage":true},{"functionName":"debuglogImpl","ranges":[{"startOffset":1533,"endOffset":2091,"count":4},{"startOffset":1608,"endOffset":2063,"count":3},{"startOffset":1627,"endOffset":2016,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1716,"endOffset":2009,"count":0}],"isBlockCoverage":false},{"functionName":"debuglog","ranges":[{"startOffset":2311,"endOffset":3337,"count":6}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":2342,"endOffset":2438,"count":4}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":2453,"endOffset":2847,"count":4},{"startOffset":2700,"endOffset":2730,"count":1},{"startOffset":2737,"endOffset":2776,"count":2},{"startOffset":2783,"endOffset":2837,"count":1}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":2877,"endOffset":2946,"count":0}],"isBlockCoverage":false},{"functionName":"logger","ranges":[{"startOffset":2965,"endOffset":3160,"count":4},{"startOffset":3013,"endOffset":3043,"count":1},{"startOffset":3050,"endOffset":3089,"count":2},{"startOffset":3096,"endOffset":3150,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3231,"endOffset":3265,"count":0}],"isBlockCoverage":false}]},{"scriptId":"23","url":"node:events","functions":[{"functionName":"lazyEventEmitterAsyncResource","ranges":[{"startOffset":3020,"endOffset":6331,"count":2},{"startOffset":3110,"endOffset":6293,"count":1}],"isBlockCoverage":true},{"functionName":"EventEmitterReferencingAsyncResource","ranges":[{"startOffset":3565,"endOffset":3669,"count":0}],"isBlockCoverage":false},{"functionName":"get eventEmitter","ranges":[{"startOffset":3727,"endOffset":3916,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitterAsyncResource","ranges":[{"startOffset":4205,"endOffset":4729,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":4866,"endOffset":5236,"count":0}],"isBlockCoverage":false},{"functionName":"emitDestroy","ranges":[{"startOffset":5297,"endOffset":5485,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncId","ranges":[{"startOffset":5545,"endOffset":5736,"count":0}],"isBlockCoverage":false},{"functionName":"get triggerAsyncId","ranges":[{"startOffset":5796,"endOffset":6001,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncResource","ranges":[{"startOffset":6091,"endOffset":6280,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter","ranges":[{"startOffset":6465,"endOffset":6534,"count":5}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7019,"endOffset":7075,"count":2}],"isBlockCoverage":true},{"functionName":"checkListener","ranges":[{"startOffset":7985,"endOffset":8063,"count":106}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8171,"endOffset":8219,"count":21}],"isBlockCoverage":true},{"functionName":"EventEmitter.init","ranges":[{"startOffset":9861,"endOffset":10459,"count":5}],"isBlockCoverage":false},{"functionName":"addCatch","ranges":[{"startOffset":10462,"endOffset":11021,"count":3},{"startOffset":10549,"endOffset":10968,"count":0},{"startOffset":10973,"endOffset":11019,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10750,"endOffset":10960,"count":0}],"isBlockCoverage":false},{"functionName":"_getMaxListeners","ranges":[{"startOffset":11950,"endOffset":12099,"count":18},{"startOffset":12068,"endOffset":12098,"count":0}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":13256,"endOffset":15559,"count":111}],"isBlockCoverage":false},{"functionName":"_addListener","ranges":[{"startOffset":15562,"endOffset":17456,"count":58}],"isBlockCoverage":false},{"functionName":"addListener","ranges":[{"startOffset":17634,"endOffset":17726,"count":58}],"isBlockCoverage":false},{"functionName":"removeListener","ranges":[{"startOffset":19553,"endOffset":20848,"count":48},{"startOffset":19702,"endOffset":19714,"count":0},{"startOffset":19787,"endOffset":19799,"count":1},{"startOffset":19799,"endOffset":19829,"count":47},{"startOffset":19829,"endOffset":19858,"count":18},{"startOffset":19860,"endOffset":20121,"count":29},{"startOffset":19911,"endOffset":19946,"count":0},{"startOffset":20121,"endOffset":20822,"count":18},{"startOffset":20277,"endOffset":20309,"count":0},{"startOffset":20417,"endOffset":20429,"count":0},{"startOffset":20469,"endOffset":20482,"count":0},{"startOffset":20549,"endOffset":20596,"count":1},{"startOffset":20822,"endOffset":20847,"count":47}],"isBlockCoverage":true},{"functionName":"removeAllListeners","ranges":[{"startOffset":21168,"endOffset":22497,"count":3},{"startOffset":21279,"endOffset":21291,"count":0},{"startOffset":21437,"endOffset":21527,"count":0},{"startOffset":21565,"endOffset":21713,"count":1},{"startOffset":21620,"endOffset":21655,"count":0},{"startOffset":21742,"endOffset":22496,"count":0}],"isBlockCoverage":true},{"functionName":"listenerCount","ranges":[{"startOffset":24091,"endOffset":24796,"count":47},{"startOffset":24274,"endOffset":24420,"count":18},{"startOffset":24304,"endOffset":24397,"count":0},{"startOffset":24420,"endOffset":24777,"count":29},{"startOffset":24456,"endOffset":24777,"count":0},{"startOffset":24781,"endOffset":24795,"count":29}],"isBlockCoverage":true}]},{"scriptId":"24","url":"node:buffer","functions":[{"functionName":"alignPool","ranges":[{"startOffset":4244,"endOffset":4366,"count":1}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":8544,"endOffset":9509,"count":1}],"isBlockCoverage":false},{"functionName":"fromStringFast","ranges":[{"startOffset":13082,"endOffset":13628,"count":1}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":13630,"endOffset":14083,"count":1}],"isBlockCoverage":false},{"functionName":"isEncoding","ranges":[{"startOffset":15947,"endOffset":16098,"count":79}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":17717,"endOffset":17781,"count":1}],"isBlockCoverage":false}]},{"scriptId":"25","url":"node:internal/buffer","functions":[{"functionName":"FastBuffer","ranges":[{"startOffset":26365,"endOffset":26465,"count":1}],"isBlockCoverage":false},{"functionName":"reconnectZeroFillToggle","ranges":[{"startOffset":30682,"endOffset":30754,"count":1}],"isBlockCoverage":true}]},{"scriptId":"27","url":"node:internal/process/per_thread","functions":[{"functionName":"refreshHrtimeBuffer","ranges":[{"startOffset":1388,"endOffset":1856,"count":1}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":4799,"endOffset":5938,"count":1},{"startOffset":5140,"endOffset":5153,"count":0},{"startOffset":5391,"endOffset":5404,"count":0}],"isBlockCoverage":true},{"functionName":"toggleTraceCategoryState","ranges":[{"startOffset":11980,"endOffset":12310,"count":1},{"startOffset":12060,"endOffset":12235,"count":0},{"startOffset":12267,"endOffset":12308,"count":0}],"isBlockCoverage":true}]},{"scriptId":"28","url":"node:internal/process/task_queues","functions":[{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1059,"endOffset":1145,"count":5},{"startOffset":1135,"endOffset":1138,"count":3},{"startOffset":1139,"endOffset":1142,"count":2}],"isBlockCoverage":true},{"functionName":"processTicksAndRejections","ranges":[{"startOffset":1445,"endOffset":2424,"count":2},{"startOffset":1547,"endOffset":2279,"count":3},{"startOffset":1748,"endOffset":1781,"count":0},{"startOffset":1914,"endOffset":1956,"count":0},{"startOffset":1969,"endOffset":2020,"count":0},{"startOffset":2033,"endOffset":2093,"count":0},{"startOffset":2106,"endOffset":2133,"count":0},{"startOffset":2217,"endOffset":2238,"count":0}],"isBlockCoverage":true},{"functionName":"nextTick","ranges":[{"startOffset":2568,"endOffset":3442,"count":4},{"startOffset":2669,"endOffset":2676,"count":0},{"startOffset":2724,"endOffset":2738,"count":0},{"startOffset":2785,"endOffset":2836,"count":0},{"startOffset":2841,"endOffset":2906,"count":0},{"startOffset":2911,"endOffset":3054,"count":0},{"startOffset":3083,"endOffset":3109,"count":3},{"startOffset":3354,"endOffset":3414,"count":0}],"isBlockCoverage":true}]},{"scriptId":"29","url":"node:internal/process/promises","functions":[{"functionName":"setHasRejectionToWarn","ranges":[{"startOffset":2155,"endOffset":2245,"count":2},{"startOffset":2235,"endOffset":2238,"count":0}],"isBlockCoverage":true},{"functionName":"processPromiseRejections","ranges":[{"startOffset":6672,"endOffset":9849,"count":2},{"startOffset":6830,"endOffset":7009,"count":0},{"startOffset":7074,"endOffset":9753,"count":0}],"isBlockCoverage":true}]},{"scriptId":"30","url":"node:internal/fixed_queue","functions":[{"functionName":"isEmpty","ranges":[{"startOffset":3077,"endOffset":3129,"count":11}],"isBlockCoverage":true},{"functionName":"isFull","ranges":[{"startOffset":3133,"endOffset":3200,"count":4}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3204,"endOffset":3291,"count":4}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3295,"endOffset":3510,"count":5},{"startOffset":3388,"endOffset":3400,"count":2},{"startOffset":3400,"endOffset":3509,"count":3}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3630,"endOffset":3677,"count":6}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3681,"endOffset":3945,"count":4},{"startOffset":3722,"endOffset":3915,"count":0}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3949,"endOffset":4204,"count":5},{"startOffset":4041,"endOffset":4062,"count":4},{"startOffset":4064,"endOffset":4183,"count":0}],"isBlockCoverage":true}]},{"scriptId":"33","url":"node:internal/process/execution","functions":[{"functionName":"tryGetCwd","ranges":[{"startOffset":681,"endOffset":1011,"count":1},{"startOffset":742,"endOffset":1009,"count":0}],"isBlockCoverage":true}]},{"scriptId":"34","url":"node:path","functions":[{"functionName":"isPosixPathSeparator","ranges":[{"startOffset":1825,"endOffset":1902,"count":40661}],"isBlockCoverage":true},{"functionName":"normalizeString","ranges":[{"startOffset":2137,"endOffset":4085,"count":553},{"startOffset":2354,"endOffset":4069,"count":40631},{"startOffset":2387,"endOffset":2429,"count":40078},{"startOffset":2429,"endOffset":2520,"count":553},{"startOffset":2472,"endOffset":2478,"count":523},{"startOffset":2478,"endOffset":2520,"count":30},{"startOffset":2520,"endOffset":2553,"count":40108},{"startOffset":2553,"endOffset":3970,"count":5106},{"startOffset":2585,"endOffset":2598,"count":4416},{"startOffset":2600,"endOffset":2625,"count":748},{"startOffset":2625,"endOffset":3927,"count":4358},{"startOffset":2647,"endOffset":3682,"count":5},{"startOffset":2676,"endOffset":2702,"count":4},{"startOffset":2703,"endOffset":2777,"count":0},{"startOffset":2778,"endOffset":2852,"count":0},{"startOffset":2886,"endOffset":3363,"count":4},{"startOffset":3006,"endOffset":3082,"count":0},{"startOffset":3363,"endOffset":3532,"count":1},{"startOffset":3391,"endOffset":3532,"count":0},{"startOffset":3542,"endOffset":3674,"count":1},{"startOffset":3605,"endOffset":3623,"count":0},{"startOffset":3682,"endOffset":3927,"count":4353},{"startOffset":3728,"endOffset":3797,"count":3801},{"startOffset":3797,"endOffset":3872,"count":552},{"startOffset":3927,"endOffset":3970,"count":5102},{"startOffset":3970,"endOffset":4065,"count":35002},{"startOffset":3998,"endOffset":4012,"count":454},{"startOffset":4014,"endOffset":4035,"count":77},{"startOffset":4035,"endOffset":4065,"count":34925}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":33904,"endOffset":34827,"count":523},{"startOffset":34027,"endOffset":34047,"count":1414},{"startOffset":34054,"endOffset":34381,"count":891},{"startOffset":34092,"endOffset":34104,"count":0},{"startOffset":34207,"endOffset":34234,"count":1},{"startOffset":34234,"endOffset":34381,"count":890},{"startOffset":34766,"endOffset":34816,"count":0},{"startOffset":34817,"endOffset":34822,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":34893,"endOffset":35506,"count":30},{"startOffset":34979,"endOffset":34990,"count":0},{"startOffset":35318,"endOffset":35412,"count":0},{"startOffset":35446,"endOffset":35458,"count":0},{"startOffset":35482,"endOffset":35494,"count":0}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":35573,"endOffset":35729,"count":89}],"isBlockCoverage":true},{"functionName":"toNamespacedPath","ranges":[{"startOffset":38728,"endOffset":38804,"count":595}],"isBlockCoverage":true},{"functionName":"dirname","ranges":[{"startOffset":38870,"endOffset":39546,"count":195},{"startOffset":38953,"endOffset":38964,"count":0},{"startOffset":39138,"endOffset":39391,"count":2010},{"startOffset":39209,"endOffset":39293,"count":195},{"startOffset":39293,"endOffset":39385,"count":1815},{"startOffset":39419,"endOffset":39446,"count":0},{"startOffset":39483,"endOffset":39495,"count":0}],"isBlockCoverage":true},{"functionName":"basename","ranges":[{"startOffset":39642,"endOffset":42069,"count":55},{"startOffset":39703,"endOffset":39733,"count":0},{"startOffset":39865,"endOffset":39885,"count":0},{"startOffset":39886,"endOffset":39917,"count":0},{"startOffset":39919,"endOffset":41443,"count":0},{"startOffset":41491,"endOffset":41976,"count":581},{"startOffset":41562,"endOffset":41786,"count":55},{"startOffset":41786,"endOffset":41970,"count":526},{"startOffset":41808,"endOffset":41970,"count":55},{"startOffset":42004,"endOffset":42014,"count":0}],"isBlockCoverage":true}]},{"scriptId":"37","url":"node:internal/source_map/source_map_cache","functions":[{"functionName":"","ranges":[{"startOffset":357,"endOffset":382,"count":1}],"isBlockCoverage":true},{"functionName":"getSourceMapsEnabled","ranges":[{"startOffset":1596,"endOffset":1659,"count":24}],"isBlockCoverage":true},{"functionName":"setSourceMapsEnabled","ranges":[{"startOffset":1661,"endOffset":2203,"count":1},{"startOffset":1769,"endOffset":1924,"count":0}],"isBlockCoverage":true},{"functionName":"extractSourceURLMagicComment","ranges":[{"startOffset":2205,"endOffset":2805,"count":24},{"startOffset":2507,"endOffset":2540,"count":0},{"startOffset":2593,"endOffset":2729,"count":0},{"startOffset":2731,"endOffset":2804,"count":0}],"isBlockCoverage":true},{"functionName":"maybeCacheSourceMap","ranges":[{"startOffset":3252,"endOffset":5023,"count":24},{"startOffset":3454,"endOffset":3474,"count":0},{"startOffset":3477,"endOffset":3484,"count":0},{"startOffset":3618,"endOffset":3742,"count":0},{"startOffset":3778,"endOffset":3844,"count":0},{"startOffset":3933,"endOffset":3950,"count":0},{"startOffset":4123,"endOffset":4137,"count":0},{"startOffset":4164,"endOffset":4349,"count":0},{"startOffset":4378,"endOffset":4644,"count":0},{"startOffset":4963,"endOffset":5017,"count":0}],"isBlockCoverage":true},{"functionName":"dataFromUrl","ranges":[{"startOffset":5555,"endOffset":6075,"count":24},{"startOffset":5692,"endOffset":5767,"count":0},{"startOffset":5774,"endOffset":5854,"count":0}],"isBlockCoverage":true},{"functionName":"lineLengths","ranges":[{"startOffset":6265,"endOffset":6610,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6567,"endOffset":6606,"count":9303}],"isBlockCoverage":true},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":6612,"endOffset":6892,"count":24},{"startOffset":6840,"endOffset":6890,"count":0}],"isBlockCoverage":true},{"functionName":"sourcesToAbsolute","ranges":[{"startOffset":7842,"endOffset":8169,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7920,"endOffset":8026,"count":24}],"isBlockCoverage":true}]},{"scriptId":"38","url":"node:internal/url","functions":[{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3462,"endOffset":4251,"count":150}],"isBlockCoverage":false},{"functionName":"get hasPort","ranges":[{"startOffset":4030,"endOffset":4095,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSearch","ranges":[{"startOffset":4099,"endOffset":4174,"count":54}],"isBlockCoverage":true},{"functionName":"get hasHash","ranges":[{"startOffset":4178,"endOffset":4249,"count":54}],"isBlockCoverage":true},{"functionName":"isURL","ranges":[{"startOffset":21271,"endOffset":21396,"count":165},{"startOffset":21322,"endOffset":21338,"count":10},{"startOffset":21339,"endOffset":21365,"count":10},{"startOffset":21366,"endOffset":21392,"count":10}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":21398,"endOffset":29288,"count":150}],"isBlockCoverage":false},{"functionName":"URL","ranges":[{"startOffset":21461,"endOffset":21849,"count":150},{"startOffset":21532,"endOffset":21580,"count":0},{"startOffset":21669,"endOffset":21700,"count":68},{"startOffset":21766,"endOffset":21813,"count":24},{"startOffset":21813,"endOffset":21848,"count":126}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21853,"endOffset":22573,"count":0}],"isBlockCoverage":false},{"functionName":"#updateContext","ranges":[{"startOffset":22577,"endOffset":23484,"count":126},{"startOffset":23293,"endOffset":23480,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":23488,"endOffset":23535,"count":30}],"isBlockCoverage":true},{"functionName":"get href","ranges":[{"startOffset":23539,"endOffset":23586,"count":82}],"isBlockCoverage":true},{"functionName":"set href","ranges":[{"startOffset":23590,"endOffset":23799,"count":0}],"isBlockCoverage":false},{"functionName":"get origin","ranges":[{"startOffset":23817,"endOffset":24686,"count":0}],"isBlockCoverage":false},{"functionName":"get protocol","ranges":[{"startOffset":24690,"endOffset":24794,"count":44}],"isBlockCoverage":true},{"functionName":"set protocol","ranges":[{"startOffset":24798,"endOffset":24971,"count":0}],"isBlockCoverage":false},{"functionName":"get username","ranges":[{"startOffset":24975,"endOffset":25202,"count":0}],"isBlockCoverage":false},{"functionName":"set username","ranges":[{"startOffset":25206,"endOffset":25379,"count":0}],"isBlockCoverage":false},{"functionName":"get password","ranges":[{"startOffset":25383,"endOffset":25606,"count":0}],"isBlockCoverage":false},{"functionName":"set password","ranges":[{"startOffset":25610,"endOffset":25783,"count":0}],"isBlockCoverage":false},{"functionName":"get host","ranges":[{"startOffset":25787,"endOffset":26218,"count":0}],"isBlockCoverage":false},{"functionName":"set host","ranges":[{"startOffset":26222,"endOffset":26387,"count":0}],"isBlockCoverage":false},{"functionName":"get hostname","ranges":[{"startOffset":26391,"endOffset":26673,"count":34},{"startOffset":26557,"endOffset":26582,"count":0}],"isBlockCoverage":true},{"functionName":"set hostname","ranges":[{"startOffset":26677,"endOffset":26850,"count":0}],"isBlockCoverage":false},{"functionName":"get port","ranges":[{"startOffset":26854,"endOffset":26962,"count":0}],"isBlockCoverage":false},{"functionName":"set port","ranges":[{"startOffset":26966,"endOffset":27131,"count":0}],"isBlockCoverage":false},{"functionName":"get pathname","ranges":[{"startOffset":27135,"endOffset":27427,"count":54},{"startOffset":27201,"endOffset":27251,"count":0},{"startOffset":27284,"endOffset":27332,"count":0}],"isBlockCoverage":true},{"functionName":"set pathname","ranges":[{"startOffset":27431,"endOffset":27604,"count":0}],"isBlockCoverage":false},{"functionName":"get search","ranges":[{"startOffset":27608,"endOffset":27943,"count":0}],"isBlockCoverage":false},{"functionName":"set search","ranges":[{"startOffset":27947,"endOffset":28124,"count":0}],"isBlockCoverage":false},{"functionName":"get searchParams","ranges":[{"startOffset":28142,"endOffset":28441,"count":0}],"isBlockCoverage":false},{"functionName":"get hash","ranges":[{"startOffset":28445,"endOffset":28660,"count":0}],"isBlockCoverage":false},{"functionName":"set hash","ranges":[{"startOffset":28664,"endOffset":28829,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":28833,"endOffset":28878,"count":0}],"isBlockCoverage":false},{"functionName":"canParse","ranges":[{"startOffset":28889,"endOffset":29286,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromURLPosix","ranges":[{"startOffset":38374,"endOffset":38895,"count":34},{"startOffset":38437,"endOffset":38493,"count":0},{"startOffset":38571,"endOffset":38854,"count":2965},{"startOffset":38602,"endOffset":38850,"count":0}],"isBlockCoverage":true},{"functionName":"fileURLToPath","ranges":[{"startOffset":38897,"endOffset":39236,"count":34},{"startOffset":38964,"endOffset":38985,"count":24},{"startOffset":38985,"endOffset":39079,"count":10},{"startOffset":39015,"endOffset":39079,"count":0},{"startOffset":39117,"endOffset":39158,"count":0},{"startOffset":39178,"endOffset":39205,"count":0}],"isBlockCoverage":true},{"functionName":"encodePathChars","ranges":[{"startOffset":40049,"endOffset":40825,"count":34},{"startOffset":40142,"endOffset":40213,"count":0},{"startOffset":40341,"endOffset":40414,"count":0},{"startOffset":40472,"endOffset":40543,"count":0},{"startOffset":40601,"endOffset":40679,"count":0},{"startOffset":40737,"endOffset":40804,"count":0}],"isBlockCoverage":true},{"functionName":"pathToFileURL","ranges":[{"startOffset":40827,"endOffset":42804,"count":34},{"startOffset":40878,"endOffset":40924,"count":0},{"startOffset":40926,"endOffset":41691,"count":0},{"startOffset":41994,"endOffset":42033,"count":0},{"startOffset":42036,"endOffset":42087,"count":0},{"startOffset":42093,"endOffset":42109,"count":0},{"startOffset":42565,"endOffset":42637,"count":0},{"startOffset":42694,"endOffset":42762,"count":0}],"isBlockCoverage":true},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":42806,"endOffset":42943,"count":155},{"startOffset":42902,"endOffset":42942,"count":0}],"isBlockCoverage":true}]},{"scriptId":"43","url":"node:internal/console/constructor","functions":[{"functionName":"value","ranges":[{"startOffset":5832,"endOffset":6477,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6041,"endOffset":6136,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6148,"endOffset":6178,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6308,"endOffset":6407,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6419,"endOffset":6449,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":6569,"endOffset":7977,"count":1}],"isBlockCoverage":true},{"functionName":"createWriteErrorHandler","ranges":[{"startOffset":10662,"endOffset":11551,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10730,"endOffset":11548,"count":0}],"isBlockCoverage":false},{"functionName":"initializeGlobalConsole","ranges":[{"startOffset":20425,"endOffset":21464,"count":1},{"startOffset":20793,"endOffset":21463,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21359,"endOffset":21460,"count":0}],"isBlockCoverage":false}]},{"scriptId":"45","url":"node:internal/process/permission","functions":[{"functionName":"isEnabled","ranges":[{"startOffset":315,"endOffset":559,"count":340},{"startOffset":375,"endOffset":520,"count":1}],"isBlockCoverage":true}]},{"scriptId":"46","url":"node:internal/event_target","functions":[{"functionName":"initEventTarget","ranges":[{"startOffset":13036,"endOffset":13255,"count":1}],"isBlockCoverage":true},{"functionName":"defineEventHandler","ranges":[{"startOffset":29057,"endOffset":30523,"count":6}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":29217,"endOffset":29353,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":29452,"endOffset":30290,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitterMixin","ranges":[{"startOffset":30551,"endOffset":31241,"count":1},{"startOffset":30982,"endOffset":31144,"count":18}],"isBlockCoverage":true},{"functionName":"MixedEventEmitter","ranges":[{"startOffset":30620,"endOffset":30761,"count":0}],"isBlockCoverage":false}]},{"scriptId":"47","url":"node:util","functions":[{"functionName":"lazyAbortController","ranges":[{"startOffset":2369,"endOffset":2489,"count":9}],"isBlockCoverage":true},{"functionName":"getSystemErrorName","ranges":[{"startOffset":9265,"endOffset":9481,"count":1},{"startOffset":9375,"endOffset":9446,"count":0}],"isBlockCoverage":true},{"functionName":"get transferableAbortSignal","ranges":[{"startOffset":10340,"endOffset":10433,"count":3}],"isBlockCoverage":true},{"functionName":"get transferableAbortController","ranges":[{"startOffset":10437,"endOffset":10538,"count":3}],"isBlockCoverage":true},{"functionName":"get aborted","ranges":[{"startOffset":10542,"endOffset":10603,"count":3}],"isBlockCoverage":true}]},{"scriptId":"51","url":"node:internal/bootstrap/switches/is_main_thread","functions":[{"functionName":"createWritableStdioStream","ranges":[{"startOffset":1424,"endOffset":3026,"count":1},{"startOffset":1716,"endOffset":1910,"count":0},{"startOffset":1916,"endOffset":1928,"count":0},{"startOffset":1933,"endOffset":2645,"count":0},{"startOffset":2651,"endOffset":2905,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2841,"endOffset":2888,"count":0}],"isBlockCoverage":false},{"functionName":"addCleanup","ranges":[{"startOffset":3639,"endOffset":3730,"count":1},{"startOffset":3693,"endOffset":3728,"count":0}],"isBlockCoverage":true},{"functionName":"getStdout","ranges":[{"startOffset":3732,"endOffset":4424,"count":2},{"startOffset":3769,"endOffset":4423,"count":1}],"isBlockCoverage":true},{"functionName":"cleanupStdout","ranges":[{"startOffset":4090,"endOffset":4268,"count":0}],"isBlockCoverage":false}]},{"scriptId":"52","url":"node:internal/v8/startup_snapshot","functions":[{"functionName":"isBuildingSnapshot","ranges":[{"startOffset":433,"endOffset":504,"count":80}],"isBlockCoverage":true},{"functionName":"runDeserializeCallbacks","ranges":[{"startOffset":831,"endOffset":1004,"count":1},{"startOffset":910,"endOffset":1002,"count":0}],"isBlockCoverage":true}]},{"scriptId":"53","url":"node:internal/process/signal","functions":[{"functionName":"isSignal","ranges":[{"startOffset":238,"endOffset":334,"count":50}],"isBlockCoverage":false},{"functionName":"startListeningIfSignal","ranges":[{"startOffset":398,"endOffset":904,"count":50}],"isBlockCoverage":false},{"functionName":"stopListeningIfSignal","ranges":[{"startOffset":906,"endOffset":1101,"count":47},{"startOffset":1046,"endOffset":1099,"count":29}],"isBlockCoverage":true}]},{"scriptId":"54","url":"node:fs","functions":[{"functionName":"makeCallback","ranges":[{"startOffset":4614,"endOffset":4726,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4682,"endOffset":4723,"count":9}],"isBlockCoverage":true},{"functionName":"isFileType","ranges":[{"startOffset":5100,"endOffset":5360,"count":881},{"startOffset":5299,"endOffset":5319,"count":115}],"isBlockCoverage":true},{"functionName":"existsSync","ranges":[{"startOffset":7527,"endOffset":8057,"count":2},{"startOffset":7602,"endOffset":7631,"count":0},{"startOffset":7939,"endOffset":7965,"count":0},{"startOffset":7967,"endOffset":8020,"count":0}],"isBlockCoverage":true},{"functionName":"readFileSync","ranges":[{"startOffset":11705,"endOffset":13392,"count":79},{"startOffset":11972,"endOffset":12003,"count":0},{"startOffset":12139,"endOffset":12169,"count":0},{"startOffset":12170,"endOffset":12210,"count":0},{"startOffset":12298,"endOffset":12308,"count":0},{"startOffset":12309,"endOffset":12312,"count":0},{"startOffset":12442,"endOffset":13391,"count":0}],"isBlockCoverage":true},{"functionName":"readdir","ranges":[{"startOffset":38993,"endOffset":39771,"count":9},{"startOffset":39093,"endOffset":39102,"count":0},{"startOffset":39215,"endOffset":39281,"count":0},{"startOffset":39308,"endOffset":39382,"count":0},{"startOffset":39449,"endOffset":39485,"count":0}],"isBlockCoverage":true},{"functionName":"req.oncomplete","ranges":[{"startOffset":39514,"endOffset":39644,"count":9},{"startOffset":39548,"endOffset":39596,"count":0}],"isBlockCoverage":true},{"functionName":"splitRoot","ranges":[{"startOffset":69492,"endOffset":69702,"count":56},{"startOffset":69559,"endOffset":69682,"count":112},{"startOffset":69637,"endOffset":69676,"count":56},{"startOffset":69682,"endOffset":69701,"count":0}],"isBlockCoverage":true},{"functionName":"encodeRealpathResult","ranges":[{"startOffset":69707,"endOffset":69994,"count":55},{"startOffset":69792,"endOffset":69822,"count":0},{"startOffset":69842,"endOffset":69993,"count":0}],"isBlockCoverage":true},{"functionName":"nextPart","ranges":[{"startOffset":70400,"endOffset":70475,"count":498}],"isBlockCoverage":true},{"functionName":"realpathSync","ranges":[{"startOffset":70649,"endOffset":74545,"count":64},{"startOffset":70773,"endOffset":70791,"count":0},{"startOffset":70952,"endOffset":70987,"count":9},{"startOffset":70987,"endOffset":71549,"count":55},{"startOffset":71549,"endOffset":71721,"count":0},{"startOffset":71721,"endOffset":71858,"count":55},{"startOffset":71858,"endOffset":74472,"count":498},{"startOffset":71970,"endOffset":72101,"count":56},{"startOffset":72101,"endOffset":72259,"count":442},{"startOffset":72346,"endOffset":72374,"count":493},{"startOffset":72376,"endOffset":72513,"count":383},{"startOffset":72467,"endOffset":72491,"count":0},{"startOffset":72513,"endOffset":72579,"count":115},{"startOffset":72616,"endOffset":72665,"count":0},{"startOffset":72665,"endOffset":73969,"count":115},{"startOffset":73017,"endOffset":73105,"count":114},{"startOffset":73105,"endOffset":73526,"count":1},{"startOffset":73465,"endOffset":73518,"count":0},{"startOffset":73526,"endOffset":73889,"count":1},{"startOffset":73933,"endOffset":73963,"count":1},{"startOffset":73969,"endOffset":74261,"count":1},{"startOffset":74261,"endOffset":74284,"count":0},{"startOffset":74286,"endOffset":74468,"count":0},{"startOffset":74472,"endOffset":74486,"count":55}],"isBlockCoverage":true},{"functionName":"lazyLoadStreams","ranges":[{"startOffset":83440,"endOffset":83631,"count":28},{"startOffset":83488,"endOffset":83629,"count":1}],"isBlockCoverage":true},{"functionName":"get ReadStream","ranges":[{"startOffset":85851,"endOffset":85919,"count":7}],"isBlockCoverage":true},{"functionName":"get WriteStream","ranges":[{"startOffset":85976,"endOffset":86046,"count":7}],"isBlockCoverage":true},{"functionName":"get FileReadStream","ranges":[{"startOffset":86238,"endOffset":86314,"count":7}],"isBlockCoverage":true},{"functionName":"get FileWriteStream","ranges":[{"startOffset":86379,"endOffset":86457,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":87152,"endOffset":87248,"count":7}],"isBlockCoverage":true}]},{"scriptId":"59","url":"node:internal/fs/utils","functions":[{"functionName":"assertEncoding","ranges":[{"startOffset":3617,"endOffset":3817,"count":152},{"startOffset":3668,"endOffset":3699,"count":79},{"startOffset":3701,"endOffset":3815,"count":0}],"isBlockCoverage":true},{"functionName":"Dirent","ranges":[{"startOffset":3836,"endOffset":3939,"count":17}],"isBlockCoverage":true},{"functionName":"isDirectory","ranges":[{"startOffset":3943,"endOffset":4004,"count":8}],"isBlockCoverage":true},{"functionName":"isFile","ranges":[{"startOffset":4008,"endOffset":4065,"count":17}],"isBlockCoverage":true},{"functionName":"getDirents","ranges":[{"startOffset":5567,"endOffset":6682,"count":9},{"startOffset":5791,"endOffset":6464,"count":17},{"startOffset":5860,"endOffset":6386,"count":0},{"startOffset":6529,"endOffset":6680,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6125,"endOffset":6376,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":7467,"endOffset":8093,"count":152},{"startOffset":7585,"endOffset":7617,"count":0},{"startOffset":7654,"endOffset":7772,"count":79},{"startOffset":7772,"endOffset":7894,"count":73},{"startOffset":7811,"endOffset":7894,"count":0},{"startOffset":8008,"endOffset":8072,"count":0}],"isBlockCoverage":true},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":8151,"endOffset":8680,"count":117},{"startOffset":8221,"endOffset":8356,"count":0},{"startOffset":8388,"endOffset":8678,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8821,"endOffset":9417,"count":155},{"startOffset":9051,"endOffset":9071,"count":0},{"startOffset":9141,"endOffset":9209,"count":0},{"startOffset":9228,"endOffset":9416,"count":0}],"isBlockCoverage":true},{"functionName":"StatsBase","ranges":[{"startOffset":10160,"endOffset":10467,"count":1}],"isBlockCoverage":true},{"functionName":"StatsBase.isDirectory","ranges":[{"startOffset":10503,"endOffset":10560,"count":1}],"isBlockCoverage":true},{"functionName":"StatsBase.isFile","ranges":[{"startOffset":10592,"endOffset":10649,"count":1}],"isBlockCoverage":true},{"functionName":"msFromTimeSpec","ranges":[{"startOffset":11248,"endOffset":11330,"count":4}],"isBlockCoverage":true},{"functionName":"dateFromMs","ranges":[{"startOffset":11817,"endOffset":11928,"count":4}],"isBlockCoverage":true},{"functionName":"Stats","ranges":[{"startOffset":13100,"endOffset":13642,"count":1}],"isBlockCoverage":true},{"functionName":"Stats._checkModeProperty","ranges":[{"startOffset":13983,"endOffset":14213,"count":2},{"startOffset":14020,"endOffset":14098,"count":0},{"startOffset":14100,"endOffset":14167,"count":0}],"isBlockCoverage":true},{"functionName":"getStatsFromBinding","ranges":[{"startOffset":14331,"endOffset":15410,"count":1},{"startOffset":14411,"endOffset":14937,"count":0}],"isBlockCoverage":true},{"functionName":"stringToFlags","ranges":[{"startOffset":15812,"endOffset":17068,"count":79},{"startOffset":15893,"endOffset":15948,"count":0},{"startOffset":15971,"endOffset":15997,"count":0},{"startOffset":16054,"endOffset":16065,"count":0},{"startOffset":16087,"endOffset":16124,"count":0},{"startOffset":16129,"endOffset":16155,"count":0},{"startOffset":16160,"endOffset":16172,"count":0},{"startOffset":16194,"endOffset":16230,"count":0},{"startOffset":16236,"endOffset":16283,"count":0},{"startOffset":16288,"endOffset":16299,"count":0},{"startOffset":16321,"endOffset":16378,"count":0},{"startOffset":16384,"endOffset":16430,"count":0},{"startOffset":16435,"endOffset":16446,"count":0},{"startOffset":16468,"endOffset":16523,"count":0},{"startOffset":16529,"endOffset":16577,"count":0},{"startOffset":16582,"endOffset":16593,"count":0},{"startOffset":16615,"endOffset":16673,"count":0},{"startOffset":16678,"endOffset":16689,"count":0},{"startOffset":16711,"endOffset":16769,"count":0},{"startOffset":16775,"endOffset":16822,"count":0},{"startOffset":16827,"endOffset":16838,"count":0},{"startOffset":16860,"endOffset":16916,"count":0},{"startOffset":16921,"endOffset":16932,"count":0},{"startOffset":16954,"endOffset":17010,"count":0},{"startOffset":17014,"endOffset":17067,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18930,"endOffset":19200,"count":155},{"startOffset":18992,"endOffset":19014,"count":0},{"startOffset":19016,"endOffset":19102,"count":0},{"startOffset":19178,"endOffset":19198,"count":0}],"isBlockCoverage":true},{"functionName":"possiblyTransformPath","ranges":[{"startOffset":19405,"endOffset":19680,"count":91},{"startOffset":19474,"endOffset":19663,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19723,"endOffset":19881,"count":91}],"isBlockCoverage":true}]},{"scriptId":"60","url":"node:internal/fs/read/utf8","functions":[{"functionName":"readFileSyncUtf8","ranges":[{"startOffset":197,"endOffset":453,"count":79},{"startOffset":353,"endOffset":452,"count":0}],"isBlockCoverage":true}]},{"scriptId":"63","url":"node:internal/modules/cjs/loader","functions":[{"functionName":"get hasLoadedAnyUserCJSModule","ranges":[{"startOffset":2238,"endOffset":2307,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3478,"endOffset":3569,"count":1},{"startOffset":3525,"endOffset":3561,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3618,"endOffset":3661,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3702,"endOffset":3756,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":4937,"endOffset":5347,"count":339},{"startOffset":5035,"endOffset":5129,"count":338},{"startOffset":5111,"endOffset":5125,"count":72},{"startOffset":5129,"endOffset":5202,"count":267},{"startOffset":5202,"endOffset":5216,"count":266},{"startOffset":5218,"endOffset":5328,"count":84},{"startOffset":5328,"endOffset":5346,"count":267}],"isBlockCoverage":true},{"functionName":"updateChildren","ranges":[{"startOffset":5579,"endOffset":5775,"count":79},{"startOffset":5651,"endOffset":5661,"count":78},{"startOffset":5678,"endOffset":5731,"count":78},{"startOffset":5688,"endOffset":5730,"count":24},{"startOffset":5737,"endOffset":5773,"count":72}],"isBlockCoverage":true},{"functionName":"reportModuleToWatchMode","ranges":[{"startOffset":5777,"endOffset":5933,"count":157},{"startOffset":5858,"endOffset":5873,"count":0},{"startOffset":5875,"endOffset":5931,"count":0}],"isBlockCoverage":true},{"functionName":"reportModuleNotFoundToWatchMode","ranges":[{"startOffset":5935,"endOffset":6174,"count":11},{"startOffset":6036,"endOffset":6051,"count":0},{"startOffset":6053,"endOffset":6172,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6121,"endOffset":6163,"count":0}],"isBlockCoverage":false},{"functionName":"Module","ranges":[{"startOffset":6221,"endOffset":6978,"count":55},{"startOffset":6534,"endOffset":6544,"count":0},{"startOffset":6562,"endOffset":6926,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8484,"endOffset":8509,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCJS","ranges":[{"startOffset":9188,"endOffset":9688,"count":1}],"isBlockCoverage":true},{"functionName":"readPackage","ranges":[{"startOffset":9982,"endOffset":10095,"count":231}],"isBlockCoverage":true},{"functionName":"readPackageScope","ranges":[{"startOffset":10383,"endOffset":11176,"count":117},{"startOffset":10570,"endOffset":11113,"count":166},{"startOffset":10819,"endOffset":10865,"count":0},{"startOffset":10867,"endOffset":10894,"count":0},{"startOffset":10967,"endOffset":10980,"count":0},{"startOffset":11052,"endOffset":11109,"count":117},{"startOffset":11113,"endOffset":11175,"count":0}],"isBlockCoverage":true},{"functionName":"tryPackage","ranges":[{"startOffset":11178,"endOffset":12457,"count":22},{"startOffset":11300,"endOffset":11381,"count":15},{"startOffset":11381,"endOffset":11475,"count":7},{"startOffset":11475,"endOffset":11519,"count":0},{"startOffset":11520,"endOffset":11587,"count":0},{"startOffset":11613,"endOffset":12438,"count":0},{"startOffset":12438,"endOffset":12456,"count":7}],"isBlockCoverage":true},{"functionName":"tryFile","ranges":[{"startOffset":12802,"endOffset":13034,"count":143},{"startOffset":12891,"endOffset":12898,"count":99},{"startOffset":12898,"endOffset":12943,"count":44},{"startOffset":12943,"endOffset":12953,"count":0},{"startOffset":12955,"endOffset":12998,"count":0},{"startOffset":12998,"endOffset":13033,"count":44}],"isBlockCoverage":true},{"functionName":"toRealPath","ranges":[{"startOffset":13036,"endOffset":13168,"count":64}],"isBlockCoverage":true},{"functionName":"tryExtensions","ranges":[{"startOffset":13243,"endOffset":13449,"count":60},{"startOffset":13325,"endOffset":13431,"count":126},{"startOffset":13397,"endOffset":13427,"count":27},{"startOffset":13431,"endOffset":13448,"count":33}],"isBlockCoverage":true},{"functionName":"findLongestRegisteredExtension","ranges":[{"startOffset":13538,"endOffset":14006,"count":55},{"startOffset":13813,"endOffset":13822,"count":0},{"startOffset":13960,"endOffset":13984,"count":54},{"startOffset":13988,"endOffset":14005,"count":1}],"isBlockCoverage":true},{"functionName":"trySelfParentPath","ranges":[{"startOffset":14008,"endOffset":14297,"count":64},{"startOffset":14060,"endOffset":14073,"count":1},{"startOffset":14073,"endOffset":14131,"count":63},{"startOffset":14131,"endOffset":14295,"count":0}],"isBlockCoverage":true},{"functionName":"trySelf","ranges":[{"startOffset":14299,"endOffset":15197,"count":64},{"startOffset":14358,"endOffset":14371,"count":1},{"startOffset":14371,"endOffset":14475,"count":63},{"startOffset":14476,"endOffset":14501,"count":11},{"startOffset":14503,"endOffset":14526,"count":52},{"startOffset":14526,"endOffset":14573,"count":11},{"startOffset":14573,"endOffset":14599,"count":0},{"startOffset":14599,"endOffset":14765,"count":11},{"startOffset":14661,"endOffset":14736,"count":0},{"startOffset":14765,"endOffset":15195,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExports","ranges":[{"startOffset":15358,"endOffset":16166,"count":73},{"startOffset":15565,"endOffset":15580,"count":30},{"startOffset":15599,"endOffset":15606,"count":30},{"startOffset":15606,"endOffset":15707,"count":43},{"startOffset":15707,"endOffset":15729,"count":32},{"startOffset":15731,"endOffset":16164,"count":10},{"startOffset":16011,"endOffset":16160,"count":0}],"isBlockCoverage":true},{"functionName":"Module._findPath","ranges":[{"startOffset":16434,"endOffset":20492,"count":65},{"startOffset":16544,"endOffset":16567,"count":2},{"startOffset":16567,"endOffset":16630,"count":63},{"startOffset":16607,"endOffset":16630,"count":0},{"startOffset":16767,"endOffset":16780,"count":2},{"startOffset":16780,"endOffset":17363,"count":63},{"startOffset":17002,"endOffset":17356,"count":0},{"startOffset":17438,"endOffset":17894,"count":30},{"startOffset":17544,"endOffset":17629,"count":1},{"startOffset":17564,"endOffset":17628,"count":0},{"startOffset":17630,"endOffset":17888,"count":1},{"startOffset":17799,"endOffset":17886,"count":0},{"startOffset":17939,"endOffset":18093,"count":30},{"startOffset":18056,"endOffset":18089,"count":1},{"startOffset":18093,"endOffset":18155,"count":63},{"startOffset":18155,"endOffset":20473,"count":134},{"startOffset":18296,"endOffset":18306,"count":133},{"startOffset":18307,"endOffset":18403,"count":132},{"startOffset":18341,"endOffset":18379,"count":0},{"startOffset":18410,"endOffset":18433,"count":60},{"startOffset":18433,"endOffset":18461,"count":74},{"startOffset":18461,"endOffset":18591,"count":73},{"startOffset":18562,"endOffset":18585,"count":10},{"startOffset":18591,"endOffset":19950,"count":64},{"startOffset":18743,"endOffset":19727,"count":19},{"startOffset":18776,"endOffset":18965,"count":18},{"startOffset":18831,"endOffset":18891,"count":0},{"startOffset":18965,"endOffset":19719,"count":1},{"startOffset":19019,"endOffset":19659,"count":0},{"startOffset":19750,"endOffset":19944,"count":45},{"startOffset":19840,"endOffset":19878,"count":38},{"startOffset":19950,"endOffset":19970,"count":64},{"startOffset":19970,"endOffset":19981,"count":33},{"startOffset":19983,"endOffset":20199,"count":22},{"startOffset":20093,"endOffset":20131,"count":0},{"startOffset":20199,"endOffset":20219,"count":64},{"startOffset":20219,"endOffset":20295,"count":53},{"startOffset":20295,"endOffset":20473,"count":11},{"startOffset":20473,"endOffset":20491,"count":0}],"isBlockCoverage":true},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":22345,"endOffset":23485,"count":55},{"startOffset":22623,"endOffset":22648,"count":0},{"startOffset":22941,"endOffset":23363,"count":3713},{"startOffset":23037,"endOffset":23233,"count":436},{"startOffset":23074,"endOffset":23192,"count":367},{"startOffset":23233,"endOffset":23357,"count":3277},{"startOffset":23253,"endOffset":23357,"count":1241},{"startOffset":23288,"endOffset":23314,"count":874},{"startOffset":23314,"endOffset":23349,"count":367}],"isBlockCoverage":true},{"functionName":"Module._resolveLookupPaths","ranges":[{"startOffset":23519,"endOffset":24778,"count":64},{"startOffset":23599,"endOffset":23665,"count":0},{"startOffset":23750,"endOffset":23949,"count":31},{"startOffset":23830,"endOffset":23880,"count":30},{"startOffset":23881,"endOffset":23948,"count":0},{"startOffset":23951,"endOffset":24250,"count":33},{"startOffset":23983,"endOffset":23998,"count":32},{"startOffset":24000,"endOffset":24110,"count":32},{"startOffset":24110,"endOffset":24150,"count":1},{"startOffset":24239,"endOffset":24245,"count":0},{"startOffset":24250,"endOffset":24318,"count":31},{"startOffset":24319,"endOffset":24338,"count":31},{"startOffset":24340,"endOffset":24589,"count":0},{"startOffset":24589,"endOffset":24777,"count":31}],"isBlockCoverage":true},{"functionName":"Module._load","ranges":[{"startOffset":26860,"endOffset":29991,"count":103},{"startOffset":26943,"endOffset":27759,"count":102},{"startOffset":27402,"endOffset":27755,"count":15},{"startOffset":27592,"endOffset":27642,"count":0},{"startOffset":27687,"endOffset":27755,"count":0},{"startOffset":27759,"endOffset":27812,"count":88},{"startOffset":27812,"endOffset":28084,"count":3},{"startOffset":27941,"endOffset":28001,"count":0},{"startOffset":28084,"endOffset":28237,"count":85},{"startOffset":28237,"endOffset":28597,"count":9},{"startOffset":28317,"endOffset":28545,"count":0},{"startOffset":28597,"endOffset":28657,"count":76},{"startOffset":28657,"endOffset":28740,"count":21},{"startOffset":28740,"endOffset":28870,"count":55},{"startOffset":28887,"endOffset":29028,"count":1},{"startOffset":29028,"endOffset":29963,"count":55},{"startOffset":29306,"endOffset":29709,"count":0},{"startOffset":29891,"endOffset":29959,"count":0},{"startOffset":29963,"endOffset":29990,"count":55}],"isBlockCoverage":true},{"functionName":"Module._resolveFilename","ranges":[{"startOffset":30020,"endOffset":33106,"count":85},{"startOffset":30117,"endOffset":30142,"count":21},{"startOffset":30142,"endOffset":30192,"count":64},{"startOffset":30192,"endOffset":30211,"count":0},{"startOffset":30213,"endOffset":31290,"count":0},{"startOffset":31290,"endOffset":31385,"count":64},{"startOffset":31385,"endOffset":31433,"count":0},{"startOffset":31435,"endOffset":32047,"count":0},{"startOffset":32047,"endOffset":32208,"count":64},{"startOffset":32208,"endOffset":32404,"count":0},{"startOffset":32404,"endOffset":32560,"count":64},{"startOffset":32560,"endOffset":33105,"count":0}],"isBlockCoverage":true},{"functionName":"finalizeEsmResolution","ranges":[{"startOffset":33109,"endOffset":33678,"count":10},{"startOffset":33311,"endOffset":33430,"count":0},{"startOffset":33543,"endOffset":33677,"count":0}],"isBlockCoverage":true},{"functionName":"Module.load","ranges":[{"startOffset":34059,"endOffset":34896,"count":55},{"startOffset":34394,"endOffset":34424,"count":0},{"startOffset":34430,"endOffset":34472,"count":0},{"startOffset":34752,"endOffset":34800,"count":0}],"isBlockCoverage":true},{"functionName":"Module.require","ranges":[{"startOffset":35095,"endOffset":35394,"count":102},{"startOffset":35155,"endOffset":35273,"count":0}],"isBlockCoverage":true},{"functionName":"wrapSafe","ranges":[{"startOffset":35584,"endOffset":37521,"count":54},{"startOffset":35668,"endOffset":36404,"count":0},{"startOffset":36944,"endOffset":36990,"count":0},{"startOffset":36991,"endOffset":37032,"count":0},{"startOffset":37034,"endOffset":37097,"count":0},{"startOffset":37183,"endOffset":37281,"count":24},{"startOffset":37315,"endOffset":37519,"count":0}],"isBlockCoverage":true},{"functionName":"importModuleDynamically","ranges":[{"startOffset":35895,"endOffset":36134,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":36617,"endOffset":36870,"count":0}],"isBlockCoverage":false},{"functionName":"Module._compile","ranges":[{"startOffset":37721,"endOffset":39539,"count":54},{"startOffset":37812,"endOffset":37822,"count":0},{"startOffset":37840,"endOffset":37993,"count":0},{"startOffset":38126,"endOffset":38150,"count":0},{"startOffset":38152,"endOffset":38888,"count":0},{"startOffset":39111,"endOffset":39137,"count":1},{"startOffset":39162,"endOffset":39301,"count":0},{"startOffset":39503,"endOffset":39520,"count":1}],"isBlockCoverage":true},{"functionName":"Module._extensions..js","ranges":[{"startOffset":39598,"endOffset":41380,"count":54},{"startOffset":39759,"endOffset":39767,"count":0},{"startOffset":39769,"endOffset":39834,"count":0},{"startOffset":39943,"endOffset":41340,"count":53},{"startOffset":39988,"endOffset":40010,"count":0},{"startOffset":40106,"endOffset":41336,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..json","ranges":[{"startOffset":41444,"endOffset":41850,"count":1},{"startOffset":41554,"endOffset":41564,"count":0},{"startOffset":41582,"endOffset":41684,"count":0},{"startOffset":41767,"endOffset":41848,"count":0}],"isBlockCoverage":true},{"functionName":"Module._initPaths","ranges":[{"startOffset":43434,"endOffset":44399,"count":1},{"startOffset":43475,"endOffset":43500,"count":0},{"startOffset":43552,"endOffset":43575,"count":0},{"startOffset":43783,"endOffset":43825,"count":0},{"startOffset":44124,"endOffset":44266,"count":0}],"isBlockCoverage":true}]},{"scriptId":"64","url":"node:internal/vm","functions":[{"functionName":"internalCompileFunction","ranges":[{"startOffset":556,"endOffset":2879,"count":54},{"startOffset":1151,"endOffset":1200,"count":0},{"startOffset":1304,"endOffset":1566,"count":0},{"startOffset":2045,"endOffset":2118,"count":0},{"startOffset":2145,"endOffset":2202,"count":0},{"startOffset":2258,"endOffset":2331,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1675,"endOffset":1824,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":2813,"endOffset":2846,"count":0}],"isBlockCoverage":false}]},{"scriptId":"65","url":"node:internal/modules/helpers","functions":[{"functionName":"","ranges":[{"startOffset":923,"endOffset":948,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCjsConditions","ranges":[{"startOffset":971,"endOffset":1363,"count":1},{"startOffset":1150,"endOffset":1154,"count":0}],"isBlockCoverage":true},{"functionName":"getCjsConditions","ranges":[{"startOffset":1365,"endOffset":1492,"count":10},{"startOffset":1430,"endOffset":1466,"count":0}],"isBlockCoverage":true},{"functionName":"loadBuiltinModule","ranges":[{"startOffset":1494,"endOffset":1823,"count":24},{"startOffset":1595,"endOffset":1612,"count":0}],"isBlockCoverage":true},{"functionName":"lazyModule","ranges":[{"startOffset":1845,"endOffset":1958,"count":54},{"startOffset":1889,"endOffset":1937,"count":1}],"isBlockCoverage":true},{"functionName":"makeRequireFunction","ranges":[{"startOffset":2207,"endOffset":4418,"count":54},{"startOffset":2346,"endOffset":2409,"count":0},{"startOffset":2443,"endOffset":3714,"count":0}],"isBlockCoverage":true},{"functionName":"require","ranges":[{"startOffset":2586,"endOffset":3709,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":3736,"endOffset":3876,"count":102}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":3885,"endOffset":4031,"count":0}],"isBlockCoverage":false},{"functionName":"paths","ranges":[{"startOffset":4065,"endOffset":4187,"count":0}],"isBlockCoverage":false},{"functionName":"stripBOM","ranges":[{"startOffset":4603,"endOffset":4758,"count":1},{"startOffset":4685,"endOffset":4738,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeReferrerURL","ranges":[{"startOffset":6788,"endOffset":6976,"count":24},{"startOffset":6941,"endOffset":6975,"count":0}],"isBlockCoverage":true}]},{"scriptId":"66","url":"node:internal/modules/package_json_reader","functions":[{"functionName":"read","ranges":[{"startOffset":932,"endOffset":3682,"count":231},{"startOffset":1028,"endOffset":1065,"count":181},{"startOffset":1065,"endOffset":1742,"count":50},{"startOffset":1742,"endOffset":1751,"count":0},{"startOffset":1752,"endOffset":1766,"count":0},{"startOffset":1767,"endOffset":1789,"count":50},{"startOffset":1813,"endOffset":3632,"count":34},{"startOffset":1881,"endOffset":2477,"count":0},{"startOffset":2635,"endOffset":2669,"count":26},{"startOffset":2671,"endOffset":2711,"count":26},{"startOffset":2767,"endOffset":2801,"count":15},{"startOffset":2803,"endOffset":2843,"count":15},{"startOffset":2903,"endOffset":2949,"count":9},{"startOffset":3009,"endOffset":3055,"count":0},{"startOffset":3166,"endOffset":3225,"count":9},{"startOffset":3197,"endOffset":3224,"count":1},{"startOffset":3227,"endOffset":3267,"count":9},{"startOffset":3301,"endOffset":3497,"count":1},{"startOffset":3422,"endOffset":3475,"count":0},{"startOffset":3525,"endOffset":3628,"count":0},{"startOffset":3632,"endOffset":3681,"count":50}],"isBlockCoverage":true}]},{"scriptId":"67","url":"node:internal/modules/esm/utils","functions":[{"functionName":"setCallbackForWrap","ranges":[{"startOffset":696,"endOffset":770,"count":54}],"isBlockCoverage":true},{"functionName":"getDefaultConditions","ranges":[{"startOffset":795,"endOffset":901,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDefaultConditions","ranges":[{"startOffset":1124,"endOffset":1506,"count":1},{"startOffset":1307,"endOffset":1311,"count":0}],"isBlockCoverage":true},{"functionName":"initializeESM","ranges":[{"startOffset":2765,"endOffset":3141,"count":1}],"isBlockCoverage":true},{"functionName":"isLoaderWorker","ranges":[{"startOffset":3143,"endOffset":3198,"count":1}],"isBlockCoverage":true}]},{"scriptId":"68","url":"node:internal/process/pre_execution","functions":[{"functionName":"prepareMainThreadExecution","ranges":[{"startOffset":917,"endOffset":1094,"count":1}],"isBlockCoverage":true},{"functionName":"prepareExecution","ranges":[{"startOffset":1297,"endOffset":3454,"count":1},{"startOffset":2242,"endOffset":2346,"count":0},{"startOffset":3234,"endOffset":3396,"count":0}],"isBlockCoverage":true},{"functionName":"setupSymbolDisposePolyfill","ranges":[{"startOffset":3456,"endOffset":4191,"count":1}],"isBlockCoverage":true},{"functionName":"setupUserModules","ranges":[{"startOffset":4193,"endOffset":4621,"count":1},{"startOffset":4502,"endOffset":4519,"count":0}],"isBlockCoverage":true},{"functionName":"refreshRuntimeOptions","ranges":[{"startOffset":4623,"endOffset":4679,"count":1}],"isBlockCoverage":true},{"functionName":"patchProcessObject","ranges":[{"startOffset":4681,"endOffset":6778,"count":1},{"startOffset":5447,"endOffset":5499,"count":0}],"isBlockCoverage":true},{"functionName":"addReadOnlyProcessAlias","ranges":[{"startOffset":6780,"endOffset":7061,"count":13},{"startOffset":6901,"endOffset":7059,"count":1}],"isBlockCoverage":true},{"functionName":"setupWarningHandler","ranges":[{"startOffset":7063,"endOffset":7583,"count":1},{"startOffset":7438,"endOffset":7577,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7467,"endOffset":7569,"count":0}],"isBlockCoverage":false},{"functionName":"setupFetch","ranges":[{"startOffset":7619,"endOffset":8759,"count":1},{"startOffset":7739,"endOffset":7756,"count":0}],"isBlockCoverage":true},{"functionName":"lazyUndici","ranges":[{"startOffset":7774,"endOffset":7919,"count":0}],"isBlockCoverage":false},{"functionName":"fetch","ranges":[{"startOffset":7923,"endOffset":8018,"count":0}],"isBlockCoverage":false},{"functionName":"lazyInterface","ranges":[{"startOffset":8070,"endOffset":8311,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8171,"endOffset":8221,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8229,"endOffset":8299,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8644,"endOffset":8755,"count":0}],"isBlockCoverage":false},{"functionName":"setupWebCrypto","ranges":[{"startOffset":8863,"endOffset":9815,"count":1},{"startOffset":8998,"endOffset":9015,"count":0},{"startOffset":9504,"endOffset":9813,"count":0}],"isBlockCoverage":true},{"functionName":"cryptoThisCheck","ranges":[{"startOffset":9189,"endOffset":9365,"count":0}],"isBlockCoverage":false},{"functionName":"get crypto","ranges":[{"startOffset":9666,"endOffset":9765,"count":0}],"isBlockCoverage":false},{"functionName":"setupCodeCoverage","ranges":[{"startOffset":9817,"endOffset":10338,"count":1}],"isBlockCoverage":true},{"functionName":"setupCustomEvent","ranges":[{"startOffset":10444,"endOffset":10721,"count":1},{"startOffset":10583,"endOffset":10600,"count":0}],"isBlockCoverage":true},{"functionName":"setupStacktracePrinterOnSigint","ranges":[{"startOffset":10723,"endOffset":10948,"count":1},{"startOffset":10825,"endOffset":10947,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReport","ranges":[{"startOffset":10950,"endOffset":11199,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":11095,"endOffset":11190,"count":0}],"isBlockCoverage":false},{"functionName":"setupDebugEnv","ranges":[{"startOffset":11201,"endOffset":11432,"count":1},{"startOffset":11352,"endOffset":11430,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReportSignalHandlers","ranges":[{"startOffset":11494,"endOffset":11682,"count":1},{"startOffset":11582,"endOffset":11680,"count":0}],"isBlockCoverage":true},{"functionName":"initializeHeapSnapshotSignalHandlers","ranges":[{"startOffset":11684,"endOffset":12265,"count":1},{"startOffset":11819,"endOffset":12263,"count":0}],"isBlockCoverage":true},{"functionName":"doWriteHeapSnapshot","ranges":[{"startOffset":11932,"endOffset":11993,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12185,"endOffset":12257,"count":0}],"isBlockCoverage":false},{"functionName":"setupTraceCategoryState","ranges":[{"startOffset":12267,"endOffset":12526,"count":1}],"isBlockCoverage":true},{"functionName":"setupInspectorHooks","ranges":[{"startOffset":12528,"endOffset":13110,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDeprecations","ranges":[{"startOffset":13305,"endOffset":15257,"count":1},{"startOffset":14017,"endOffset":14319,"count":16},{"startOffset":14062,"endOffset":14294,"count":0},{"startOffset":14636,"endOffset":14833,"count":0},{"startOffset":14861,"endOffset":15255,"count":0}],"isBlockCoverage":true},{"functionName":"setupChildProcessIpcChannel","ranges":[{"startOffset":15259,"endOffset":15824,"count":1},{"startOffset":15335,"endOffset":15822,"count":0}],"isBlockCoverage":true},{"functionName":"initializeClusterIPC","ranges":[{"startOffset":15826,"endOffset":16096,"count":1},{"startOffset":15913,"endOffset":16094,"count":0}],"isBlockCoverage":true},{"functionName":"initializePermission","ranges":[{"startOffset":16098,"endOffset":17981,"count":1},{"startOffset":16240,"endOffset":17601,"count":0}],"isBlockCoverage":true},{"functionName":"binding","ranges":[{"startOffset":16264,"endOffset":16351,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17813,"endOffset":17973,"count":4},{"startOffset":17891,"endOffset":17967,"count":0}],"isBlockCoverage":true},{"functionName":"readPolicyFromDisk","ranges":[{"startOffset":17983,"endOffset":19802,"count":1},{"startOffset":18111,"endOffset":19800,"count":0}],"isBlockCoverage":true},{"functionName":"initializeCJSLoader","ranges":[{"startOffset":19804,"endOffset":19925,"count":1}],"isBlockCoverage":true},{"functionName":"initializeESMLoader","ranges":[{"startOffset":19927,"endOffset":20502,"count":1},{"startOffset":20255,"endOffset":20500,"count":0}],"isBlockCoverage":true},{"functionName":"initializeSourceMapsHandlers","ranges":[{"startOffset":20504,"endOffset":20702,"count":1}],"isBlockCoverage":true},{"functionName":"initializeFrozenIntrinsics","ranges":[{"startOffset":20704,"endOffset":20961,"count":1},{"startOffset":20789,"endOffset":20959,"count":0}],"isBlockCoverage":true},{"functionName":"loadPreloadModules","ranges":[{"startOffset":20963,"endOffset":21311,"count":1},{"startOffset":21157,"endOffset":21309,"count":0}],"isBlockCoverage":true},{"functionName":"markBootstrapComplete","ranges":[{"startOffset":21313,"endOffset":21407,"count":1}],"isBlockCoverage":true}]},{"scriptId":"69","url":"node:internal/vm/module","functions":[{"functionName":"importModuleDynamicallyWrap","ranges":[{"startOffset":11496,"endOffset":11975,"count":54}],"isBlockCoverage":true},{"functionName":"importModuleDynamicallyWrapper","ranges":[{"startOffset":11601,"endOffset":11931,"count":0}],"isBlockCoverage":false}]},{"scriptId":"71","url":"node:internal/modules/run_main","functions":[{"functionName":"resolveMainPath","ranges":[{"startOffset":155,"endOffset":666,"count":1},{"startOffset":495,"endOffset":502,"count":0}],"isBlockCoverage":true},{"functionName":"shouldUseESMLoader","ranges":[{"startOffset":668,"endOffset":1558,"count":1},{"startOffset":1184,"endOffset":1196,"count":0},{"startOffset":1378,"endOffset":1390,"count":0},{"startOffset":1457,"endOffset":1470,"count":0}],"isBlockCoverage":true},{"functionName":"executeUserEntryPoint","ranges":[{"startOffset":2382,"endOffset":2780,"count":1},{"startOffset":2562,"endOffset":2605,"count":0}],"isBlockCoverage":true}]},{"scriptId":"72","url":"node:internal/dns/utils","functions":[{"functionName":"initializeDns","ranges":[{"startOffset":5427,"endOffset":5813,"count":1},{"startOffset":5570,"endOffset":5680,"count":0},{"startOffset":5728,"endOffset":5812,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5753,"endOffset":5809,"count":0}],"isBlockCoverage":false}]},{"scriptId":"74","url":"node:internal/bootstrap/switches/does_own_process_state","functions":[{"functionName":"wrappedCwd","ranges":[{"startOffset":3330,"endOffset":3433,"count":2},{"startOffset":3382,"endOffset":3411,"count":1}],"isBlockCoverage":true}]},{"scriptId":"81","url":"node:internal/main/run_main_module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":793,"count":1}],"isBlockCoverage":false}]},{"scriptId":"82","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/dist/cjs/src/bin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9664,"count":1},{"startOffset":7982,"endOffset":8046,"count":0},{"startOffset":8080,"endOffset":8098,"count":0},{"startOffset":8108,"endOffset":8137,"count":0},{"startOffset":8171,"endOffset":8188,"count":0},{"startOffset":8198,"endOffset":8231,"count":0},{"startOffset":8272,"endOffset":8285,"count":0},{"startOffset":8386,"endOffset":8390,"count":0},{"startOffset":9231,"endOffset":9332,"count":0},{"startOffset":9505,"endOffset":9632,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":7206,"endOffset":7476,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8315,"endOffset":8344,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8420,"endOffset":8448,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8454,"endOffset":8478,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9257,"endOffset":9276,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9305,"endOffset":9324,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9370,"endOffset":9390,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9418,"endOffset":9494,"count":1}],"isBlockCoverage":true}]},{"scriptId":"83","url":"node:internal/modules/esm/resolve","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":36376,"count":1}],"isBlockCoverage":false},{"functionName":"emitTrailingSlashPatternDeprecation","ranges":[{"startOffset":2286,"endOffset":2872,"count":0}],"isBlockCoverage":false},{"functionName":"emitInvalidSegmentDeprecation","ranges":[{"startOffset":2914,"endOffset":3609,"count":0}],"isBlockCoverage":false},{"functionName":"emitLegacyIndexDeprecation","ranges":[{"startOffset":3757,"endOffset":4890,"count":0}],"isBlockCoverage":false},{"functionName":"legacyMainResolve","ranges":[{"startOffset":5981,"endOffset":6741,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResolution","ranges":[{"startOffset":6921,"endOffset":8180,"count":0}],"isBlockCoverage":false},{"functionName":"importNotDefined","ranges":[{"startOffset":8292,"endOffset":8503,"count":0}],"isBlockCoverage":false},{"functionName":"exportsNotFound","ranges":[{"startOffset":8613,"endOffset":8808,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":8975,"endOffset":9358,"count":0}],"isBlockCoverage":false},{"functionName":"invalidPackageTarget","ranges":[{"startOffset":9360,"endOffset":9738,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":10461,"endOffset":13198,"count":10},{"startOffset":10630,"endOffset":10641,"count":0},{"startOffset":10642,"endOffset":10678,"count":0},{"startOffset":10684,"endOffset":10758,"count":0},{"startOffset":10808,"endOffset":11365,"count":0},{"startOffset":11457,"endOffset":12067,"count":0},{"startOffset":12290,"endOffset":12364,"count":0},{"startOffset":12404,"endOffset":13197,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11140,"endOffset":11153,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11666,"endOffset":11679,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11812,"endOffset":11825,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12539,"endOffset":12552,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12779,"endOffset":12792,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13132,"endOffset":13145,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayIndex","ranges":[{"startOffset":13253,"endOffset":13393,"count":34},{"startOffset":13345,"endOffset":13390,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":13657,"endOffset":15905,"count":28},{"startOffset":13850,"endOffset":14004,"count":10},{"startOffset":14004,"endOffset":15788,"count":18},{"startOffset":14036,"endOffset":14874,"count":1},{"startOffset":14067,"endOffset":14093,"count":0},{"startOffset":14413,"endOffset":14561,"count":0},{"startOffset":14601,"endOffset":14628,"count":0},{"startOffset":14663,"endOffset":14720,"count":0},{"startOffset":14754,"endOffset":14816,"count":0},{"startOffset":14824,"endOffset":14874,"count":0},{"startOffset":14874,"endOffset":15788,"count":17},{"startOffset":15027,"endOffset":15255,"count":34},{"startOffset":15085,"endOffset":15249,"count":0},{"startOffset":15298,"endOffset":15713,"count":34},{"startOffset":15355,"endOffset":15377,"count":26},{"startOffset":15379,"endOffset":15707,"count":17},{"startOffset":15660,"endOffset":15669,"count":0},{"startOffset":15713,"endOffset":15788,"count":0},{"startOffset":15788,"endOffset":15904,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":16090,"endOffset":17025,"count":10},{"startOffset":16222,"endOffset":16234,"count":0},{"startOffset":16290,"endOffset":16303,"count":0},{"startOffset":16443,"endOffset":16994,"count":16},{"startOffset":16553,"endOffset":16610,"count":10},{"startOffset":16610,"endOffset":16990,"count":6},{"startOffset":16666,"endOffset":16990,"count":0}],"isBlockCoverage":true},{"functionName":"packageExportsResolve","ranges":[{"startOffset":17235,"endOffset":19794,"count":10},{"startOffset":17447,"endOffset":17474,"count":0},{"startOffset":17876,"endOffset":17950,"count":0},{"startOffset":17981,"endOffset":19793,"count":0}],"isBlockCoverage":true},{"functionName":"patternKeyCompare","ranges":[{"startOffset":19796,"endOffset":20327,"count":0}],"isBlockCoverage":false},{"functionName":"packageImportsResolve","ranges":[{"startOffset":20456,"endOffset":22913,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageType","ranges":[{"startOffset":23018,"endOffset":23131,"count":0}],"isBlockCoverage":false},{"functionName":"parsePackageName","ranges":[{"startOffset":23293,"endOffset":24345,"count":0}],"isBlockCoverage":false},{"functionName":"packageResolve","ranges":[{"startOffset":24507,"endOffset":26579,"count":0}],"isBlockCoverage":false},{"functionName":"isBareSpecifier","ranges":[{"startOffset":26640,"endOffset":26750,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":26752,"endOffset":27023,"count":0}],"isBlockCoverage":false},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":27025,"endOffset":27208,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolve","ranges":[{"startOffset":27401,"endOffset":28192,"count":0}],"isBlockCoverage":false},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":28338,"endOffset":29795,"count":0}],"isBlockCoverage":false},{"functionName":"checkIfDisallowedImport","ranges":[{"startOffset":29857,"endOffset":31229,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfInvalidParentURL","ranges":[{"startOffset":31304,"endOffset":31577,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":31580,"endOffset":35589,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":35981,"endOffset":36372,"count":0}],"isBlockCoverage":false}]},{"scriptId":"84","url":"node:internal/modules/esm/package_config","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1412,"count":1}],"isBlockCoverage":false},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":269,"endOffset":1362,"count":0}],"isBlockCoverage":false}]},{"scriptId":"85","url":"node:internal/modules/esm/get_format","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4514,"count":1}],"isBlockCoverage":false},{"functionName":"node:","ranges":[{"startOffset":900,"endOffset":931,"count":0}],"isBlockCoverage":false},{"functionName":"getDataProtocolModuleFormat","ranges":[{"startOffset":996,"endOffset":1212,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":1487,"endOffset":1846,"count":0}],"isBlockCoverage":false},{"functionName":"getFileProtocolModuleFormat","ranges":[{"startOffset":1970,"endOffset":3175,"count":0}],"isBlockCoverage":false},{"functionName":"getHttpProtocolModuleFormat","ranges":[{"startOffset":3311,"endOffset":3656,"count":0}],"isBlockCoverage":false},{"functionName":"defaultGetFormatWithoutErrors","ranges":[{"startOffset":3801,"endOffset":4036,"count":0}],"isBlockCoverage":false},{"functionName":"defaultGetFormat","ranges":[{"startOffset":4181,"endOffset":4404,"count":0}],"isBlockCoverage":false}]},{"scriptId":"86","url":"node:internal/modules/esm/formats","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":856,"count":1}],"isBlockCoverage":false},{"functionName":"mimeToFormat","ranges":[{"startOffset":468,"endOffset":794,"count":0}],"isBlockCoverage":false}]},{"scriptId":"87","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/foreground-child/dist/cjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4976,"count":1},{"startOffset":603,"endOffset":626,"count":0}],"isBlockCoverage":true},{"functionName":"__importDefault","ranges":[{"startOffset":70,"endOffset":151,"count":1},{"startOffset":122,"endOffset":127,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeFgArgs","ranges":[{"startOffset":784,"endOffset":1470,"count":1},{"startOffset":910,"endOffset":984,"count":0},{"startOffset":1058,"endOffset":1188,"count":0},{"startOffset":1235,"endOffset":1295,"count":0},{"startOffset":1328,"endOffset":1413,"count":0}],"isBlockCoverage":true},{"functionName":"cleanup","ranges":[{"startOffset":853,"endOffset":862,"count":1}],"isBlockCoverage":true},{"functionName":"foregroundChild","ranges":[{"startOffset":1515,"endOffset":3953,"count":1},{"startOffset":1694,"endOffset":1738,"count":0},{"startOffset":3649,"endOffset":3933,"count":0}],"isBlockCoverage":true},{"functionName":"childHangup","ranges":[{"startOffset":1862,"endOffset":2103,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2266,"endOffset":3624,"count":1},{"startOffset":2369,"endOffset":2400,"count":0},{"startOffset":2535,"endOffset":2550,"count":0},{"startOffset":2649,"endOffset":2656,"count":0},{"startOffset":2699,"endOffset":2761,"count":0},{"startOffset":2804,"endOffset":2866,"count":0},{"startOffset":2887,"endOffset":3556,"count":0},{"startOffset":3602,"endOffset":3606,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3283,"endOffset":3292,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3726,"endOffset":3811,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3844,"endOffset":3925,"count":0}],"isBlockCoverage":false},{"functionName":"proxySignals","ranges":[{"startOffset":4084,"endOffset":4854,"count":1},{"startOffset":4181,"endOffset":4714,"count":31},{"startOffset":4666,"endOffset":4679,"count":1}],"isBlockCoverage":true},{"functionName":"listener","ranges":[{"startOffset":4208,"endOffset":4446,"count":1},{"startOffset":4390,"endOffset":4403,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4726,"endOffset":4851,"count":1},{"startOffset":4783,"endOffset":4845,"count":30}],"isBlockCoverage":true},{"functionName":"isPromise","ranges":[{"startOffset":4874,"endOffset":4941,"count":1},{"startOffset":4885,"endOffset":4909,"count":0},{"startOffset":4910,"endOffset":4941,"count":0}],"isBlockCoverage":true}]},{"scriptId":"88","url":"node:child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27198,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1936,"endOffset":1965,"count":1}],"isBlockCoverage":true},{"functionName":"fork","ranges":[{"startOffset":3430,"endOffset":5105,"count":0}],"isBlockCoverage":false},{"functionName":"_forkChild","ranges":[{"startOffset":5107,"endOffset":5596,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecArgs","ranges":[{"startOffset":5598,"endOffset":6112,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":6649,"endOffset":6896,"count":0}],"isBlockCoverage":false},{"functionName":"customPromiseExecFunction","ranges":[{"startOffset":6932,"endOffset":7296,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6953,"endOffset":7293,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecFileArgs","ranges":[{"startOffset":7433,"endOffset":8331,"count":0}],"isBlockCoverage":false},{"functionName":"execFile","ranges":[{"startOffset":8944,"endOffset":13708,"count":0}],"isBlockCoverage":false},{"functionName":"copyProcessEnvToEnv","ranges":[{"startOffset":13852,"endOffset":14052,"count":2},{"startOffset":13950,"endOffset":14007,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeSpawnArguments","ranges":[{"startOffset":14054,"endOffset":19321,"count":2},{"startOffset":14215,"endOffset":14280,"count":0},{"startOffset":14351,"endOffset":14542,"count":0},{"startOffset":14622,"endOffset":14645,"count":0},{"startOffset":14774,"endOffset":14827,"count":0},{"startOffset":14897,"endOffset":14961,"count":0},{"startOffset":15024,"endOffset":15048,"count":0},{"startOffset":15050,"endOffset":15128,"count":0},{"startOffset":15191,"endOffset":15215,"count":0},{"startOffset":15217,"endOffset":15295,"count":0},{"startOffset":15362,"endOffset":15405,"count":1},{"startOffset":15406,"endOffset":15448,"count":0},{"startOffset":15450,"endOffset":15581,"count":0},{"startOffset":15645,"endOffset":15765,"count":0},{"startOffset":15841,"endOffset":15911,"count":0},{"startOffset":16051,"endOffset":16159,"count":0},{"startOffset":16182,"endOffset":17044,"count":1},{"startOffset":16393,"endOffset":16805,"count":0},{"startOffset":16866,"endOffset":16887,"count":0},{"startOffset":16943,"endOffset":16967,"count":0},{"startOffset":17087,"endOffset":17140,"count":0},{"startOffset":17485,"endOffset":18089,"count":0},{"startOffset":18186,"endOffset":18229,"count":184},{"startOffset":18267,"endOffset":18732,"count":0},{"startOffset":18763,"endOffset":19016,"count":184}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18511,"endOffset":18720,"count":0}],"isBlockCoverage":false},{"functionName":"abortChildProcess","ranges":[{"startOffset":19323,"endOffset":19579,"count":0}],"isBlockCoverage":false},{"functionName":"spawn","ranges":[{"startOffset":20134,"endOffset":21334,"count":2},{"startOffset":20500,"endOffset":20874,"count":0},{"startOffset":20898,"endOffset":21315,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20533,"endOffset":20721,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20765,"endOffset":20868,"count":0}],"isBlockCoverage":false},{"functionName":"onAbortListener","ranges":[{"startOffset":21210,"endOffset":21311,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":22094,"endOffset":23602,"count":0}],"isBlockCoverage":false},{"functionName":"checkExecSyncError","ranges":[{"startOffset":23605,"endOffset":23991,"count":0}],"isBlockCoverage":false},{"functionName":"execFileSync","ranges":[{"startOffset":24504,"endOffset":24968,"count":0}],"isBlockCoverage":false},{"functionName":"execSync","ranges":[{"startOffset":25466,"endOffset":25842,"count":0}],"isBlockCoverage":false},{"functionName":"validateArgumentNullCheck","ranges":[{"startOffset":25845,"endOffset":26068,"count":375},{"startOffset":25927,"endOffset":25968,"count":374},{"startOffset":25970,"endOffset":26066,"count":0}],"isBlockCoverage":true},{"functionName":"validateArgumentsNullCheck","ranges":[{"startOffset":26071,"endOffset":26233,"count":2},{"startOffset":26165,"endOffset":26231,"count":4}],"isBlockCoverage":true},{"functionName":"validateTimeout","ranges":[{"startOffset":26236,"endOffset":26424,"count":2},{"startOffset":26294,"endOffset":26340,"count":0},{"startOffset":26342,"endOffset":26422,"count":0}],"isBlockCoverage":true},{"functionName":"validateMaxBuffer","ranges":[{"startOffset":26427,"endOffset":26700,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeKillSignal","ranges":[{"startOffset":26703,"endOffset":27066,"count":2},{"startOffset":26817,"endOffset":26867,"count":0},{"startOffset":26897,"endOffset":27064,"count":0}],"isBlockCoverage":true}]},{"scriptId":"89","url":"node:internal/child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31777,"count":1}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2500,"endOffset":2559,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2566,"endOffset":2620,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2682,"endOffset":2749,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2756,"endOffset":2897,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2927,"endOffset":4481,"count":0}],"isBlockCoverage":false},{"functionName":"postSend","ranges":[{"startOffset":4488,"endOffset":5234,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5241,"endOffset":5698,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5763,"endOffset":5822,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5829,"endOffset":5883,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5948,"endOffset":6068,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":6075,"endOffset":6234,"count":0}],"isBlockCoverage":false},{"functionName":"stdioStringToArray","ranges":[{"startOffset":6245,"endOffset":6660,"count":1},{"startOffset":6453,"endOffset":6513,"count":0},{"startOffset":6518,"endOffset":6581,"count":0},{"startOffset":6602,"endOffset":6639,"count":0}],"isBlockCoverage":true},{"functionName":"ChildProcess","ranges":[{"startOffset":6662,"endOffset":8151,"count":2},{"startOffset":8081,"endOffset":8149,"count":0}],"isBlockCoverage":true},{"functionName":"ChildProcess._handle.onexit","ranges":[{"startOffset":7003,"endOffset":8037,"count":2},{"startOffset":7051,"endOffset":7094,"count":0},{"startOffset":7161,"endOffset":7196,"count":0},{"startOffset":7272,"endOffset":7564,"count":0}],"isBlockCoverage":true},{"functionName":"flushStdio","ranges":[{"startOffset":8274,"endOffset":8752,"count":1},{"startOffset":8364,"endOffset":8371,"count":0},{"startOffset":8414,"endOffset":8750,"count":3},{"startOffset":8655,"endOffset":8674,"count":0},{"startOffset":8675,"endOffset":8700,"count":0},{"startOffset":8725,"endOffset":8750,"count":0}],"isBlockCoverage":true},{"functionName":"createSocket","ranges":[{"startOffset":8755,"endOffset":8845,"count":0}],"isBlockCoverage":false},{"functionName":"getHandleWrapType","ranges":[{"startOffset":8848,"endOffset":9077,"count":0}],"isBlockCoverage":false},{"functionName":"closePendingHandle","ranges":[{"startOffset":9079,"endOffset":9192,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.spawn","ranges":[{"startOffset":9226,"endOffset":12793,"count":2},{"startOffset":9377,"endOffset":9386,"count":0},{"startOffset":9721,"endOffset":10106,"count":0},{"startOffset":10224,"endOffset":10254,"count":0},{"startOffset":10595,"endOffset":10852,"count":0},{"startOffset":10867,"endOffset":11154,"count":0},{"startOffset":11275,"endOffset":12189,"count":6},{"startOffset":11340,"endOffset":11371,"count":3},{"startOffset":11371,"endOffset":11422,"count":0},{"startOffset":11422,"endOffset":11643,"count":3},{"startOffset":11643,"endOffset":11905,"count":0},{"startOffset":11905,"endOffset":11930,"count":3},{"startOffset":11930,"endOffset":12185,"count":0},{"startOffset":12257,"endOffset":12278,"count":0},{"startOffset":12354,"endOffset":12375,"count":0},{"startOffset":12451,"endOffset":12472,"count":0},{"startOffset":12543,"endOffset":12653,"count":6},{"startOffset":12634,"endOffset":12651,"count":0},{"startOffset":12737,"endOffset":12776,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12124,"endOffset":12169,"count":0}],"isBlockCoverage":false},{"functionName":"onErrorNT","ranges":[{"startOffset":12797,"endOffset":12858,"count":0}],"isBlockCoverage":false},{"functionName":"onSpawnNT","ranges":[{"startOffset":12861,"endOffset":12911,"count":2}],"isBlockCoverage":true},{"functionName":"ChildProcess.kill","ranges":[{"startOffset":12944,"endOffset":13609,"count":2},{"startOffset":12988,"endOffset":12993,"count":0},{"startOffset":13039,"endOffset":13050,"count":0},{"startOffset":13080,"endOffset":13561,"count":1},{"startOffset":13217,"endOffset":13557,"count":0},{"startOffset":13561,"endOffset":13608,"count":1}],"isBlockCoverage":true},{"functionName":"ChildProcess.<computed>","ranges":[{"startOffset":13652,"endOffset":13709,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.ref","ranges":[{"startOffset":13742,"endOffset":13796,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.unref","ranges":[{"startOffset":13831,"endOffset":13887,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":13890,"endOffset":14887,"count":0}],"isBlockCoverage":false},{"functionName":"setupChannel","ranges":[{"startOffset":15035,"endOffset":27155,"count":0}],"isBlockCoverage":false},{"functionName":"isInternal","ranges":[{"startOffset":27190,"endOffset":27500,"count":0}],"isBlockCoverage":false},{"functionName":"getValidStdio","ranges":[{"startOffset":27534,"endOffset":30459,"count":2},{"startOffset":27666,"endOffset":27800,"count":1},{"startOffset":27742,"endOffset":27800,"count":0},{"startOffset":28044,"endOffset":28081,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28194,"endOffset":30418,"count":6},{"startOffset":28452,"endOffset":28500,"count":0},{"startOffset":28530,"endOffset":30397,"count":3},{"startOffset":28701,"endOffset":28955,"count":0},{"startOffset":28982,"endOffset":29376,"count":0},{"startOffset":29407,"endOffset":29496,"count":0},{"startOffset":29532,"endOffset":29563,"count":0},{"startOffset":29665,"endOffset":29675,"count":0},{"startOffset":29692,"endOffset":30397,"count":0}],"isBlockCoverage":true},{"functionName":"cleanup","ranges":[{"startOffset":28219,"endOffset":28411,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketList","ranges":[{"startOffset":30462,"endOffset":30778,"count":0}],"isBlockCoverage":false},{"functionName":"maybeClose","ranges":[{"startOffset":30781,"endOffset":30982,"count":2}],"isBlockCoverage":true},{"functionName":"spawnSync","ranges":[{"startOffset":30984,"endOffset":31651,"count":0}],"isBlockCoverage":false}]},{"scriptId":"90","url":"node:net","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":65921,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1612,"endOffset":1637,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":4029,"endOffset":4037,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":4446,"endOffset":4540,"count":0}],"isBlockCoverage":false},{"functionName":"createHandle","ranges":[{"startOffset":4542,"endOffset":4925,"count":0}],"isBlockCoverage":false},{"functionName":"getNewAsyncId","ranges":[{"startOffset":4928,"endOffset":5066,"count":2},{"startOffset":5023,"endOffset":5041,"count":0}],"isBlockCoverage":true},{"functionName":"isPipeName","ranges":[{"startOffset":5069,"endOffset":5152,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":5353,"endOffset":5457,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":5680,"endOffset":6081,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultAutoSelectFamily","ranges":[{"startOffset":6083,"endOffset":6158,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamily","ranges":[{"startOffset":6160,"endOffset":6276,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6278,"endOffset":6381,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6383,"endOffset":6570,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArgs","ranges":[{"startOffset":7064,"endOffset":7790,"count":0}],"isBlockCoverage":false},{"functionName":"initSocketHandle","ranges":[{"startOffset":7862,"endOffset":8465,"count":1},{"startOffset":8218,"endOffset":8459,"count":0}],"isBlockCoverage":true},{"functionName":"closeSocketHandle","ranges":[{"startOffset":8467,"endOffset":8807,"count":0}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":9059,"endOffset":13678,"count":1},{"startOffset":9119,"endOffset":9146,"count":0},{"startOffset":9174,"endOffset":9303,"count":0},{"startOffset":9373,"endOffset":9621,"count":0},{"startOffset":9683,"endOffset":9879,"count":0},{"startOffset":10441,"endOffset":10467,"count":0},{"startOffset":10981,"endOffset":12221,"count":0},{"startOffset":12308,"endOffset":12385,"count":0},{"startOffset":12386,"endOffset":12432,"count":0},{"startOffset":12434,"endOffset":12649,"count":0},{"startOffset":13217,"endOffset":13386,"count":0},{"startOffset":13418,"endOffset":13445,"count":0},{"startOffset":13473,"endOffset":13525,"count":0}],"isBlockCoverage":true},{"functionName":"_unrefTimer","ranges":[{"startOffset":13851,"endOffset":13981,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._final","ranges":[{"startOffset":14101,"endOffset":14717,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":14720,"endOffset":14866,"count":0}],"isBlockCoverage":false},{"functionName":"writeAfterFIN","ranges":[{"startOffset":15073,"endOffset":15581,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._onTimeout","ranges":[{"startOffset":15663,"endOffset":16167,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setNoDelay","ranges":[{"startOffset":16201,"endOffset":16578,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setKeepAlive","ranges":[{"startOffset":16614,"endOffset":17220,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":17251,"endOffset":17295,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17381,"endOffset":17425,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17505,"endOffset":17561,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17672,"endOffset":17987,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18076,"endOffset":18156,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18244,"endOffset":18289,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadStart","ranges":[{"startOffset":18297,"endOffset":18543,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._read","ranges":[{"startOffset":18635,"endOffset":18954,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.end","ranges":[{"startOffset":18981,"endOffset":19137,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resetAndDestroy","ranges":[{"startOffset":19175,"endOffset":19525,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.pause","ranges":[{"startOffset":19553,"endOffset":19887,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resume","ranges":[{"startOffset":19917,"endOffset":20101,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.read","ranges":[{"startOffset":20129,"endOffset":20315,"count":0}],"isBlockCoverage":false},{"functionName":"onReadableStreamEnd","ranges":[{"startOffset":20362,"endOffset":20461,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.destroySoon","ranges":[{"startOffset":20495,"endOffset":20642,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._destroy","ranges":[{"startOffset":20674,"endOffset":22184,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._reset","ranges":[{"startOffset":22213,"endOffset":22312,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getpeername","ranges":[{"startOffset":22347,"endOffset":22644,"count":0}],"isBlockCoverage":false},{"functionName":"protoGetter","ranges":[{"startOffset":22647,"endOffset":22829,"count":9}],"isBlockCoverage":true},{"functionName":"bytesRead","ranges":[{"startOffset":22856,"endOffset":22947,"count":0}],"isBlockCoverage":false},{"functionName":"remoteAddress","ranges":[{"startOffset":22980,"endOffset":23046,"count":0}],"isBlockCoverage":false},{"functionName":"remoteFamily","ranges":[{"startOffset":23078,"endOffset":23142,"count":0}],"isBlockCoverage":false},{"functionName":"remotePort","ranges":[{"startOffset":23172,"endOffset":23232,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getsockname","ranges":[{"startOffset":23269,"endOffset":23545,"count":0}],"isBlockCoverage":false},{"functionName":"localAddress","ranges":[{"startOffset":23577,"endOffset":23642,"count":0}],"isBlockCoverage":false},{"functionName":"localPort","ranges":[{"startOffset":23672,"endOffset":23731,"count":0}],"isBlockCoverage":false},{"functionName":"localFamily","ranges":[{"startOffset":23762,"endOffset":23825,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":23866,"endOffset":23913,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":23949,"endOffset":24861,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writev","ranges":[{"startOffset":24892,"endOffset":24960,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._write","ranges":[{"startOffset":24990,"endOffset":25071,"count":0}],"isBlockCoverage":false},{"functionName":"_bytesDispatched","ranges":[{"startOffset":25264,"endOffset":25368,"count":0}],"isBlockCoverage":false},{"functionName":"bytesWritten","ranges":[{"startOffset":25400,"endOffset":26329,"count":0}],"isBlockCoverage":false},{"functionName":"checkBindError","ranges":[{"startOffset":26334,"endOffset":27133,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnect","ranges":[{"startOffset":27136,"endOffset":29131,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultiple","ranges":[{"startOffset":29134,"endOffset":31870,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":31899,"endOffset":33495,"count":0}],"isBlockCoverage":false},{"functionName":"reinitializeHandle","ranges":[{"startOffset":33538,"endOffset":33692,"count":0}],"isBlockCoverage":false},{"functionName":"socketToDnsFamily","ranges":[{"startOffset":33695,"endOffset":33841,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnect","ranges":[{"startOffset":33843,"endOffset":37774,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnectMultiple","ranges":[{"startOffset":37776,"endOffset":41750,"count":0}],"isBlockCoverage":false},{"functionName":"connectErrorNT","ranges":[{"startOffset":41752,"endOffset":41811,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":41837,"endOffset":42024,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":42053,"endOffset":42246,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnect","ranges":[{"startOffset":42250,"endOffset":43831,"count":0}],"isBlockCoverage":false},{"functionName":"addClientAbortSignalOption","ranges":[{"startOffset":43833,"endOffset":44256,"count":0}],"isBlockCoverage":false},{"functionName":"createConnectionError","ranges":[{"startOffset":44258,"endOffset":44759,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnectMultiple","ranges":[{"startOffset":44761,"endOffset":45903,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultipleTimeout","ranges":[{"startOffset":45905,"endOffset":46217,"count":0}],"isBlockCoverage":false},{"functionName":"addServerAbortSignalOption","ranges":[{"startOffset":46219,"endOffset":46662,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":46664,"endOffset":48251,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":48362,"endOffset":48427,"count":0}],"isBlockCoverage":false},{"functionName":"createServerHandle","ranges":[{"startOffset":48495,"endOffset":49947,"count":0}],"isBlockCoverage":false},{"functionName":"setupListenHandle","ranges":[{"startOffset":49949,"endOffset":52300,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":52367,"endOffset":52429,"count":0}],"isBlockCoverage":false},{"functionName":"emitListeningNT","ranges":[{"startOffset":52432,"endOffset":52547,"count":0}],"isBlockCoverage":false},{"functionName":"listenInCluster","ranges":[{"startOffset":52550,"endOffset":53810,"count":0}],"isBlockCoverage":false},{"functionName":"Server.listen","ranges":[{"startOffset":53839,"endOffset":57671,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndListen","ranges":[{"startOffset":57674,"endOffset":58086,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":58168,"endOffset":58211,"count":0}],"isBlockCoverage":false},{"functionName":"Server.address","ranges":[{"startOffset":58287,"endOffset":58576,"count":0}],"isBlockCoverage":false},{"functionName":"onconnection","ranges":[{"startOffset":58579,"endOffset":60478,"count":0}],"isBlockCoverage":false},{"functionName":"Server.getConnections","ranges":[{"startOffset":60627,"endOffset":61380,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":61409,"endOffset":62276,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":62318,"endOffset":62438,"count":0}],"isBlockCoverage":false},{"functionName":"Server._emitCloseIfDrained","ranges":[{"startOffset":62480,"endOffset":62866,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":62870,"endOffset":62953,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":63012,"endOffset":63174,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":63396,"endOffset":63432,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":63436,"endOffset":63477,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":63557,"endOffset":63588,"count":8}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":63592,"endOffset":63628,"count":1}],"isBlockCoverage":true},{"functionName":"Server._setupWorker","ranges":[{"startOffset":63667,"endOffset":63908,"count":0}],"isBlockCoverage":false},{"functionName":"Server.ref","ranges":[{"startOffset":63934,"endOffset":64032,"count":0}],"isBlockCoverage":false},{"functionName":"Server.unref","ranges":[{"startOffset":64060,"endOffset":64159,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":64301,"endOffset":64970,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":65009,"endOffset":65250,"count":0}],"isBlockCoverage":false},{"functionName":"get BlockList","ranges":[{"startOffset":65379,"endOffset":65481,"count":0}],"isBlockCoverage":false},{"functionName":"get SocketAddress","ranges":[{"startOffset":65485,"endOffset":65607,"count":0}],"isBlockCoverage":false}]},{"scriptId":"91","url":"node:stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4784,"count":1}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":2402,"endOffset":2558,"count":0}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":2983,"endOffset":3117,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4105,"endOffset":4137,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4235,"endOffset":4276,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4369,"endOffset":4410,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":4575,"endOffset":4782,"count":0}],"isBlockCoverage":false}]},{"scriptId":"92","url":"node:internal/streams/operators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10772,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":1019,"endOffset":1599,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":1601,"endOffset":4704,"count":0}],"isBlockCoverage":false},{"functionName":"asIndexedPairs","ranges":[{"startOffset":4706,"endOffset":5179,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":5181,"endOffset":5329,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":5331,"endOffset":5659,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":5661,"endOffset":5803,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":5805,"endOffset":6175,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":6177,"endOffset":6504,"count":0}],"isBlockCoverage":false},{"functionName":"ReduceAwareErrMissingArgs","ranges":[{"startOffset":6720,"endOffset":6834,"count":0}],"isBlockCoverage":false},{"functionName":"reduce","ranges":[{"startOffset":6838,"endOffset":8280,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":8282,"endOffset":8711,"count":0}],"isBlockCoverage":false},{"functionName":"flatMap","ranges":[{"startOffset":8713,"endOffset":8907,"count":0}],"isBlockCoverage":false},{"functionName":"toIntegerOrInfinity","ranges":[{"startOffset":8909,"endOffset":9231,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":9233,"endOffset":9781,"count":0}],"isBlockCoverage":false},{"functionName":"take","ranges":[{"startOffset":9783,"endOffset":10453,"count":0}],"isBlockCoverage":false}]},{"scriptId":"93","url":"node:internal/abort_controller","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12413,"count":1}],"isBlockCoverage":false},{"functionName":"lazyMessageChannel","ranges":[{"startOffset":1574,"endOffset":1707,"count":0}],"isBlockCoverage":false},{"functionName":"lazyMakeTransferable","ranges":[{"startOffset":1709,"endOffset":1867,"count":0}],"isBlockCoverage":false},{"functionName":"customInspect","ranges":[{"startOffset":2337,"endOffset":2596,"count":0}],"isBlockCoverage":false},{"functionName":"validateThisAbortSignal","ranges":[{"startOffset":2598,"endOffset":2723,"count":0}],"isBlockCoverage":false},{"functionName":"setWeakAbortSignalTimeout","ranges":[{"startOffset":3305,"endOffset":3705,"count":0}],"isBlockCoverage":false},{"functionName":"AbortSignal","ranges":[{"startOffset":3749,"endOffset":3809,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":3846,"endOffset":3929,"count":0}],"isBlockCoverage":false},{"functionName":"get reason","ranges":[{"startOffset":3962,"endOffset":4041,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfAborted","ranges":[{"startOffset":4045,"endOffset":4161,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4165,"endOffset":4294,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":4372,"endOffset":4516,"count":0}],"isBlockCoverage":false},{"functionName":"timeout","ranges":[{"startOffset":4594,"endOffset":4856,"count":0}],"isBlockCoverage":false},{"functionName":"any","ranges":[{"startOffset":4943,"endOffset":6278,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6282,"endOffset":7050,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7054,"endOffset":7408,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7412,"endOffset":8019,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8023,"endOffset":8275,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8279,"endOffset":8727,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal","ranges":[{"startOffset":8731,"endOffset":8815,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal.<computed>","ranges":[{"startOffset":8860,"endOffset":8868,"count":0}],"isBlockCoverage":false},{"functionName":"createAbortSignal","ranges":[{"startOffset":9346,"endOffset":9759,"count":0}],"isBlockCoverage":false},{"functionName":"abortSignal","ranges":[{"startOffset":9761,"endOffset":10123,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":10125,"endOffset":10781,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortSignal","ranges":[{"startOffset":10929,"endOffset":11121,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortController","ranges":[{"startOffset":11193,"endOffset":11282,"count":0}],"isBlockCoverage":false},{"functionName":"aborted","ranges":[{"startOffset":11376,"endOffset":11964,"count":0}],"isBlockCoverage":false}]},{"scriptId":"94","url":"node:internal/streams/end-of-stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8360,"count":1}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":891,"endOffset":986,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":1000,"endOffset":1008,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":1011,"endOffset":6953,"count":0}],"isBlockCoverage":false},{"functionName":"eosWeb","ranges":[{"startOffset":6955,"endOffset":7840,"count":0}],"isBlockCoverage":false},{"functionName":"finished","ranges":[{"startOffset":7842,"endOffset":8300,"count":0}],"isBlockCoverage":false}]},{"scriptId":"95","url":"node:internal/streams/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8416,"count":1}],"isBlockCoverage":false},{"functionName":"isReadableNodeStream","ranges":[{"startOffset":774,"endOffset":1191,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableNodeStream","ranges":[{"startOffset":1193,"endOffset":1413,"count":0}],"isBlockCoverage":false},{"functionName":"isDuplexNodeStream","ranges":[{"startOffset":1415,"endOffset":1614,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeStream","ranges":[{"startOffset":1616,"endOffset":1887,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableStream","ranges":[{"startOffset":1889,"endOffset":2103,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableStream","ranges":[{"startOffset":2105,"endOffset":2273,"count":0}],"isBlockCoverage":false},{"functionName":"isTransformStream","ranges":[{"startOffset":2275,"endOffset":2442,"count":0}],"isBlockCoverage":false},{"functionName":"isWebStream","ranges":[{"startOffset":2444,"endOffset":2556,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":2558,"endOffset":2888,"count":0}],"isBlockCoverage":false},{"functionName":"isDestroyed","ranges":[{"startOffset":2890,"endOffset":3153,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableEnded","ranges":[{"startOffset":3177,"endOffset":3468,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableFinished","ranges":[{"startOffset":3496,"endOffset":3893,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableEnded","ranges":[{"startOffset":3922,"endOffset":4223,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableFinished","ranges":[{"startOffset":4248,"endOffset":4596,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":4598,"endOffset":4898,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":4900,"endOffset":5197,"count":0}],"isBlockCoverage":false},{"functionName":"isFinished","ranges":[{"startOffset":5199,"endOffset":5513,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableErrored","ranges":[{"startOffset":5515,"endOffset":5727,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableErrored","ranges":[{"startOffset":5729,"endOffset":5941,"count":0}],"isBlockCoverage":false},{"functionName":"isClosed","ranges":[{"startOffset":5943,"endOffset":6448,"count":0}],"isBlockCoverage":false},{"functionName":"isOutgoingMessage","ranges":[{"startOffset":6450,"endOffset":6702,"count":0}],"isBlockCoverage":false},{"functionName":"isServerResponse","ranges":[{"startOffset":6704,"endOffset":6831,"count":0}],"isBlockCoverage":false},{"functionName":"isServerRequest","ranges":[{"startOffset":6833,"endOffset":7021,"count":0}],"isBlockCoverage":false},{"functionName":"willEmitClose","ranges":[{"startOffset":7023,"endOffset":7361,"count":0}],"isBlockCoverage":false},{"functionName":"isDisturbed","ranges":[{"startOffset":7363,"endOffset":7508,"count":0}],"isBlockCoverage":false},{"functionName":"isErrored","ranges":[{"startOffset":7510,"endOffset":7815,"count":0}],"isBlockCoverage":false}]},{"scriptId":"96","url":"node:internal/streams/compose","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5451,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":543,"endOffset":5449,"count":0}],"isBlockCoverage":false}]},{"scriptId":"97","url":"node:internal/streams/pipeline","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12326,"count":1}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":1058,"endOffset":1487,"count":0}],"isBlockCoverage":false},{"functionName":"popCallback","ranges":[{"startOffset":1489,"endOffset":1817,"count":0}],"isBlockCoverage":false},{"functionName":"makeAsyncIterable","ranges":[{"startOffset":1819,"endOffset":2105,"count":0}],"isBlockCoverage":false},{"functionName":"fromReadable","ranges":[{"startOffset":2107,"endOffset":2281,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToNode","ranges":[{"startOffset":2283,"endOffset":3327,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToWeb","ranges":[{"startOffset":3329,"endOffset":3927,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":3929,"endOffset":4022,"count":0}],"isBlockCoverage":false},{"functionName":"pipelineImpl","ranges":[{"startOffset":4024,"endOffset":10476,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":10478,"endOffset":12279,"count":0}],"isBlockCoverage":false}]},{"scriptId":"98","url":"node:internal/streams/destroy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6826,"count":1}],"isBlockCoverage":false},{"functionName":"checkError","ranges":[{"startOffset":360,"endOffset":671,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":781,"endOffset":1568,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":1570,"endOffset":2184,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseNT","ranges":[{"startOffset":2186,"endOffset":2273,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":2275,"endOffset":2523,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":2525,"endOffset":2800,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":2802,"endOffset":3492,"count":1}],"isBlockCoverage":true},{"functionName":"errorOrDestroy","ranges":[{"startOffset":3494,"endOffset":4413,"count":0}],"isBlockCoverage":false},{"functionName":"construct","ranges":[{"startOffset":4415,"endOffset":4821,"count":2},{"startOffset":4512,"endOffset":4820,"count":0}],"isBlockCoverage":true},{"functionName":"constructNT","ranges":[{"startOffset":4823,"endOffset":5570,"count":0}],"isBlockCoverage":false},{"functionName":"emitConstructNT","ranges":[{"startOffset":5572,"endOffset":5635,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":5637,"endOffset":5733,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseLegacy","ranges":[{"startOffset":5735,"endOffset":5795,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseLegacy","ranges":[{"startOffset":5797,"endOffset":5917,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":5952,"endOffset":6734,"count":0}],"isBlockCoverage":false}]},{"scriptId":"99","url":"node:internal/streams/duplex","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4938,"count":1}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":1996,"endOffset":2663,"count":1},{"startOffset":2060,"endOffset":2087,"count":0},{"startOffset":2266,"endOffset":2402,"count":0},{"startOffset":2440,"endOffset":2615,"count":0},{"startOffset":2619,"endOffset":2661,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3811,"endOffset":4023,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4029,"endOffset":4290,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":4364,"endOffset":4528,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.fromWeb","ranges":[{"startOffset":4547,"endOffset":4665,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.toWeb","ranges":[{"startOffset":4683,"endOffset":4772,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.from","ranges":[{"startOffset":4805,"endOffset":4936,"count":0}],"isBlockCoverage":false}]},{"scriptId":"100","url":"node:internal/streams/readable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42109,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1799,"endOffset":1824,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2617,"endOffset":2625,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableState","ranges":[{"startOffset":2669,"endOffset":6608,"count":1},{"startOffset":3068,"endOffset":3111,"count":0},{"startOffset":3644,"endOffset":3680,"count":0},{"startOffset":5988,"endOffset":6147,"count":0},{"startOffset":6507,"endOffset":6606,"count":0}],"isBlockCoverage":true},{"functionName":"Readable","ranges":[{"startOffset":6611,"endOffset":7499,"count":1},{"startOffset":6679,"endOffset":6708,"count":0},{"startOffset":7031,"endOffset":7057,"count":0},{"startOffset":7112,"endOffset":7144,"count":0},{"startOffset":7201,"endOffset":7237,"count":0},{"startOffset":7262,"endOffset":7274,"count":0},{"startOffset":7282,"endOffset":7319,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7386,"endOffset":7495,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._destroy","ranges":[{"startOffset":7636,"endOffset":7668,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":7719,"endOffset":7757,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":7801,"endOffset":8057,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":8286,"endOffset":8372,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unshift","ranges":[{"startOffset":8468,"endOffset":8553,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunk","ranges":[{"startOffset":8556,"endOffset":10897,"count":0}],"isBlockCoverage":false},{"functionName":"addChunk","ranges":[{"startOffset":10899,"endOffset":11630,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.isPaused","ranges":[{"startOffset":11662,"endOffset":11774,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":11838,"endOffset":12399,"count":0}],"isBlockCoverage":false},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":12460,"endOffset":12811,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":12924,"endOffset":13318,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.read","ranges":[{"startOffset":13415,"endOffset":17903,"count":0}],"isBlockCoverage":false},{"functionName":"onEofChunk","ranges":[{"startOffset":17906,"endOffset":18726,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable","ranges":[{"startOffset":18927,"endOffset":19254,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable_","ranges":[{"startOffset":19256,"endOffset":19910,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore","ranges":[{"startOffset":20260,"endOffset":20437,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore_","ranges":[{"startOffset":20439,"endOffset":22231,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._read","ranges":[{"startOffset":22502,"endOffset":22568,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":22597,"endOffset":27042,"count":0}],"isBlockCoverage":false},{"functionName":"pipeOnDrain","ranges":[{"startOffset":27045,"endOffset":27690,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":27721,"endOffset":28422,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.on","ranges":[{"startOffset":28548,"endOffset":29455,"count":1},{"startOffset":28680,"endOffset":29012,"count":0},{"startOffset":29041,"endOffset":29438,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeListener","ranges":[{"startOffset":29550,"endOffset":30115,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":30218,"endOffset":30812,"count":0}],"isBlockCoverage":false},{"functionName":"updateReadableListening","ranges":[{"startOffset":30815,"endOffset":31325,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":31327,"endOffset":31415,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":31569,"endOffset":31894,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":31897,"endOffset":32047,"count":0}],"isBlockCoverage":false},{"functionName":"resume_","ranges":[{"startOffset":32049,"endOffset":32300,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pause","ranges":[{"startOffset":32329,"endOffset":32596,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":32599,"endOffset":32746,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":32930,"endOffset":33951,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":33996,"endOffset":34048,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.iterator","ranges":[{"startOffset":34081,"endOffset":34224,"count":0}],"isBlockCoverage":false},{"functionName":"streamToAsyncIterator","ranges":[{"startOffset":34227,"endOffset":34476,"count":0}],"isBlockCoverage":false},{"functionName":"createAsyncIterator","ranges":[{"startOffset":34478,"endOffset":35554,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35773,"endOffset":36162,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":36168,"endOffset":36298,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36380,"endOffset":36444,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36526,"endOffset":36734,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36822,"endOffset":36888,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36969,"endOffset":37051,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37133,"endOffset":37193,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":37204,"endOffset":37313,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37389,"endOffset":37443,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37523,"endOffset":37611,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37689,"endOffset":37774,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37843,"endOffset":37927,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37972,"endOffset":38056,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":38127,"endOffset":38214,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":38220,"endOffset":38509,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":38584,"endOffset":38672,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":38813,"endOffset":38858,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":38938,"endOffset":38989,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":38995,"endOffset":39044,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":39350,"endOffset":39912,"count":0}],"isBlockCoverage":false},{"functionName":"endReadable","ranges":[{"startOffset":39914,"endOffset":40135,"count":0}],"isBlockCoverage":false},{"functionName":"endReadableNT","ranges":[{"startOffset":40137,"endOffset":41057,"count":0}],"isBlockCoverage":false},{"functionName":"endWritableNT","ranges":[{"startOffset":41059,"endOffset":41219,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.from","ranges":[{"startOffset":41237,"endOffset":41306,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":41371,"endOffset":41535,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.fromWeb","ranges":[{"startOffset":41556,"endOffset":41690,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.toWeb","ranges":[{"startOffset":41710,"endOffset":41844,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":41863,"endOffset":42107,"count":0}],"isBlockCoverage":false}]},{"scriptId":"101","url":"node:internal/streams/legacy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2934,"count":1}],"isBlockCoverage":false},{"functionName":"Stream","ranges":[{"startOffset":112,"endOffset":160,"count":2}],"isBlockCoverage":true},{"functionName":"Stream.pipe","ranges":[{"startOffset":274,"endOffset":2076,"count":0}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2079,"endOffset":2886,"count":0}],"isBlockCoverage":false}]},{"scriptId":"102","url":"node:internal/streams/add-abort-signal","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1704,"count":1}],"isBlockCoverage":false},{"functionName":"validateAbortSignal","ranges":[{"startOffset":557,"endOffset":716,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortSignal","ranges":[{"startOffset":751,"endOffset":1062,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.addAbortSignalNoValidate","ranges":[{"startOffset":1107,"endOffset":1702,"count":0}],"isBlockCoverage":false}]},{"scriptId":"103","url":"node:internal/streams/buffer_list","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4060,"count":1}],"isBlockCoverage":false},{"functionName":"BufferList","ranges":[{"startOffset":254,"endOffset":338,"count":1}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":342,"endOffset":529,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":533,"endOffset":691,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":695,"endOffset":922,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":926,"endOffset":994,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":998,"endOffset":1180,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":1184,"endOffset":1467,"count":0}],"isBlockCoverage":false},{"functionName":"consume","ranges":[{"startOffset":1551,"endOffset":2005,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":2009,"endOffset":2049,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":2053,"endOffset":2149,"count":0}],"isBlockCoverage":false},{"functionName":"_getString","ranges":[{"startOffset":2224,"endOffset":2862,"count":0}],"isBlockCoverage":false},{"functionName":"_getBuffer","ranges":[{"startOffset":2932,"endOffset":3779,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":3860,"endOffset":4056,"count":0}],"isBlockCoverage":false}]},{"scriptId":"104","url":"node:internal/streams/state","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1332,"count":1}],"isBlockCoverage":false},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":287,"endOffset":454,"count":2},{"startOffset":385,"endOffset":408,"count":0},{"startOffset":445,"endOffset":451,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultHighWaterMark","ranges":[{"startOffset":456,"endOffset":586,"count":1},{"startOffset":523,"endOffset":555,"count":0}],"isBlockCoverage":true},{"functionName":"setDefaultHighWaterMark","ranges":[{"startOffset":588,"endOffset":799,"count":0}],"isBlockCoverage":false},{"functionName":"getHighWaterMark","ranges":[{"startOffset":801,"endOffset":1234,"count":2},{"startOffset":948,"endOffset":1160,"count":1},{"startOffset":992,"endOffset":1129,"count":0},{"startOffset":1160,"endOffset":1233,"count":1}],"isBlockCoverage":true}]},{"scriptId":"105","url":"node:string_decoder","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5213,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":2129,"endOffset":2391,"count":0}],"isBlockCoverage":false},{"functionName":"StringDecoder","ranges":[{"startOffset":2705,"endOffset":2904,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":3227,"endOffset":3612,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":3889,"endOffset":4080,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":4291,"endOffset":4448,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4586,"endOffset":4799,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4891,"endOffset":4954,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5047,"endOffset":5162,"count":0}],"isBlockCoverage":false}]},{"scriptId":"106","url":"node:internal/streams/from","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2614,"count":1}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":241,"endOffset":2589,"count":0}],"isBlockCoverage":false}]},{"scriptId":"107","url":"node:internal/streams/writable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26276,"count":1}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2389,"endOffset":2406,"count":0}],"isBlockCoverage":false},{"functionName":"WritableState","ranges":[{"startOffset":2452,"endOffset":7185,"count":1},{"startOffset":2847,"endOffset":2890,"count":0},{"startOffset":3441,"endOffset":3477,"count":0},{"startOffset":4418,"endOffset":4577,"count":0}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":7187,"endOffset":7319,"count":1}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":7357,"endOffset":7446,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7542,"endOffset":7607,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":7614,"endOffset":9142,"count":1},{"startOffset":8255,"endOffset":8309,"count":0},{"startOffset":8315,"endOffset":8344,"count":0},{"startOffset":8483,"endOffset":8511,"count":0},{"startOffset":8565,"endOffset":8595,"count":0},{"startOffset":8650,"endOffset":8682,"count":0},{"startOffset":8735,"endOffset":8763,"count":0},{"startOffset":8820,"endOffset":8856,"count":0},{"startOffset":8888,"endOffset":8925,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8992,"endOffset":9138,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":9224,"endOffset":9428,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.pipe","ranges":[{"startOffset":9529,"endOffset":9597,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":9600,"endOffset":10944,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.write","ranges":[{"startOffset":10973,"endOffset":11059,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.cork","ranges":[{"startOffset":11088,"endOffset":11134,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.uncork","ranges":[{"startOffset":11165,"endOffset":11320,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":11363,"endOffset":11688,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":11878,"endOffset":12891,"count":0}],"isBlockCoverage":false},{"functionName":"doWrite","ranges":[{"startOffset":12893,"endOffset":13271,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteError","ranges":[{"startOffset":13273,"endOffset":13658,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":13660,"endOffset":15299,"count":0}],"isBlockCoverage":false},{"functionName":"afterWriteTick","ranges":[{"startOffset":15301,"endOffset":15440,"count":0}],"isBlockCoverage":false},{"functionName":"afterWrite","ranges":[{"startOffset":15442,"endOffset":15821,"count":0}],"isBlockCoverage":false},{"functionName":"errorBuffer","ranges":[{"startOffset":15893,"endOffset":16450,"count":0}],"isBlockCoverage":false},{"functionName":"clearBuffer","ranges":[{"startOffset":16516,"endOffset":18010,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._write","ranges":[{"startOffset":18040,"endOffset":18209,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":18273,"endOffset":19658,"count":0}],"isBlockCoverage":false},{"functionName":"needFinish","ranges":[{"startOffset":19661,"endOffset":20001,"count":0}],"isBlockCoverage":false},{"functionName":"callFinal","ranges":[{"startOffset":20003,"endOffset":20949,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":20951,"endOffset":21256,"count":0}],"isBlockCoverage":false},{"functionName":"finishMaybe","ranges":[{"startOffset":21258,"endOffset":21757,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":21759,"endOffset":22489,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22574,"endOffset":22658,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22706,"endOffset":22793,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":22799,"endOffset":22981,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23028,"endOffset":23420,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":23426,"endOffset":23560,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23615,"endOffset":23701,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23758,"endOffset":23846,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23899,"endOffset":23981,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24033,"endOffset":24117,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24173,"endOffset":24331,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24391,"endOffset":24475,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24528,"endOffset":24608,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24661,"endOffset":24738,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24807,"endOffset":24891,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24973,"endOffset":25179,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.destroy","ranges":[{"startOffset":25257,"endOffset":25554,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._destroy","ranges":[{"startOffset":25642,"endOffset":25674,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":25725,"endOffset":25763,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":25828,"endOffset":25992,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.fromWeb","ranges":[{"startOffset":26013,"endOffset":26147,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.toWeb","ranges":[{"startOffset":26167,"endOffset":26274,"count":0}],"isBlockCoverage":false}]},{"scriptId":"108","url":"node:stream/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":917,"count":1}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":318,"endOffset":869,"count":0}],"isBlockCoverage":false}]},{"scriptId":"109","url":"node:internal/streams/transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7176,"count":1}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":3920,"endOffset":5747,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5749,"endOffset":6193,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":6195,"endOffset":6276,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._transform","ranges":[{"startOffset":6348,"endOffset":6443,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6475,"endOffset":7018,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":7049,"endOffset":7174,"count":0}],"isBlockCoverage":false}]},{"scriptId":"110","url":"node:internal/streams/passthrough","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1762,"count":1}],"isBlockCoverage":false},{"functionName":"PassThrough","ranges":[{"startOffset":1529,"endOffset":1671,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1708,"endOffset":1760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"111","url":"node:internal/stream_base_commons","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7041,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1010,"endOffset":1035,"count":0}],"isBlockCoverage":false},{"functionName":"handleWriteReq","ranges":[{"startOffset":1154,"endOffset":2009,"count":0}],"isBlockCoverage":false},{"functionName":"onWriteComplete","ranges":[{"startOffset":2011,"endOffset":2696,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteWrap","ranges":[{"startOffset":2698,"endOffset":2936,"count":0}],"isBlockCoverage":false},{"functionName":"writevGeneric","ranges":[{"startOffset":2938,"endOffset":3577,"count":0}],"isBlockCoverage":false},{"functionName":"writeGeneric","ranges":[{"startOffset":3579,"endOffset":3784,"count":0}],"isBlockCoverage":false},{"functionName":"afterWriteDispatched","ranges":[{"startOffset":3786,"endOffset":4089,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamRead","ranges":[{"startOffset":4091,"endOffset":6022,"count":0}],"isBlockCoverage":false},{"functionName":"setStreamTimeout","ranges":[{"startOffset":6024,"endOffset":6834,"count":0}],"isBlockCoverage":false}]},{"scriptId":"112","url":"node:diagnostics_channel","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9791,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":734,"endOffset":1143,"count":1}],"isBlockCoverage":false},{"functionName":"#finalizers","ranges":[{"startOffset":814,"endOffset":850,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":856,"endOffset":973,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":977,"endOffset":1025,"count":4},{"startOffset":1013,"endOffset":1018,"count":0}],"isBlockCoverage":true},{"functionName":"incRef","ranges":[{"startOffset":1029,"endOffset":1083,"count":0}],"isBlockCoverage":false},{"functionName":"decRef","ranges":[{"startOffset":1087,"endOffset":1141,"count":0}],"isBlockCoverage":false},{"functionName":"markActive","ranges":[{"startOffset":1145,"endOffset":1350,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMarkInactive","ranges":[{"startOffset":1352,"endOffset":1720,"count":0}],"isBlockCoverage":false},{"functionName":"defaultTransform","ranges":[{"startOffset":1722,"endOffset":1772,"count":0}],"isBlockCoverage":false},{"functionName":"wrapStoreRun","ranges":[{"startOffset":1774,"endOffset":2102,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":2184,"endOffset":2354,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":2358,"endOffset":2635,"count":0}],"isBlockCoverage":false},{"functionName":"bindStore","ranges":[{"startOffset":2639,"endOffset":2807,"count":0}],"isBlockCoverage":false},{"functionName":"unbindStore","ranges":[{"startOffset":2811,"endOffset":3010,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":3014,"endOffset":3057,"count":0}],"isBlockCoverage":false},{"functionName":"publish","ranges":[{"startOffset":3061,"endOffset":3370,"count":0}],"isBlockCoverage":false},{"functionName":"runStores","ranges":[{"startOffset":3374,"endOffset":3713,"count":0}],"isBlockCoverage":false},{"functionName":"Channel","ranges":[{"startOffset":3735,"endOffset":3876,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3887,"endOffset":4072,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":4076,"endOffset":4161,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":4165,"endOffset":4202,"count":0}],"isBlockCoverage":false},{"functionName":"bindStore","ranges":[{"startOffset":4206,"endOffset":4299,"count":0}],"isBlockCoverage":false},{"functionName":"unbindStore","ranges":[{"startOffset":4303,"endOffset":4340,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":4344,"endOffset":4388,"count":2}],"isBlockCoverage":true},{"functionName":"publish","ranges":[{"startOffset":4392,"endOffset":4404,"count":0}],"isBlockCoverage":false},{"functionName":"runStores","ranges":[{"startOffset":4408,"endOffset":4495,"count":0}],"isBlockCoverage":false},{"functionName":"channel","ranges":[{"startOffset":4535,"endOffset":4801,"count":4},{"startOffset":4613,"endOffset":4628,"count":0},{"startOffset":4661,"endOffset":4688,"count":0},{"startOffset":4690,"endOffset":4770,"count":0}],"isBlockCoverage":true},{"functionName":"subscribe","ranges":[{"startOffset":4803,"endOffset":4893,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":4895,"endOffset":4989,"count":0}],"isBlockCoverage":false},{"functionName":"hasSubscribers","ranges":[{"startOffset":4991,"endOffset":5126,"count":0}],"isBlockCoverage":false},{"functionName":"assertChannel","ranges":[{"startOffset":5215,"endOffset":5357,"count":0}],"isBlockCoverage":false},{"functionName":"TracingChannel","ranges":[{"startOffset":5384,"endOffset":6531,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":6535,"endOffset":6687,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":6691,"endOffset":6924,"count":0}],"isBlockCoverage":false},{"functionName":"traceSync","ranges":[{"startOffset":6928,"endOffset":7354,"count":0}],"isBlockCoverage":false},{"functionName":"tracePromise","ranges":[{"startOffset":7358,"endOffset":8459,"count":0}],"isBlockCoverage":false},{"functionName":"traceCallback","ranges":[{"startOffset":8463,"endOffset":9589,"count":0}],"isBlockCoverage":false},{"functionName":"tracingChannel","ranges":[{"startOffset":9593,"endOffset":9681,"count":0}],"isBlockCoverage":false}]},{"scriptId":"113","url":"node:internal/perf/observe","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16742,"count":1}],"isBlockCoverage":false},{"functionName":"queuePending","ranges":[{"startOffset":2620,"endOffset":2881,"count":0}],"isBlockCoverage":false},{"functionName":"getObserverType","ranges":[{"startOffset":2883,"endOffset":3223,"count":0}],"isBlockCoverage":false},{"functionName":"maybeDecrementObserverCounts","ranges":[{"startOffset":3225,"endOffset":3646,"count":0}],"isBlockCoverage":false},{"functionName":"maybeIncrementObserverCount","ranges":[{"startOffset":3648,"endOffset":3990,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceObserverEntryList","ranges":[{"startOffset":4031,"endOffset":4091,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":4095,"endOffset":4234,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":4238,"endOffset":4542,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":4546,"endOffset":5039,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5043,"endOffset":5291,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceObserverEntryList","ranges":[{"startOffset":5643,"endOffset":5933,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5935,"endOffset":9507,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":9989,"endOffset":10191,"count":0}],"isBlockCoverage":false},{"functionName":"bufferUserTiming","ranges":[{"startOffset":10252,"endOffset":11278,"count":0}],"isBlockCoverage":false},{"functionName":"bufferResourceTiming","ranges":[{"startOffset":11566,"endOffset":12830,"count":0}],"isBlockCoverage":false},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":12918,"endOffset":13190,"count":0}],"isBlockCoverage":false},{"functionName":"setDispatchBufferFull","ranges":[{"startOffset":13192,"endOffset":13257,"count":1}],"isBlockCoverage":true},{"functionName":"clearEntriesFromBuffer","ranges":[{"startOffset":13259,"endOffset":13859,"count":0}],"isBlockCoverage":false},{"functionName":"filterBufferMapByNameAndType","ranges":[{"startOffset":13861,"endOffset":14749,"count":0}],"isBlockCoverage":false},{"functionName":"observerCallback","ranges":[{"startOffset":14751,"endOffset":15867,"count":0}],"isBlockCoverage":false},{"functionName":"hasObserver","ranges":[{"startOffset":15904,"endOffset":16023,"count":0}],"isBlockCoverage":false},{"functionName":"startPerf","ranges":[{"startOffset":16026,"endOffset":16136,"count":0}],"isBlockCoverage":false},{"functionName":"stopPerf","ranges":[{"startOffset":16138,"endOffset":16453,"count":0}],"isBlockCoverage":false}]},{"scriptId":"114","url":"node:internal/perf/performance_entry","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3274,"count":1}],"isBlockCoverage":false},{"functionName":"isPerformanceEntry","ranges":[{"startOffset":654,"endOffset":727,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceEntry","ranges":[{"startOffset":756,"endOffset":816,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":820,"endOffset":920,"count":0}],"isBlockCoverage":false},{"functionName":"get entryType","ranges":[{"startOffset":924,"endOffset":1039,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1043,"endOffset":1158,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1162,"endOffset":1274,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1278,"endOffset":1522,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":1526,"endOffset":1748,"count":0}],"isBlockCoverage":false},{"functionName":"initPerformanceEntry","ranges":[{"startOffset":1970,"endOffset":2150,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceEntry","ranges":[{"startOffset":2152,"endOffset":2361,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":2478,"endOffset":2588,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2592,"endOffset":2843,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceNodeEntry","ranges":[{"startOffset":2847,"endOffset":3104,"count":0}],"isBlockCoverage":false}]},{"scriptId":"115","url":"node:dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28253,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCluster","ranges":[{"startOffset":2824,"endOffset":2921,"count":0}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":3031,"endOffset":4459,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":4570,"endOffset":4648,"count":0}],"isBlockCoverage":false},{"functionName":"startListening","ranges":[{"startOffset":4651,"endOffset":5094,"count":0}],"isBlockCoverage":false},{"functionName":"replaceHandle","ranges":[{"startOffset":5096,"endOffset":5661,"count":0}],"isBlockCoverage":false},{"functionName":"bufferSize","ranges":[{"startOffset":5663,"endOffset":5955,"count":0}],"isBlockCoverage":false},{"functionName":"bindServerHandle","ranges":[{"startOffset":6023,"endOffset":6433,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.bind","ranges":[{"startOffset":6459,"endOffset":9902,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":9932,"endOffset":10728,"count":0}],"isBlockCoverage":false},{"functionName":"_connect","ranges":[{"startOffset":10732,"endOffset":11078,"count":0}],"isBlockCoverage":false},{"functionName":"doConnect","ranges":[{"startOffset":11081,"endOffset":11723,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.disconnect","ranges":[{"startOffset":11756,"endOffset":12063,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.sendto","ranges":[{"startOffset":12168,"endOffset":12609,"count":0}],"isBlockCoverage":false},{"functionName":"sliceBuffer","ranges":[{"startOffset":12613,"endOffset":13373,"count":0}],"isBlockCoverage":false},{"functionName":"fixBufferList","ranges":[{"startOffset":13376,"endOffset":13760,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":13763,"endOffset":14190,"count":0}],"isBlockCoverage":false},{"functionName":"onListenSuccess","ranges":[{"startOffset":14193,"endOffset":14331,"count":0}],"isBlockCoverage":false},{"functionName":"onListenError","ranges":[{"startOffset":14334,"endOffset":14458,"count":0}],"isBlockCoverage":false},{"functionName":"clearQueue","ranges":[{"startOffset":14461,"endOffset":14658,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.send","ranges":[{"startOffset":15229,"endOffset":18122,"count":0}],"isBlockCoverage":false},{"functionName":"doSend","ranges":[{"startOffset":18125,"endOffset":19264,"count":0}],"isBlockCoverage":false},{"functionName":"afterSend","ranges":[{"startOffset":19266,"endOffset":19443,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.close","ranges":[{"startOffset":19470,"endOffset":20038,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":20080,"endOffset":20213,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseNT","ranges":[{"startOffset":20217,"endOffset":20271,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":20301,"endOffset":20491,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.remoteAddress","ranges":[{"startOffset":20527,"endOffset":20837,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setBroadcast","ranges":[{"startOffset":20873,"endOffset":21021,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setTTL","ranges":[{"startOffset":21051,"endOffset":21225,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastTTL","ranges":[{"startOffset":21264,"endOffset":21456,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastLoopback","ranges":[{"startOffset":21500,"endOffset":21700,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastInterface","ranges":[{"startOffset":21745,"endOffset":22007,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addMembership","ranges":[{"startOffset":22043,"endOffset":22417,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropMembership","ranges":[{"startOffset":22455,"endOffset":22832,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addSourceSpecificMembership","ranges":[{"startOffset":22882,"endOffset":23489,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropSourceSpecificMembership","ranges":[{"startOffset":23541,"endOffset":24154,"count":0}],"isBlockCoverage":false},{"functionName":"healthCheck","ranges":[{"startOffset":24158,"endOffset":24321,"count":0}],"isBlockCoverage":false},{"functionName":"stopReceiving","ranges":[{"startOffset":24324,"endOffset":24488,"count":0}],"isBlockCoverage":false},{"functionName":"onMessage","ranges":[{"startOffset":24491,"endOffset":24745,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":24748,"endOffset":24863,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":24889,"endOffset":24996,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":25025,"endOffset":25134,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setRecvBufferSize","ranges":[{"startOffset":25175,"endOffset":25232,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setSendBufferSize","ranges":[{"startOffset":25273,"endOffset":25330,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getRecvBufferSize","ranges":[{"startOffset":25371,"endOffset":25428,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendBufferSize","ranges":[{"startOffset":25469,"endOffset":25526,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueSize","ranges":[{"startOffset":25565,"endOffset":25634,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueCount","ranges":[{"startOffset":25674,"endOffset":25744,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25863,"endOffset":25917,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25990,"endOffset":26046,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26199,"endOffset":26256,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26332,"endOffset":26391,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26547,"endOffset":26604,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26680,"endOffset":26739,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26891,"endOffset":26944,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27016,"endOffset":27071,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27223,"endOffset":27280,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27356,"endOffset":27415,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27522,"endOffset":27557,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27666,"endOffset":27703,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27988,"endOffset":28024,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":28028,"endOffset":28069,"count":0}],"isBlockCoverage":false}]},{"scriptId":"116","url":"node:internal/dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1851,"count":1}],"isBlockCoverage":false},{"functionName":"lookup4","ranges":[{"startOffset":478,"endOffset":579,"count":0}],"isBlockCoverage":false},{"functionName":"lookup6","ranges":[{"startOffset":582,"endOffset":677,"count":0}],"isBlockCoverage":false},{"functionName":"newHandle","ranges":[{"startOffset":679,"endOffset":1323,"count":0}],"isBlockCoverage":false},{"functionName":"_createSocketHandle","ranges":[{"startOffset":1326,"endOffset":1774,"count":0}],"isBlockCoverage":false}]},{"scriptId":"117","url":"node:internal/socket_list","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2709,"count":1}],"isBlockCoverage":false},{"functionName":"SocketListSend","ranges":[{"startOffset":235,"endOffset":376,"count":0}],"isBlockCoverage":false},{"functionName":"_request","ranges":[{"startOffset":380,"endOffset":1035,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1039,"endOffset":1190,"count":0}],"isBlockCoverage":false},{"functionName":"getConnections","ranges":[{"startOffset":1194,"endOffset":1430,"count":0}],"isBlockCoverage":false},{"functionName":"SocketListReceive","ranges":[{"startOffset":1544,"endOffset":2404,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":2408,"endOffset":2649,"count":0}],"isBlockCoverage":false}]},{"scriptId":"118","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/cross-spawn/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1192,"count":1}],"isBlockCoverage":true},{"functionName":"spawn","ranges":[{"startOffset":131,"endOffset":589,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":591,"endOffset":1038,"count":0}],"isBlockCoverage":false}]},{"scriptId":"119","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/cross-spawn/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3065,"count":1}],"isBlockCoverage":true},{"functionName":"detectShebang","ranges":[{"startOffset":354,"endOffset":659,"count":0}],"isBlockCoverage":false},{"functionName":"parseNonShell","ranges":[{"startOffset":661,"endOffset":2367,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2369,"endOffset":3039,"count":0}],"isBlockCoverage":false}]},{"scriptId":"120","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/cross-spawn/lib/util/resolveCommand.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1557,"count":1}],"isBlockCoverage":true},{"functionName":"resolveCommandAttempt","ranges":[{"startOffset":118,"endOffset":1404,"count":0}],"isBlockCoverage":false},{"functionName":"resolveCommand","ranges":[{"startOffset":1406,"endOffset":1522,"count":0}],"isBlockCoverage":false}]},{"scriptId":"121","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/which/which.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3163,"count":1},{"startOffset":177,"endOffset":182,"count":0}],"isBlockCoverage":true},{"functionName":"getNotFoundError","ranges":[{"startOffset":246,"endOffset":322,"count":0}],"isBlockCoverage":false},{"functionName":"getPathInfo","ranges":[{"startOffset":344,"endOffset":1152,"count":0}],"isBlockCoverage":false},{"functionName":"which","ranges":[{"startOffset":1168,"endOffset":2279,"count":0}],"isBlockCoverage":false},{"functionName":"whichSync","ranges":[{"startOffset":2299,"endOffset":3115,"count":0}],"isBlockCoverage":false}]},{"scriptId":"122","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/isexe/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1192,"count":1},{"startOffset":92,"endOffset":128,"count":0}],"isBlockCoverage":true},{"functionName":"isexe","ranges":[{"startOffset":211,"endOffset":928,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":930,"endOffset":1191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"123","url":"node:internal/fs/streams","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14758,"count":1}],"isBlockCoverage":false},{"functionName":"_construct","ranges":[{"startOffset":1063,"endOffset":1966,"count":0}],"isBlockCoverage":false},{"functionName":"FileHandleOperations","ranges":[{"startOffset":2059,"endOffset":3058,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":3061,"endOffset":3238,"count":0}],"isBlockCoverage":false},{"functionName":"importFd","ranges":[{"startOffset":3240,"endOffset":4237,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":4239,"endOffset":5982,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6171,"endOffset":6226,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6230,"endOffset":6287,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6323,"endOffset":6348,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._read","ranges":[{"startOffset":6524,"endOffset":7655,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._destroy","ranges":[{"startOffset":7690,"endOffset":8251,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.close","ranges":[{"startOffset":8283,"endOffset":8369,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8449,"endOffset":8483,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":8512,"endOffset":10303,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10495,"endOffset":10550,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":10554,"endOffset":10611,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10648,"endOffset":10673,"count":0}],"isBlockCoverage":false},{"functionName":"writeAll","ranges":[{"startOffset":10824,"endOffset":11617,"count":0}],"isBlockCoverage":false},{"functionName":"writevAll","ranges":[{"startOffset":11619,"endOffset":12436,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._write","ranges":[{"startOffset":12469,"endOffset":12853,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._writev","ranges":[{"startOffset":12888,"endOffset":13450,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._destroy","ranges":[{"startOffset":13486,"endOffset":14047,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.close","ranges":[{"startOffset":14080,"endOffset":14462,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14644,"endOffset":14678,"count":0}],"isBlockCoverage":false}]},{"scriptId":"124","url":"node:internal/fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29943,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCpPromises","ranges":[{"startOffset":2997,"endOffset":3089,"count":0}],"isBlockCoverage":false},{"functionName":"lazyFsStreams","ranges":[{"startOffset":3151,"endOffset":3234,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3236,"endOffset":9299,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdClose","ranges":[{"startOffset":9301,"endOffset":9672,"count":0}],"isBlockCoverage":false},{"functionName":"fsCall","ranges":[{"startOffset":9674,"endOffset":10134,"count":0}],"isBlockCoverage":false},{"functionName":"checkAborted","ranges":[{"startOffset":10136,"endOffset":10256,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileHandle","ranges":[{"startOffset":10258,"endOffset":11400,"count":0}],"isBlockCoverage":false},{"functionName":"readFileHandle","ranges":[{"startOffset":11402,"endOffset":13541,"count":0}],"isBlockCoverage":false},{"functionName":"access","ranges":[{"startOffset":13694,"endOffset":13915,"count":0}],"isBlockCoverage":false},{"functionName":"cp","ranges":[{"startOffset":13917,"endOffset":14186,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":14188,"endOffset":14546,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":14666,"endOffset":14991,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":14993,"endOffset":16364,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":16366,"endOffset":16703,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":16705,"endOffset":17954,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":17956,"endOffset":18398,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":18400,"endOffset":18706,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":18708,"endOffset":18841,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":18843,"endOffset":19002,"count":0}],"isBlockCoverage":false},{"functionName":"rm","ranges":[{"startOffset":19004,"endOffset":19208,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":19210,"endOffset":19581,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":19583,"endOffset":19672,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":19674,"endOffset":19755,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":19757,"endOffset":20234,"count":0}],"isBlockCoverage":false},{"functionName":"readdirRecursive","ranges":[{"startOffset":20236,"endOffset":21910,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":21912,"endOffset":22339,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":22341,"endOffset":22580,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":22582,"endOffset":23306,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":23308,"endOffset":23486,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":23488,"endOffset":23758,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":23760,"endOffset":24027,"count":0}],"isBlockCoverage":false},{"functionName":"statfs","ranges":[{"startOffset":24029,"endOffset":24303,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":24305,"endOffset":24628,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":24630,"endOffset":24768,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":24770,"endOffset":24903,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":24905,"endOffset":25091,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":25093,"endOffset":25321,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":25323,"endOffset":25599,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":25601,"endOffset":25798,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":25800,"endOffset":26073,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":26075,"endOffset":26347,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":26349,"endOffset":26548,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":26550,"endOffset":26827,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":26829,"endOffset":27002,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":27004,"endOffset":27383,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":27385,"endOffset":28060,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomIterable","ranges":[{"startOffset":28062,"endOffset":28176,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":28178,"endOffset":28419,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":28421,"endOffset":28765,"count":0}],"isBlockCoverage":false},{"functionName":"_watch","ranges":[{"startOffset":28767,"endOffset":29432,"count":0}],"isBlockCoverage":false}]},{"scriptId":"125","url":"node:internal/fs/rimraf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7454,"count":1}],"isBlockCoverage":false},{"functionName":"rimraf","ranges":[{"startOffset":1175,"endOffset":1635,"count":0}],"isBlockCoverage":false},{"functionName":"_rimraf","ranges":[{"startOffset":1638,"endOffset":2496,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERM","ranges":[{"startOffset":2499,"endOffset":2934,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdir","ranges":[{"startOffset":2937,"endOffset":3235,"count":0}],"isBlockCoverage":false},{"functionName":"_rmchildren","ranges":[{"startOffset":3238,"endOffset":3925,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafPromises","ranges":[{"startOffset":3928,"endOffset":4126,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafSync","ranges":[{"startOffset":4129,"endOffset":4812,"count":0}],"isBlockCoverage":false},{"functionName":"_unlinkSync","ranges":[{"startOffset":4815,"endOffset":5444,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdirSync","ranges":[{"startOffset":5447,"endOffset":6944,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERMSync","ranges":[{"startOffset":6947,"endOffset":7394,"count":0}],"isBlockCoverage":false}]},{"scriptId":"126","url":"node:internal/fs/dir","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8170,"count":1}],"isBlockCoverage":false},{"functionName":"Dir","ranges":[{"startOffset":1177,"endOffset":1993,"count":0}],"isBlockCoverage":false},{"functionName":"get path","ranges":[{"startOffset":1997,"endOffset":2040,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":2044,"endOffset":2111,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2115,"endOffset":3841,"count":0}],"isBlockCoverage":false},{"functionName":"processReadResult","ranges":[{"startOffset":3845,"endOffset":4127,"count":0}],"isBlockCoverage":false},{"functionName":"readSyncRecursive","ranges":[{"startOffset":4131,"endOffset":4671,"count":0}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":4675,"endOffset":5651,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":5655,"endOffset":6344,"count":0}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":6348,"endOffset":6725,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":6729,"endOffset":6992,"count":0}],"isBlockCoverage":false},{"functionName":"opendir","ranges":[{"startOffset":7172,"endOffset":7752,"count":0}],"isBlockCoverage":false},{"functionName":"opendirSync","ranges":[{"startOffset":7754,"endOffset":8113,"count":0}],"isBlockCoverage":false}]},{"scriptId":"127","url":"node:internal/fs/watchers","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11242,"count":1}],"isBlockCoverage":false},{"functionName":"emitStop","ranges":[{"startOffset":1420,"endOffset":1468,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher","ranges":[{"startOffset":1470,"endOffset":1700,"count":0}],"isBlockCoverage":false},{"functionName":"onchange","ranges":[{"startOffset":1820,"endOffset":2177,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":2565,"endOffset":3399,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.start","ranges":[{"startOffset":3620,"endOffset":3628,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.stop","ranges":[{"startOffset":3874,"endOffset":4155,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":4244,"endOffset":4671,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.ref","ranges":[{"startOffset":4702,"endOffset":4984,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.unref","ranges":[{"startOffset":5017,"endOffset":5267,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":5271,"endOffset":6239,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.<computed>","ranges":[{"startOffset":6776,"endOffset":7686,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.start","ranges":[{"startOffset":7903,"endOffset":7911,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.close","ranges":[{"startOffset":8034,"endOffset":8371,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.ref","ranges":[{"startOffset":8400,"endOffset":8469,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.unref","ranges":[{"startOffset":8500,"endOffset":8571,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":8574,"endOffset":8626,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8850,"endOffset":8886,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8890,"endOffset":8931,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":8967,"endOffset":11110,"count":0}],"isBlockCoverage":false}]},{"scriptId":"128","url":"node:internal/fs/recursive_watch","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7634,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadFsPromises","ranges":[{"startOffset":812,"endOffset":919,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadFsSync","ranges":[{"startOffset":921,"endOffset":1007,"count":0}],"isBlockCoverage":false},{"functionName":"traverse","ranges":[{"startOffset":1037,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1620,"endOffset":7580,"count":0}],"isBlockCoverage":false}]},{"scriptId":"129","url":"node:internal/readline/interface","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39029,"count":1}],"isBlockCoverage":false},{"functionName":"InterfaceConstructor","ranges":[{"startOffset":3781,"endOffset":9286,"count":0}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":9527,"endOffset":9627,"count":0}],"isBlockCoverage":false},{"functionName":"get columns","ranges":[{"startOffset":9630,"endOffset":9742,"count":0}],"isBlockCoverage":false},{"functionName":"setPrompt","ranges":[{"startOffset":9851,"endOffset":9902,"count":0}],"isBlockCoverage":false},{"functionName":"getPrompt","ranges":[{"startOffset":9996,"endOffset":10039,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10043,"endOffset":10234,"count":0}],"isBlockCoverage":false},{"functionName":"prompt","ranges":[{"startOffset":10373,"endOffset":10627,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10631,"endOffset":10938,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10942,"endOffset":11184,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11188,"endOffset":11275,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11279,"endOffset":11447,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11451,"endOffset":11648,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11652,"endOffset":12830,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12834,"endOffset":13839,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":13923,"endOffset":14094,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":14175,"endOffset":14306,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":14398,"endOffset":14534,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":14805,"endOffset":14964,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14968,"endOffset":16702,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16706,"endOffset":17375,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17379,"endOffset":17778,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17782,"endOffset":19990,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19994,"endOffset":20455,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20459,"endOffset":20717,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20721,"endOffset":21203,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21207,"endOffset":21688,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21692,"endOffset":22452,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22456,"endOffset":22883,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22887,"endOffset":23165,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23169,"endOffset":23427,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23431,"endOffset":23691,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23695,"endOffset":23850,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23854,"endOffset":24529,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":24533,"endOffset":24682,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24686,"endOffset":24840,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24844,"endOffset":25031,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25035,"endOffset":25343,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25347,"endOffset":25655,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26090,"endOffset":26724,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26728,"endOffset":27436,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27511,"endOffset":28451,"count":0}],"isBlockCoverage":false},{"functionName":"getCursorPos","ranges":[{"startOffset":28628,"endOffset":28797,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28916,"endOffset":29473,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29510,"endOffset":37760,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38068,"endOffset":38448,"count":0}],"isBlockCoverage":false}]},{"scriptId":"130","url":"node:internal/readline/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12396,"count":1}],"isBlockCoverage":false},{"functionName":"CSI","ranges":[{"startOffset":385,"endOffset":579,"count":4},{"startOffset":544,"endOffset":559,"count":0}],"isBlockCoverage":true},{"functionName":"charLengthLeft","ranges":[{"startOffset":958,"endOffset":1220,"count":0}],"isBlockCoverage":false},{"functionName":"charLengthAt","ranges":[{"startOffset":1222,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"emitKeys","ranges":[{"startOffset":2213,"endOffset":11840,"count":0}],"isBlockCoverage":false},{"functionName":"commonPrefix","ranges":[{"startOffset":11870,"endOffset":12283,"count":0}],"isBlockCoverage":false}]},{"scriptId":"131","url":"node:internal/readline/callbacks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2754,"count":1}],"isBlockCoverage":false},{"functionName":"cursorTo","ranges":[{"startOffset":460,"endOffset":1146,"count":0}],"isBlockCoverage":false},{"functionName":"moveCursor","ranges":[{"startOffset":1210,"endOffset":1722,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":1869,"endOffset":2272,"count":0}],"isBlockCoverage":false},{"functionName":"clearScreenDown","ranges":[{"startOffset":2349,"endOffset":2672,"count":0}],"isBlockCoverage":false}]},{"scriptId":"132","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/isexe/mode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":909,"count":1}],"isBlockCoverage":true},{"functionName":"isexe","ranges":[{"startOffset":66,"endOffset":197,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":199,"endOffset":279,"count":0}],"isBlockCoverage":false},{"functionName":"checkStat","ranges":[{"startOffset":281,"endOffset":370,"count":0}],"isBlockCoverage":false},{"functionName":"checkMode","ranges":[{"startOffset":372,"endOffset":908,"count":0}],"isBlockCoverage":false}]},{"scriptId":"133","url":"node:internal/process/esm_loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1451,"count":1}],"isBlockCoverage":false},{"functionName":"get esmLoader","ranges":[{"startOffset":426,"endOffset":498,"count":1}],"isBlockCoverage":true},{"functionName":"loadESM","ranges":[{"startOffset":502,"endOffset":1446,"count":0}],"isBlockCoverage":false}]},{"scriptId":"134","url":"node:internal/modules/esm/loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20332,"count":1}],"isBlockCoverage":false},{"functionName":"newResolveCache","ranges":[{"startOffset":622,"endOffset":752,"count":1}],"isBlockCoverage":true},{"functionName":"newLoadCache","ranges":[{"startOffset":754,"endOffset":875,"count":1}],"isBlockCoverage":true},{"functionName":"getTranslators","ranges":[{"startOffset":877,"endOffset":999,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1686,"endOffset":14593,"count":1}],"isBlockCoverage":false},{"functionName":"ModuleLoader","ranges":[{"startOffset":2953,"endOffset":3146,"count":1},{"startOffset":3041,"endOffset":3098,"count":0}],"isBlockCoverage":true},{"functionName":"setCustomizations","ranges":[{"startOffset":4686,"endOffset":4930,"count":1},{"startOffset":4789,"endOffset":4871,"count":0}],"isBlockCoverage":true},{"functionName":"eval","ranges":[{"startOffset":4934,"endOffset":5920,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJob","ranges":[{"startOffset":6655,"endOffset":6890,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJobSync","ranges":[{"startOffset":6894,"endOffset":7131,"count":0}],"isBlockCoverage":false},{"functionName":"getJobFromResolveResult","ranges":[{"startOffset":7135,"endOffset":7719,"count":0}],"isBlockCoverage":false},{"functionName":"#createModuleJob","ranges":[{"startOffset":8357,"endOffset":9548,"count":0}],"isBlockCoverage":false},{"functionName":"import","ranges":[{"startOffset":10010,"endOffset":10235,"count":0}],"isBlockCoverage":false},{"functionName":"register","ranges":[{"startOffset":10301,"endOffset":10814,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":11273,"endOffset":11859,"count":0}],"isBlockCoverage":false},{"functionName":"resolveSync","ranges":[{"startOffset":12017,"endOffset":12295,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":12507,"endOffset":12847,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":13131,"endOffset":13435,"count":0}],"isBlockCoverage":false},{"functionName":"loadSync","ranges":[{"startOffset":13439,"endOffset":13970,"count":0}],"isBlockCoverage":false},{"functionName":"validateLoadResult","ranges":[{"startOffset":13974,"endOffset":14125,"count":0}],"isBlockCoverage":false},{"functionName":"importMetaInitialize","ranges":[{"startOffset":14129,"endOffset":14464,"count":0}],"isBlockCoverage":false},{"functionName":"forceLoadHooks","ranges":[{"startOffset":14525,"endOffset":14591,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":14647,"endOffset":17157,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleLoader","ranges":[{"startOffset":17655,"endOffset":18377,"count":1},{"startOffset":18120,"endOffset":18327,"count":0}],"isBlockCoverage":true},{"functionName":"getHooksProxy","ranges":[{"startOffset":18490,"endOffset":18666,"count":0}],"isBlockCoverage":false},{"functionName":"register","ranges":[{"startOffset":19867,"endOffset":20257,"count":0}],"isBlockCoverage":false}]},{"scriptId":"135","url":"node:internal/modules/esm/module_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3877,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":281,"endOffset":306,"count":0}],"isBlockCoverage":false},{"functionName":"ResolveCache","ranges":[{"startOffset":850,"endOffset":878,"count":1}],"isBlockCoverage":true},{"functionName":"serializeKey","ranges":[{"startOffset":1224,"endOffset":1836,"count":0}],"isBlockCoverage":false},{"functionName":"#getModuleCachedImports","ranges":[{"startOffset":1840,"endOffset":2056,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2231,"endOffset":2333,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":2473,"endOffset":2602,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":2606,"endOffset":2710,"count":0}],"isBlockCoverage":false},{"functionName":"LoadCache","ranges":[{"startOffset":2844,"endOffset":2872,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2921,"endOffset":3064,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3067,"endOffset":3662,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":3665,"endOffset":3822,"count":0}],"isBlockCoverage":false}]},{"scriptId":"136","url":"node:internal/modules/esm/assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4026,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1321,"endOffset":1359,"count":5}],"isBlockCoverage":true},{"functionName":"validateAssertions","ranges":[{"startOffset":1780,"endOffset":3310,"count":0}],"isBlockCoverage":false},{"functionName":"handleInvalidType","ranges":[{"startOffset":3542,"endOffset":3956,"count":0}],"isBlockCoverage":false}]},{"scriptId":"137","url":"node:internal/modules/esm/translators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15678,"count":1}],"isBlockCoverage":false},{"functionName":"lazyTypes","ranges":[{"startOffset":372,"endOffset":484,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":948,"endOffset":973,"count":0}],"isBlockCoverage":false},{"functionName":"initCJSParse","ranges":[{"startOffset":1545,"endOffset":1943,"count":0}],"isBlockCoverage":false},{"functionName":"assertBufferSource","ranges":[{"startOffset":2077,"endOffset":2498,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":2500,"endOffset":2774,"count":0}],"isBlockCoverage":false},{"functionName":"errPath","ranges":[{"startOffset":2776,"endOffset":2921,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":2923,"endOffset":3061,"count":0}],"isBlockCoverage":false},{"functionName":"moduleStrategy","ranges":[{"startOffset":3143,"endOffset":3655,"count":0}],"isBlockCoverage":false},{"functionName":"enrichCJSError","ranges":[{"startOffset":3822,"endOffset":4361,"count":0}],"isBlockCoverage":false},{"functionName":"loadCJSModule","ranges":[{"startOffset":4702,"endOffset":6822,"count":0}],"isBlockCoverage":false},{"functionName":"createCJSModuleWrap","ranges":[{"startOffset":6896,"endOffset":8275,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8435,"endOffset":8527,"count":0}],"isBlockCoverage":false},{"functionName":"commonjsStrategy","ranges":[{"startOffset":8715,"endOffset":9598,"count":0}],"isBlockCoverage":false},{"functionName":"cjsPreparseModuleExports","ranges":[{"startOffset":9602,"endOffset":12080,"count":0}],"isBlockCoverage":false},{"functionName":"builtinStrategy","ranges":[{"startOffset":12204,"endOffset":12610,"count":0}],"isBlockCoverage":false},{"functionName":"jsonStrategy","ranges":[{"startOffset":12722,"endOffset":14673,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14739,"endOffset":15675,"count":0}],"isBlockCoverage":false}]},{"scriptId":"138","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/path-key/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":415,"count":1}],"isBlockCoverage":true},{"functionName":"pathKey","ranges":[{"startOffset":31,"endOffset":304,"count":0}],"isBlockCoverage":false}]},{"scriptId":"139","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/cross-spawn/lib/util/escape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1172,"count":1}],"isBlockCoverage":true},{"functionName":"escapeCommand","ranges":[{"startOffset":121,"endOffset":241,"count":0}],"isBlockCoverage":false},{"functionName":"escapeArgument","ranges":[{"startOffset":243,"endOffset":1088,"count":0}],"isBlockCoverage":false}]},{"scriptId":"140","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/cross-spawn/lib/util/readShebang.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":549,"count":1}],"isBlockCoverage":true},{"functionName":"readShebang","ranges":[{"startOffset":93,"endOffset":517,"count":0}],"isBlockCoverage":false}]},{"scriptId":"141","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/shebang-command/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":387,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":79,"endOffset":385,"count":0}],"isBlockCoverage":false}]},{"scriptId":"142","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/shebang-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42,"count":1}],"isBlockCoverage":true}]},{"scriptId":"143","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/cross-spawn/lib/enoent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1480,"count":1}],"isBlockCoverage":true},{"functionName":"notFoundError","ranges":[{"startOffset":60,"endOffset":358,"count":0}],"isBlockCoverage":false},{"functionName":"hookChildProcess","ranges":[{"startOffset":360,"endOffset":1023,"count":0}],"isBlockCoverage":false},{"functionName":"verifyENOENT","ranges":[{"startOffset":1025,"endOffset":1195,"count":0}],"isBlockCoverage":false},{"functionName":"verifyENOENTSync","ranges":[{"startOffset":1197,"endOffset":1375,"count":0}],"isBlockCoverage":false}]},{"scriptId":"144","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/signal-exit/dist/cjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9435,"count":1},{"startOffset":8597,"endOffset":8623,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":518,"endOffset":562,"count":0}],"isBlockCoverage":false},{"functionName":"processOk","ranges":[{"startOffset":585,"endOffset":952,"count":2}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1130,"endOffset":2434,"count":1}],"isBlockCoverage":true},{"functionName":"Emitter","ranges":[{"startOffset":1325,"endOffset":1616,"count":1},{"startOffset":1375,"endOffset":1427,"count":0}],"isBlockCoverage":true},{"functionName":"on","ranges":[{"startOffset":1621,"endOffset":1676,"count":1}],"isBlockCoverage":true},{"functionName":"removeListener","ranges":[{"startOffset":1681,"endOffset":2040,"count":1},{"startOffset":1835,"endOffset":1866,"count":0},{"startOffset":1978,"endOffset":2034,"count":0}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":2045,"endOffset":2432,"count":0}],"isBlockCoverage":false},{"functionName":"signalExitWrap","ranges":[{"startOffset":2483,"endOffset":2732,"count":1}],"isBlockCoverage":true},{"functionName":"onExit","ranges":[{"startOffset":2519,"endOffset":2592,"count":1}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":2602,"endOffset":2655,"count":0}],"isBlockCoverage":false},{"functionName":"unload","ranges":[{"startOffset":2665,"endOffset":2722,"count":0}],"isBlockCoverage":false},{"functionName":"onExit","ranges":[{"startOffset":2788,"endOffset":2830,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":2835,"endOffset":2845,"count":0}],"isBlockCoverage":false},{"functionName":"unload","ranges":[{"startOffset":2850,"endOffset":2862,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2865,"endOffset":8403,"count":1},{"startOffset":3070,"endOffset":3080,"count":0}],"isBlockCoverage":true},{"functionName":"SignalExit","ranges":[{"startOffset":3269,"endOffset":5206,"count":1},{"startOffset":3467,"endOffset":5088,"count":17}],"isBlockCoverage":true},{"functionName":"SignalExit.#sigListeners.<computed>","ranges":[{"startOffset":3507,"endOffset":5077,"count":0}],"isBlockCoverage":false},{"functionName":"onExit","ranges":[{"startOffset":5211,"endOffset":5804,"count":1},{"startOffset":5299,"endOffset":5340,"count":0},{"startOffset":5466,"endOffset":5478,"count":0},{"startOffset":5479,"endOffset":5492,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5320,"endOffset":5329,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5552,"endOffset":5797,"count":1}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":5809,"endOffset":6637,"count":1},{"startOffset":5844,"endOffset":5875,"count":0},{"startOffset":6227,"endOffset":6419,"count":17},{"startOffset":6396,"endOffset":6409,"count":0}],"isBlockCoverage":true},{"functionName":"#process.emit","ranges":[{"startOffset":6449,"endOffset":6522,"count":17}],"isBlockCoverage":true},{"functionName":"#process.reallyExit","ranges":[{"startOffset":6559,"endOffset":6630,"count":0}],"isBlockCoverage":false},{"functionName":"unload","ranges":[{"startOffset":6642,"endOffset":7393,"count":1},{"startOffset":6680,"endOffset":6711,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6779,"endOffset":7227,"count":17},{"startOffset":6903,"endOffset":6994,"count":0},{"startOffset":7171,"endOffset":7184,"count":0}],"isBlockCoverage":true},{"functionName":"#processReallyExit","ranges":[{"startOffset":7398,"endOffset":7764,"count":0}],"isBlockCoverage":false},{"functionName":"#processEmit","ranges":[{"startOffset":7769,"endOffset":8401,"count":17},{"startOffset":7869,"endOffset":7896,"count":0},{"startOffset":7898,"endOffset":8314,"count":0}],"isBlockCoverage":true}]},{"scriptId":"145","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/signal-exit/dist/cjs/signals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1560,"count":1}],"isBlockCoverage":true}]},{"scriptId":"146","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/foreground-child/dist/cjs/all-signals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1553,"count":1}],"isBlockCoverage":true},{"functionName":"__importDefault","ranges":[{"startOffset":70,"endOffset":151,"count":1},{"startOffset":122,"endOffset":127,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":456,"endOffset":642,"count":234},{"startOffset":481,"endOffset":557,"count":33},{"startOffset":558,"endOffset":642,"count":32}],"isBlockCoverage":true}]},{"scriptId":"147","url":"node:constants","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1713,"count":1}],"isBlockCoverage":false}]},{"scriptId":"148","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/foreground-child/dist/cjs/watchdog.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1312,"count":1}],"isBlockCoverage":true},{"functionName":"watchdog","ranges":[{"startOffset":911,"endOffset":1245,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1107,"endOffset":1131,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1155,"endOffset":1225,"count":1},{"startOffset":1199,"endOffset":1219,"count":0}],"isBlockCoverage":true}]},{"scriptId":"149","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/jackspeak/dist/cjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30016,"count":1},{"startOffset":638,"endOffset":643,"count":0}],"isBlockCoverage":true},{"functionName":"__importDefault","ranges":[{"startOffset":70,"endOffset":151,"count":1},{"startOffset":122,"endOffset":127,"count":0}],"isBlockCoverage":true},{"functionName":"indent","ranges":[{"startOffset":706,"endOffset":724,"count":0}],"isBlockCoverage":false},{"functionName":"toEnvKey","ranges":[{"startOffset":743,"endOffset":902,"count":0}],"isBlockCoverage":false},{"functionName":"toEnvVal","ranges":[{"startOffset":921,"endOffset":1589,"count":0}],"isBlockCoverage":false},{"functionName":"fromEnvVal","ranges":[{"startOffset":1610,"endOffset":1865,"count":0}],"isBlockCoverage":false},{"functionName":"isConfigType","ranges":[{"startOffset":1888,"endOffset":1977,"count":50},{"startOffset":1940,"endOffset":1957,"count":38},{"startOffset":1958,"endOffset":1976,"count":36}],"isBlockCoverage":true},{"functionName":"undefOrType","ranges":[{"startOffset":2036,"endOffset":2079,"count":8},{"startOffset":2062,"endOffset":2079,"count":4}],"isBlockCoverage":true},{"functionName":"valueType","ranges":[{"startOffset":2152,"endOffset":2460,"count":0}],"isBlockCoverage":false},{"functionName":"joinTypes","ranges":[{"startOffset":2480,"endOffset":2545,"count":0}],"isBlockCoverage":false},{"functionName":"isValidValue","ranges":[{"startOffset":2568,"endOffset":2811,"count":1},{"startOffset":2605,"endOffset":2731,"count":0},{"startOffset":2766,"endOffset":2779,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2687,"endOffset":2723,"count":0}],"isBlockCoverage":false},{"functionName":"isConfigOption","ranges":[{"startOffset":2836,"endOffset":3217,"count":50},{"startOffset":2953,"endOffset":2990,"count":2},{"startOffset":2991,"endOffset":3034,"count":2},{"startOffset":3035,"endOffset":3071,"count":2},{"startOffset":3072,"endOffset":3114,"count":2},{"startOffset":3115,"endOffset":3187,"count":2},{"startOffset":3147,"endOffset":3186,"count":0},{"startOffset":3188,"endOffset":3217,"count":2}],"isBlockCoverage":true},{"functionName":"num","ranges":[{"startOffset":3260,"endOffset":3654,"count":1},{"startOffset":3365,"endOffset":3403,"count":0},{"startOffset":3405,"endOffset":3466,"count":0},{"startOffset":3500,"endOffset":3505,"count":0}],"isBlockCoverage":true},{"functionName":"numList","ranges":[{"startOffset":3655,"endOffset":4051,"count":0}],"isBlockCoverage":false},{"functionName":"opt","ranges":[{"startOffset":4052,"endOffset":4446,"count":5},{"startOffset":4157,"endOffset":4195,"count":1},{"startOffset":4197,"endOffset":4258,"count":0},{"startOffset":4292,"endOffset":4297,"count":1},{"startOffset":4306,"endOffset":4317,"count":4}],"isBlockCoverage":true},{"functionName":"optList","ranges":[{"startOffset":4447,"endOffset":4843,"count":1},{"startOffset":4556,"endOffset":4593,"count":0},{"startOffset":4595,"endOffset":4656,"count":0},{"startOffset":4690,"endOffset":4695,"count":0}],"isBlockCoverage":true},{"functionName":"flag","ranges":[{"startOffset":4844,"endOffset":5344,"count":18},{"startOffset":4956,"endOffset":4995,"count":0},{"startOffset":4997,"endOffset":5058,"count":0},{"startOffset":5092,"endOffset":5097,"count":0},{"startOffset":5147,"endOffset":5215,"count":0}],"isBlockCoverage":true},{"functionName":"flagList","ranges":[{"startOffset":5345,"endOffset":5852,"count":0}],"isBlockCoverage":false},{"functionName":"toParseArgsOptionsConfig","ranges":[{"startOffset":5886,"endOffset":7188,"count":1},{"startOffset":5957,"endOffset":7172,"count":25},{"startOffset":6068,"endOffset":6250,"count":0},{"startOffset":6322,"endOffset":6575,"count":1},{"startOffset":6525,"endOffset":6549,"count":0},{"startOffset":6575,"endOffset":6791,"count":24},{"startOffset":6838,"endOffset":6897,"count":17},{"startOffset":6936,"endOffset":6980,"count":18},{"startOffset":6981,"endOffset":7024,"count":18},{"startOffset":7026,"endOffset":7166,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6209,"endOffset":6223,"count":0}],"isBlockCoverage":false},{"functionName":"isHeading","ranges":[{"startOffset":7208,"endOffset":7235,"count":0}],"isBlockCoverage":false},{"functionName":"isDescription","ranges":[{"startOffset":7259,"endOffset":7290,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":7429,"endOffset":28611,"count":1}],"isBlockCoverage":true},{"functionName":"Jack","ranges":[{"startOffset":7588,"endOffset":8183,"count":1},{"startOffset":7796,"endOffset":7815,"count":0}],"isBlockCoverage":true},{"functionName":"setConfigValues","ranges":[{"startOffset":8445,"endOffset":8815,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":9246,"endOffset":13585,"count":1},{"startOffset":9370,"endOffset":9373,"count":0},{"startOffset":9419,"endOffset":9764,"count":0},{"startOffset":10227,"endOffset":13011,"count":2},{"startOffset":10274,"endOffset":10512,"count":1},{"startOffset":10377,"endOffset":10498,"count":0},{"startOffset":10512,"endOffset":13001,"count":1},{"startOffset":10650,"endOffset":11165,"count":0},{"startOffset":11247,"endOffset":11557,"count":0},{"startOffset":11652,"endOffset":11900,"count":0},{"startOffset":11979,"endOffset":12125,"count":0},{"startOffset":12252,"endOffset":12620,"count":0},{"startOffset":12694,"endOffset":12861,"count":0},{"startOffset":13078,"endOffset":13244,"count":25},{"startOffset":13120,"endOffset":13143,"count":1},{"startOffset":13145,"endOffset":13234,"count":1},{"startOffset":13308,"endOffset":13534,"count":2},{"startOffset":13391,"endOffset":13407,"count":0},{"startOffset":13409,"endOffset":13524,"count":0}],"isBlockCoverage":true},{"functionName":"#noNoFields","ranges":[{"startOffset":13699,"endOffset":14115,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":14279,"endOffset":15131,"count":0}],"isBlockCoverage":false},{"functionName":"#writeEnv","ranges":[{"startOffset":15136,"endOffset":15427,"count":1},{"startOffset":15214,"endOffset":15426,"count":0}],"isBlockCoverage":true},{"functionName":"heading","ranges":[{"startOffset":15496,"endOffset":15744,"count":0}],"isBlockCoverage":false},{"functionName":"description","ranges":[{"startOffset":15838,"endOffset":15961,"count":1}],"isBlockCoverage":true},{"functionName":"num","ranges":[{"startOffset":16020,"endOffset":16084,"count":1}],"isBlockCoverage":true},{"functionName":"numList","ranges":[{"startOffset":16152,"endOffset":16224,"count":0}],"isBlockCoverage":false},{"functionName":"opt","ranges":[{"startOffset":16290,"endOffset":16354,"count":3}],"isBlockCoverage":true},{"functionName":"optList","ranges":[{"startOffset":16429,"endOffset":16501,"count":1}],"isBlockCoverage":true},{"functionName":"flag","ranges":[{"startOffset":16558,"endOffset":16624,"count":3}],"isBlockCoverage":true},{"functionName":"flagList","ranges":[{"startOffset":16690,"endOffset":16764,"count":0}],"isBlockCoverage":false},{"functionName":"addFields","ranges":[{"startOffset":17007,"endOffset":17377,"count":0}],"isBlockCoverage":false},{"functionName":"#addFields","ranges":[{"startOffset":17382,"endOffset":17831,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17519,"endOffset":17800,"count":25}],"isBlockCoverage":true},{"functionName":"#validateName","ranges":[{"startOffset":17836,"endOffset":18925,"count":25},{"startOffset":17933,"endOffset":18072,"count":0},{"startOffset":18108,"endOffset":18187,"count":0},{"startOffset":18220,"endOffset":18361,"count":0},{"startOffset":18387,"endOffset":18919,"count":17},{"startOffset":18441,"endOffset":18606,"count":0},{"startOffset":18650,"endOffset":18824,"count":0}],"isBlockCoverage":true},{"functionName":"usage","ranges":[{"startOffset":19005,"endOffset":22881,"count":0}],"isBlockCoverage":false},{"functionName":"usageMarkdown","ranges":[{"startOffset":22970,"endOffset":25664,"count":0}],"isBlockCoverage":false},{"functionName":"#usageRows","ranges":[{"startOffset":25669,"endOffset":27687,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":27766,"endOffset":28424,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28486,"endOffset":28609,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":28756,"endOffset":29382,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeMarkdown","ranges":[{"startOffset":29477,"endOffset":29670,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeOneLine","ranges":[{"startOffset":29697,"endOffset":29840,"count":0}],"isBlockCoverage":false},{"functionName":"jack","ranges":[{"startOffset":29925,"endOffset":29960,"count":1}],"isBlockCoverage":true}]},{"scriptId":"150","url":"node:internal/util/parse_args/parse_args","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12919,"count":1}],"isBlockCoverage":false},{"functionName":"getMainArgs","ranges":[{"startOffset":1135,"endOffset":1729,"count":0}],"isBlockCoverage":false},{"functionName":"checkOptionLikeValue","ranges":[{"startOffset":1874,"endOffset":2478,"count":0}],"isBlockCoverage":false},{"functionName":"checkOptionUsage","ranges":[{"startOffset":2658,"endOffset":3449,"count":0}],"isBlockCoverage":false},{"functionName":"storeOption","ranges":[{"startOffset":3772,"endOffset":4596,"count":0}],"isBlockCoverage":false},{"functionName":"storeDefaultOption","ranges":[{"startOffset":4921,"endOffset":5090,"count":0}],"isBlockCoverage":false},{"functionName":"argsToTokens","ranges":[{"startOffset":5365,"endOffset":9345,"count":0}],"isBlockCoverage":false},{"functionName":"parseArgs","ranges":[{"startOffset":9365,"endOffset":12881,"count":0}],"isBlockCoverage":false}]},{"scriptId":"151","url":"node:internal/util/parse_args/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6225,"count":1}],"isBlockCoverage":false},{"functionName":"objectGetOwn","ranges":[{"startOffset":693,"endOffset":782,"count":0}],"isBlockCoverage":false},{"functionName":"optionsGetOwn","ranges":[{"startOffset":865,"endOffset":1011,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionValue","ranges":[{"startOffset":1277,"endOffset":1502,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionLikeValue","ranges":[{"startOffset":1719,"endOffset":1862,"count":0}],"isBlockCoverage":false},{"functionName":"isLoneShortOption","ranges":[{"startOffset":1936,"endOffset":2088,"count":0}],"isBlockCoverage":false},{"functionName":"isLoneLongOption","ranges":[{"startOffset":2336,"endOffset":2484,"count":0}],"isBlockCoverage":false},{"functionName":"isLongOptionAndValue","ranges":[{"startOffset":2681,"endOffset":2832,"count":0}],"isBlockCoverage":false},{"functionName":"isShortOptionGroup","ranges":[{"startOffset":3724,"endOffset":4109,"count":0}],"isBlockCoverage":false},{"functionName":"isShortOptionAndValue","ranges":[{"startOffset":4418,"endOffset":4847,"count":0}],"isBlockCoverage":false},{"functionName":"findLongOptionForShort","ranges":[{"startOffset":5170,"endOffset":5472,"count":0}],"isBlockCoverage":false},{"functionName":"useDefaultValueOption","ranges":[{"startOffset":5797,"endOffset":5967,"count":0}],"isBlockCoverage":false}]},{"scriptId":"152","url":"node:internal/mime","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10569,"count":1}],"isBlockCoverage":false},{"functionName":"toASCIILower","ranges":[{"startOffset":587,"endOffset":820,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeAndSubtype","ranges":[{"startOffset":866,"endOffset":2524,"count":0}],"isBlockCoverage":false},{"functionName":"removeBackslashes","ranges":[{"startOffset":2641,"endOffset":3056,"count":0}],"isBlockCoverage":false},{"functionName":"escapeQuoteOrSolidus","ranges":[{"startOffset":3059,"endOffset":3271,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":3288,"endOffset":3527,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3530,"endOffset":8526,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":8986,"endOffset":10365,"count":0}],"isBlockCoverage":false}]},{"scriptId":"153","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/jackspeak/dist/cjs/parse-args.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1586,"count":1},{"startOffset":407,"endOffset":488,"count":0},{"startOffset":664,"endOffset":706,"count":0},{"startOffset":1301,"endOffset":1311,"count":0},{"startOffset":1452,"endOffset":1466,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88,"endOffset":405,"count":42},{"startOffset":232,"endOffset":247,"count":3},{"startOffset":248,"endOffset":284,"count":39},{"startOffset":264,"endOffset":284,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":327,"endOffset":354,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":410,"endOffset":487,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":571,"endOffset":662,"count":1}],"isBlockCoverage":true},{"functionName":"__setModuleDefault","ranges":[{"startOffset":666,"endOffset":706,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":759,"endOffset":1039,"count":1},{"startOffset":807,"endOffset":818,"count":0},{"startOffset":880,"endOffset":981,"count":42}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1376,"endOffset":1396,"count":3}],"isBlockCoverage":true}]},{"scriptId":"154","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/@pkgjs/parseargs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12936,"count":1}],"isBlockCoverage":true},{"functionName":"getMainArgs","ranges":[{"startOffset":1139,"endOffset":1733,"count":0}],"isBlockCoverage":false},{"functionName":"checkOptionLikeValue","ranges":[{"startOffset":1881,"endOffset":2485,"count":0}],"isBlockCoverage":false},{"functionName":"checkOptionUsage","ranges":[{"startOffset":2668,"endOffset":3459,"count":0}],"isBlockCoverage":false},{"functionName":"storeOption","ranges":[{"startOffset":3785,"endOffset":4609,"count":1},{"startOffset":3884,"endOffset":3917,"count":0},{"startOffset":4073,"endOffset":4080,"count":0},{"startOffset":4136,"endOffset":4561,"count":0}],"isBlockCoverage":true},{"functionName":"storeDefaultOption","ranges":[{"startOffset":4937,"endOffset":5106,"count":1},{"startOffset":5034,"endOffset":5067,"count":0}],"isBlockCoverage":true},{"functionName":"argsToTokens","ranges":[{"startOffset":5384,"endOffset":9364,"count":1},{"startOffset":5571,"endOffset":9344,"count":2},{"startOffset":5693,"endOffset":5706,"count":0},{"startOffset":5898,"endOffset":6292,"count":0},{"startOffset":6326,"endOffset":6976,"count":1},{"startOffset":6976,"endOffset":7830,"count":0},{"startOffset":7830,"endOffset":7877,"count":1},{"startOffset":7877,"endOffset":8259,"count":0},{"startOffset":8259,"endOffset":8292,"count":1},{"startOffset":8292,"endOffset":8831,"count":0},{"startOffset":8831,"endOffset":8868,"count":1},{"startOffset":8868,"endOffset":9264,"count":0},{"startOffset":9264,"endOffset":9344,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6127,"endOffset":6216,"count":0}],"isBlockCoverage":false},{"functionName":"parseArgs","ranges":[{"startOffset":9384,"endOffset":12898,"count":1},{"startOffset":9457,"endOffset":9473,"count":0},{"startOffset":9523,"endOffset":9530,"count":0},{"startOffset":9600,"endOffset":9610,"count":0},{"startOffset":9666,"endOffset":9674,"count":0},{"startOffset":9726,"endOffset":9748,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10172,"endOffset":11542,"count":43},{"startOffset":10497,"endOffset":10837,"count":17},{"startOffset":10653,"endOffset":10829,"count":0},{"startOffset":11148,"endOffset":11536,"count":1},{"startOffset":11267,"endOffset":11288,"count":0},{"startOffset":11337,"endOffset":11452,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11861,"endOffset":12310,"count":2},{"startOffset":11907,"endOffset":12093,"count":1},{"startOffset":11927,"endOffset":12019,"count":0},{"startOffset":12093,"endOffset":12306,"count":1},{"startOffset":12163,"endOffset":12241,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12416,"endOffset":12875,"count":43},{"startOffset":12722,"endOffset":12871,"count":1}],"isBlockCoverage":true}]},{"scriptId":"155","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/@pkgjs/parseargs/internal/primordials.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11947,"count":1}],"isBlockCoverage":true},{"functionName":"getNewKey","ranges":[{"startOffset":3237,"endOffset":3422,"count":651},{"startOffset":3296,"endOffset":3372,"count":36},{"startOffset":3373,"endOffset":3419,"count":615}],"isBlockCoverage":true},{"functionName":"copyAccessor","ranges":[{"startOffset":3424,"endOffset":3741,"count":53},{"startOffset":3622,"endOffset":3739,"count":22}],"isBlockCoverage":true},{"functionName":"copyPropsRenamed","ranges":[{"startOffset":3743,"endOffset":4456,"count":38},{"startOffset":3831,"endOffset":4454,"count":268},{"startOffset":3951,"endOffset":4006,"count":24},{"startOffset":4006,"endOffset":4450,"count":244},{"startOffset":4143,"endOffset":4444,"count":4}],"isBlockCoverage":true},{"functionName":"copyPropsRenamedBound","ranges":[{"startOffset":4458,"endOffset":5108,"count":1},{"startOffset":4551,"endOffset":5106,"count":10},{"startOffset":4671,"endOffset":4726,"count":1},{"startOffset":4726,"endOffset":5102,"count":9},{"startOffset":4803,"endOffset":4850,"count":6},{"startOffset":4981,"endOffset":5096,"count":0}],"isBlockCoverage":true},{"functionName":"copyPrototype","ranges":[{"startOffset":5110,"endOffset":5750,"count":41},{"startOffset":5195,"endOffset":5748,"count":373},{"startOffset":5315,"endOffset":5370,"count":28},{"startOffset":5370,"endOffset":5744,"count":345},{"startOffset":5447,"endOffset":5497,"count":299},{"startOffset":5628,"endOffset":5738,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5862,"endOffset":5967,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6096,"endOffset":6136,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6238,"endOffset":6356,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6908,"endOffset":7157,"count":34}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7349,"endOffset":7603,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8105,"endOffset":8419,"count":3}],"isBlockCoverage":true},{"functionName":"createSafeIterator","ranges":[{"startOffset":8846,"endOffset":9222,"count":10}],"isBlockCoverage":true},{"functionName":"SafeIterator","ranges":[{"startOffset":8894,"endOffset":8965,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":8970,"endOffset":9019,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9024,"endOffset":9069,"count":0}],"isBlockCoverage":false},{"functionName":"copyProps","ranges":[{"startOffset":9527,"endOffset":9776,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9589,"endOffset":9772,"count":25},{"startOffset":9653,"endOffset":9768,"count":11}],"isBlockCoverage":true},{"functionName":"makeSafe","ranges":[{"startOffset":9796,"endOffset":10928,"count":4},{"startOffset":9858,"endOffset":10783,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10007,"endOffset":10717,"count":25},{"startOffset":10083,"endOffset":10711,"count":23},{"startOffset":10218,"endOffset":10254,"count":19},{"startOffset":10255,"endOffset":10334,"count":10},{"startOffset":10328,"endOffset":10333,"count":2},{"startOffset":10345,"endOffset":10645,"count":8},{"startOffset":10427,"endOffset":10469,"count":2}],"isBlockCoverage":true},{"functionName":"desc.value","ranges":[{"startOffset":10567,"endOffset":10634,"count":0}],"isBlockCoverage":false},{"functionName":"SafeMap","ranges":[{"startOffset":11268,"endOffset":11296,"count":0}],"isBlockCoverage":false},{"functionName":"SafeWeakMap","ranges":[{"startOffset":11439,"endOffset":11467,"count":0}],"isBlockCoverage":false},{"functionName":"SafeSet","ranges":[{"startOffset":11594,"endOffset":11622,"count":0}],"isBlockCoverage":false},{"functionName":"SafeWeakSet","ranges":[{"startOffset":11765,"endOffset":11793,"count":0}],"isBlockCoverage":false}]},{"scriptId":"156","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/@pkgjs/parseargs/internal/validators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2243,"count":1}],"isBlockCoverage":true},{"functionName":"validateString","ranges":[{"startOffset":411,"endOffset":549,"count":18},{"startOffset":483,"endOffset":547,"count":0}],"isBlockCoverage":true},{"functionName":"validateUnion","ranges":[{"startOffset":551,"endOffset":738,"count":43},{"startOffset":641,"endOffset":736,"count":0}],"isBlockCoverage":true},{"functionName":"validateBoolean","ranges":[{"startOffset":740,"endOffset":881,"count":46},{"startOffset":814,"endOffset":879,"count":0}],"isBlockCoverage":true},{"functionName":"validateArray","ranges":[{"startOffset":883,"endOffset":1014,"count":1},{"startOffset":949,"endOffset":1012,"count":0}],"isBlockCoverage":true},{"functionName":"validateStringArray","ranges":[{"startOffset":1016,"endOffset":1185,"count":0}],"isBlockCoverage":false},{"functionName":"validateBooleanArray","ranges":[{"startOffset":1187,"endOffset":1358,"count":0}],"isBlockCoverage":false},{"functionName":"validateObject","ranges":[{"startOffset":1528,"endOffset":2083,"count":46},{"startOffset":1668,"endOffset":1688,"count":0},{"startOffset":1740,"endOffset":1763,"count":0},{"startOffset":1810,"endOffset":1828,"count":0},{"startOffset":1948,"endOffset":2014,"count":0},{"startOffset":2017,"endOffset":2081,"count":0}],"isBlockCoverage":true}]},{"scriptId":"157","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/@pkgjs/parseargs/internal/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1431,"count":1}],"isBlockCoverage":true},{"functionName":"ERR_INVALID_ARG_TYPE","ranges":[{"startOffset":64,"endOffset":201,"count":0}],"isBlockCoverage":false},{"functionName":"ERR_INVALID_ARG_VALUE","ranges":[{"startOffset":255,"endOffset":402,"count":0}],"isBlockCoverage":false},{"functionName":"ERR_PARSE_ARGS_INVALID_OPTION_VALUE","ranges":[{"startOffset":466,"endOffset":567,"count":0}],"isBlockCoverage":false},{"functionName":"ERR_PARSE_ARGS_UNKNOWN_OPTION","ranges":[{"startOffset":625,"endOffset":970,"count":0}],"isBlockCoverage":false},{"functionName":"ERR_PARSE_ARGS_UNEXPECTED_POSITIONAL","ranges":[{"startOffset":1035,"endOffset":1219,"count":0}],"isBlockCoverage":false}]},{"scriptId":"158","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/@pkgjs/parseargs/internal/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":235,"count":1}],"isBlockCoverage":true}]},{"scriptId":"159","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/@pkgjs/parseargs/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6251,"count":1}],"isBlockCoverage":true},{"functionName":"objectGetOwn","ranges":[{"startOffset":717,"endOffset":806,"count":181},{"startOffset":787,"endOffset":804,"count":145}],"isBlockCoverage":true},{"functionName":"optionsGetOwn","ranges":[{"startOffset":889,"endOffset":1035,"count":2}],"isBlockCoverage":true},{"functionName":"isOptionValue","ranges":[{"startOffset":1301,"endOffset":1526,"count":1},{"startOffset":1354,"endOffset":1367,"count":0}],"isBlockCoverage":true},{"functionName":"isOptionLikeValue","ranges":[{"startOffset":1743,"endOffset":1886,"count":0}],"isBlockCoverage":false},{"functionName":"isLoneShortOption","ranges":[{"startOffset":1960,"endOffset":2112,"count":2},{"startOffset":2020,"endOffset":2064,"count":1},{"startOffset":2065,"endOffset":2109,"count":1}],"isBlockCoverage":true},{"functionName":"isLoneLongOption","ranges":[{"startOffset":2360,"endOffset":2508,"count":1},{"startOffset":2461,"endOffset":2505,"count":0}],"isBlockCoverage":true},{"functionName":"isLongOptionAndValue","ranges":[{"startOffset":2705,"endOffset":2856,"count":1},{"startOffset":2810,"endOffset":2853,"count":0}],"isBlockCoverage":true},{"functionName":"isShortOptionGroup","ranges":[{"startOffset":3748,"endOffset":4133,"count":1},{"startOffset":3815,"endOffset":3828,"count":0},{"startOffset":3887,"endOffset":4132,"count":0}],"isBlockCoverage":true},{"functionName":"isShortOptionAndValue","ranges":[{"startOffset":4442,"endOffset":4871,"count":1},{"startOffset":4551,"endOffset":4564,"count":0},{"startOffset":4623,"endOffset":4870,"count":0}],"isBlockCoverage":true},{"functionName":"findLongOptionForShort","ranges":[{"startOffset":5194,"endOffset":5495,"count":1},{"startOffset":5478,"endOffset":5492,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5366,"endOffset":5442,"count":1}],"isBlockCoverage":true},{"functionName":"useDefaultValueOption","ranges":[{"startOffset":5823,"endOffset":5993,"count":43},{"startOffset":5951,"endOffset":5990,"count":1}],"isBlockCoverage":true}]},{"scriptId":"160","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/@isaacs/cliui/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10398,"count":1}],"isBlockCoverage":true},{"functionName":"UI","ranges":[{"startOffset":162,"endOffset":395,"count":0}],"isBlockCoverage":false},{"functionName":"span","ranges":[{"startOffset":400,"endOffset":487,"count":0}],"isBlockCoverage":false},{"functionName":"resetOutput","ranges":[{"startOffset":492,"endOffset":537,"count":0}],"isBlockCoverage":false},{"functionName":"div","ranges":[{"startOffset":542,"endOffset":1015,"count":0}],"isBlockCoverage":false},{"functionName":"shouldApplyLayoutDSL","ranges":[{"startOffset":1020,"endOffset":1160,"count":0}],"isBlockCoverage":false},{"functionName":"applyLayoutDSL","ranges":[{"startOffset":1165,"endOffset":2263,"count":0}],"isBlockCoverage":false},{"functionName":"colFromString","ranges":[{"startOffset":2268,"endOffset":2388,"count":0}],"isBlockCoverage":false},{"functionName":"measurePadding","ranges":[{"startOffset":2393,"endOffset":2605,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2610,"endOffset":2939,"count":0}],"isBlockCoverage":false},{"functionName":"rowToString","ranges":[{"startOffset":2944,"endOffset":4955,"count":0}],"isBlockCoverage":false},{"functionName":"renderInline","ranges":[{"startOffset":5033,"endOffset":5854,"count":0}],"isBlockCoverage":false},{"functionName":"rasterize","ranges":[{"startOffset":5859,"endOffset":7306,"count":0}],"isBlockCoverage":false},{"functionName":"negatePadding","ranges":[{"startOffset":7311,"endOffset":7642,"count":0}],"isBlockCoverage":false},{"functionName":"columnWidths","ranges":[{"startOffset":7647,"endOffset":8543,"count":0}],"isBlockCoverage":false},{"functionName":"addBorder","ranges":[{"startOffset":8546,"endOffset":8792,"count":0}],"isBlockCoverage":false},{"functionName":"_minWidth","ranges":[{"startOffset":8871,"endOffset":9086,"count":0}],"isBlockCoverage":false},{"functionName":"getWindowWidth","ranges":[{"startOffset":9087,"endOffset":9285,"count":0}],"isBlockCoverage":false},{"functionName":"alignRight","ranges":[{"startOffset":9307,"endOffset":9510,"count":0}],"isBlockCoverage":false},{"functionName":"alignCenter","ranges":[{"startOffset":9511,"endOffset":9774,"count":0}],"isBlockCoverage":false},{"functionName":"cliui","ranges":[{"startOffset":9786,"endOffset":10086,"count":0}],"isBlockCoverage":false},{"functionName":"ui","ranges":[{"startOffset":10268,"endOffset":10375,"count":0}],"isBlockCoverage":false}]},{"scriptId":"161","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/string-width-cjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":923,"count":1}],"isBlockCoverage":true},{"functionName":"stringWidth","ranges":[{"startOffset":184,"endOffset":805,"count":0}],"isBlockCoverage":false}]},{"scriptId":"162","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":152,"count":0}],"isBlockCoverage":false}]},{"scriptId":"163","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":350,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":348,"count":0}],"isBlockCoverage":false}]},{"scriptId":"164","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/is-fullwidth-code-point/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1756,"count":1}],"isBlockCoverage":true},{"functionName":"isFullwidthCodePoint","ranges":[{"startOffset":70,"endOffset":1667,"count":0}],"isBlockCoverage":false}]},{"scriptId":"165","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/emoji-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10286,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":10284,"count":0}],"isBlockCoverage":false}]},{"scriptId":"166","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/strip-ansi-cjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":152,"count":0}],"isBlockCoverage":false}]},{"scriptId":"167","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/wrap-ansi-cjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5772,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi","ranges":[{"startOffset":391,"endOffset":473,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsiHyperlink","ranges":[{"startOffset":501,"endOffset":586,"count":0}],"isBlockCoverage":false},{"functionName":"wordLengths","ranges":[{"startOffset":716,"endOffset":784,"count":0}],"isBlockCoverage":false},{"functionName":"wrapWord","ranges":[{"startOffset":894,"endOffset":2106,"count":0}],"isBlockCoverage":false},{"functionName":"stringVisibleTrimSpacesRight","ranges":[{"startOffset":2205,"endOffset":2490,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":2725,"endOffset":5528,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":5598,"endOffset":5770,"count":0}],"isBlockCoverage":false}]},{"scriptId":"168","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/string-width/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":923,"count":1}],"isBlockCoverage":true},{"functionName":"stringWidth","ranges":[{"startOffset":184,"endOffset":805,"count":0}],"isBlockCoverage":false}]},{"scriptId":"169","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/wrap-ansi-cjs/node_modules/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4139,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi16","ranges":[{"startOffset":34,"endOffset":129,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi256","ranges":[{"startOffset":152,"endOffset":255,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":278,"endOffset":402,"count":0}],"isBlockCoverage":false},{"functionName":"ansi2ansi","ranges":[{"startOffset":423,"endOffset":429,"count":0}],"isBlockCoverage":false},{"functionName":"rgb2rgb","ranges":[{"startOffset":447,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"setLazyProperty","ranges":[{"startOffset":496,"endOffset":786,"count":30}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":575,"endOffset":737,"count":0}],"isBlockCoverage":false},{"functionName":"makeDynamicStyles","ranges":[{"startOffset":879,"endOffset":1400,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":1403,"endOffset":4021,"count":5},{"startOffset":2869,"endOffset":3201,"count":15},{"startOffset":2929,"endOffset":3108,"count":220}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3401,"endOffset":3464,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3509,"endOffset":3574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3619,"endOffset":3678,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3722,"endOffset":3784,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3831,"endOffset":3895,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3942,"endOffset":4000,"count":0}],"isBlockCoverage":false}]},{"scriptId":"170","url":"node:tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5058,"count":1}],"isBlockCoverage":false},{"functionName":"isatty","ranges":[{"startOffset":1535,"endOffset":1641,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":1643,"endOffset":2112,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.setRawMode","ranges":[{"startOffset":2261,"endOffset":2478,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":2481,"endOffset":3453,"count":1},{"startOffset":2550,"endOffset":2577,"count":0},{"startOffset":2614,"endOffset":2643,"count":0},{"startOffset":2725,"endOffset":2770,"count":0}],"isBlockCoverage":true},{"functionName":"WriteStream._refreshSize","ranges":[{"startOffset":3744,"endOffset":4180,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.cursorTo","ranges":[{"startOffset":4236,"endOffset":4376,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.moveCursor","ranges":[{"startOffset":4413,"endOffset":4559,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearLine","ranges":[{"startOffset":4595,"endOffset":4734,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearScreenDown","ranges":[{"startOffset":4776,"endOffset":4911,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.getWindowSize","ranges":[{"startOffset":4951,"endOffset":5001,"count":0}],"isBlockCoverage":false}]},{"scriptId":"171","url":"node:internal/tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6485,"count":1}],"isBlockCoverage":false},{"functionName":"warnOnDeactivatedColors","ranges":[{"startOffset":2549,"endOffset":3002,"count":0}],"isBlockCoverage":false},{"functionName":"getColorDepth","ranges":[{"startOffset":3160,"endOffset":6156,"count":0}],"isBlockCoverage":false},{"functionName":"hasColors","ranges":[{"startOffset":6158,"endOffset":6431,"count":0}],"isBlockCoverage":false}]},{"scriptId":"172","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/dist/cjs/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2860,"count":1}],"isBlockCoverage":true},{"functionName":"globStreamSync","ranges":[{"startOffset":508,"endOffset":620,"count":0}],"isBlockCoverage":false},{"functionName":"globStream","ranges":[{"startOffset":662,"endOffset":766,"count":1}],"isBlockCoverage":true},{"functionName":"globSync","ranges":[{"startOffset":800,"endOffset":904,"count":0}],"isBlockCoverage":false},{"functionName":"glob_","ranges":[{"startOffset":934,"endOffset":1037,"count":0}],"isBlockCoverage":false},{"functionName":"globIterateSync","ranges":[{"startOffset":1038,"endOffset":1152,"count":0}],"isBlockCoverage":false},{"functionName":"globIterate","ranges":[{"startOffset":1196,"endOffset":1302,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1859,"endOffset":1901,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1974,"endOffset":2018,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2125,"endOffset":2163,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2284,"endOffset":2331,"count":0}],"isBlockCoverage":false}]},{"scriptId":"173","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/minimatch/dist/cjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40340,"count":1},{"startOffset":3263,"endOffset":3272,"count":0},{"startOffset":3407,"endOffset":3423,"count":0}],"isBlockCoverage":true},{"functionName":"__importDefault","ranges":[{"startOffset":70,"endOffset":151,"count":1},{"startOffset":122,"endOffset":127,"count":0}],"isBlockCoverage":true},{"functionName":"minimatch","ranges":[{"startOffset":729,"endOffset":1007,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTest","ranges":[{"startOffset":1166,"endOffset":1219,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1175,"endOffset":1219,"count":17}],"isBlockCoverage":true},{"functionName":"starDotExtTestDot","ranges":[{"startOffset":1247,"endOffset":1278,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestNocase","ranges":[{"startOffset":1309,"endOffset":1421,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestNocaseDot","ranges":[{"startOffset":1455,"endOffset":1545,"count":0}],"isBlockCoverage":false},{"functionName":"starDotStarTest","ranges":[{"startOffset":1607,"endOffset":1651,"count":0}],"isBlockCoverage":false},{"functionName":"starDotStarTestDot","ranges":[{"startOffset":1680,"endOffset":1729,"count":0}],"isBlockCoverage":false},{"functionName":"dotStarTest","ranges":[{"startOffset":1780,"endOffset":1831,"count":0}],"isBlockCoverage":false},{"functionName":"starTest","ranges":[{"startOffset":1874,"endOffset":1917,"count":0}],"isBlockCoverage":false},{"functionName":"starTestDot","ranges":[{"startOffset":1939,"endOffset":1987,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNocase","ranges":[{"startOffset":2057,"endOffset":2247,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNocaseDot","ranges":[{"startOffset":2277,"endOffset":2470,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestDot","ranges":[{"startOffset":2494,"endOffset":2623,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTest","ranges":[{"startOffset":2644,"endOffset":2770,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNoExt","ranges":[{"startOffset":2796,"endOffset":2894,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNoExtDot","ranges":[{"startOffset":2923,"endOffset":3026,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":4110,"endOffset":4187,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":4269,"endOffset":4307,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":4326,"endOffset":5918,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":6266,"endOffset":6670,"count":1},{"startOffset":6616,"endOffset":6669,"count":0}],"isBlockCoverage":true},{"functionName":"makeRe","ranges":[{"startOffset":7419,"endOffset":7486,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":7570,"endOffset":7792,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":7956,"endOffset":8008,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":8010,"endOffset":39593,"count":1}],"isBlockCoverage":true},{"functionName":"Minimatch","ranges":[{"startOffset":8290,"endOffset":9487,"count":1},{"startOffset":8421,"endOffset":8426,"count":0},{"startOffset":8533,"endOffset":8551,"count":0},{"startOffset":8764,"endOffset":8836,"count":0},{"startOffset":9260,"endOffset":9288,"count":0},{"startOffset":9325,"endOffset":9339,"count":0}],"isBlockCoverage":true},{"functionName":"hasMagic","ranges":[{"startOffset":9492,"endOffset":9819,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":9824,"endOffset":9839,"count":4}],"isBlockCoverage":true},{"functionName":"make","ranges":[{"startOffset":9844,"endOffset":12674,"count":1},{"startOffset":10014,"endOffset":10042,"count":0},{"startOffset":10044,"endOffset":10108,"count":0},{"startOffset":10131,"endOffset":10193,"count":0},{"startOffset":10384,"endOffset":10457,"count":0},{"startOffset":12238,"endOffset":12624,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":10411,"endOffset":10446,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11087,"endOffset":11110,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11284,"endOffset":11992,"count":1},{"startOffset":11331,"endOffset":11357,"count":0},{"startOffset":11359,"endOffset":11934,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11749,"endOffset":11769,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11879,"endOffset":11899,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11960,"endOffset":11980,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12127,"endOffset":12155,"count":1}],"isBlockCoverage":true},{"functionName":"preprocess","ranges":[{"startOffset":12975,"endOffset":13984,"count":1},{"startOffset":13102,"endOffset":13387,"count":0},{"startOffset":13685,"endOffset":13952,"count":0}],"isBlockCoverage":true},{"functionName":"adjascentGlobstarOptimize","ranges":[{"startOffset":14034,"endOffset":14474,"count":0}],"isBlockCoverage":false},{"functionName":"levelOneOptimize","ranges":[{"startOffset":14534,"endOffset":15189,"count":0}],"isBlockCoverage":false},{"functionName":"levelTwoFileOptimize","ranges":[{"startOffset":15194,"endOffset":16682,"count":0}],"isBlockCoverage":false},{"functionName":"firstPhasePreProcess","ranges":[{"startOffset":17513,"endOffset":20750,"count":1},{"startOffset":17949,"endOffset":18068,"count":0},{"startOffset":18235,"endOffset":18314,"count":0},{"startOffset":18524,"endOffset":18588,"count":0},{"startOffset":18589,"endOffset":18626,"count":0},{"startOffset":18627,"endOffset":18657,"count":0},{"startOffset":18658,"endOffset":18695,"count":0},{"startOffset":18696,"endOffset":18734,"count":0},{"startOffset":18736,"endOffset":19115,"count":0},{"startOffset":19284,"endOffset":19724,"count":2},{"startOffset":19424,"endOffset":19435,"count":1},{"startOffset":19436,"endOffset":19454,"count":0},{"startOffset":19484,"endOffset":19493,"count":0},{"startOffset":19545,"endOffset":19702,"count":0},{"startOffset":19812,"endOffset":19876,"count":0},{"startOffset":19878,"endOffset":19983,"count":0},{"startOffset":20151,"endOffset":20672,"count":0}],"isBlockCoverage":true},{"functionName":"secondPhasePreProcess","ranges":[{"startOffset":21092,"endOffset":21567,"count":1},{"startOffset":21182,"endOffset":21511,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21544,"endOffset":21559,"count":1}],"isBlockCoverage":true},{"functionName":"partsMatch","ranges":[{"startOffset":21572,"endOffset":23149,"count":0}],"isBlockCoverage":false},{"functionName":"parseNegate","ranges":[{"startOffset":23154,"endOffset":23578,"count":1},{"startOffset":23216,"endOffset":23384,"count":0},{"startOffset":23391,"endOffset":23577,"count":0}],"isBlockCoverage":true},{"functionName":"matchOne","ranges":[{"startOffset":23821,"endOffset":31955,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":31960,"endOffset":32050,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":32055,"endOffset":33648,"count":4},{"startOffset":32241,"endOffset":32265,"count":1},{"startOffset":32265,"endOffset":32306,"count":3},{"startOffset":32306,"endOffset":32316,"count":0},{"startOffset":32316,"endOffset":32533,"count":3},{"startOffset":32533,"endOffset":32605,"count":0},{"startOffset":32605,"endOffset":33493,"count":3},{"startOffset":32658,"endOffset":32942,"count":1},{"startOffset":32715,"endOffset":32817,"count":0},{"startOffset":32868,"endOffset":32887,"count":0},{"startOffset":32942,"endOffset":33493,"count":2},{"startOffset":32991,"endOffset":33256,"count":0},{"startOffset":33310,"endOffset":33396,"count":0},{"startOffset":33446,"endOffset":33493,"count":0},{"startOffset":33493,"endOffset":33597,"count":3},{"startOffset":33597,"endOffset":33636,"count":1},{"startOffset":33637,"endOffset":33641,"count":2}],"isBlockCoverage":true},{"functionName":"makeRe","ranges":[{"startOffset":33653,"endOffset":37010,"count":0}],"isBlockCoverage":false},{"functionName":"slashSplit","ranges":[{"startOffset":37015,"endOffset":37584,"count":1},{"startOffset":37309,"endOffset":37353,"count":0},{"startOffset":37386,"endOffset":37410,"count":0},{"startOffset":37412,"endOffset":37518,"count":0}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":37589,"endOffset":39500,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":39512,"endOffset":39591,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":39746,"endOffset":39782,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":39895,"endOffset":39937,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":40056,"endOffset":40102,"count":1}],"isBlockCoverage":true}]},{"scriptId":"174","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/brace-expansion/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4992,"count":1}],"isBlockCoverage":true},{"functionName":"numeric","ranges":[{"startOffset":298,"endOffset":406,"count":0}],"isBlockCoverage":false},{"functionName":"escapeBraces","ranges":[{"startOffset":408,"endOffset":645,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeBraces","ranges":[{"startOffset":647,"endOffset":876,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommaParts","ranges":[{"startOffset":1040,"endOffset":1506,"count":0}],"isBlockCoverage":false},{"functionName":"expandTop","ranges":[{"startOffset":1508,"endOffset":2085,"count":0}],"isBlockCoverage":false},{"functionName":"embrace","ranges":[{"startOffset":2087,"endOffset":2138,"count":0}],"isBlockCoverage":false},{"functionName":"isPadded","ranges":[{"startOffset":2139,"endOffset":2192,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":2194,"endOffset":2233,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":2234,"endOffset":2273,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":2275,"endOffset":4990,"count":0}],"isBlockCoverage":false}]},{"scriptId":"175","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/balanced-match/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1219,"count":1}],"isBlockCoverage":true},{"functionName":"balanced","ranges":[{"startOffset":41,"endOffset":368,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMatch","ranges":[{"startOffset":370,"endOffset":455,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":481,"endOffset":1218,"count":0}],"isBlockCoverage":false}]},{"scriptId":"176","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/minimatch/dist/cjs/assert-valid-pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":492,"count":1}],"isBlockCoverage":true},{"functionName":"assertValidPattern","ranges":[{"startOffset":179,"endOffset":393,"count":6},{"startOffset":231,"endOffset":286,"count":0},{"startOffset":332,"endOffset":391,"count":0}],"isBlockCoverage":true}]},{"scriptId":"177","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/minimatch/dist/cjs/ast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22766,"count":1}],"isBlockCoverage":true},{"functionName":"isExtglobType","ranges":[{"startOffset":316,"endOffset":335,"count":13}],"isBlockCoverage":true},{"functionName":"regExpEscape","ranges":[{"startOffset":1090,"endOffset":1142,"count":12}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1541,"endOffset":22715,"count":3}],"isBlockCoverage":true},{"functionName":"AST","ranges":[{"startOffset":1848,"endOffset":2417,"count":3},{"startOffset":1989,"endOffset":2011,"count":0},{"startOffset":2077,"endOffset":2097,"count":0},{"startOffset":2160,"endOffset":2181,"count":0},{"startOffset":2229,"endOffset":2247,"count":0},{"startOffset":2274,"endOffset":2300,"count":0},{"startOffset":2314,"endOffset":2336,"count":0},{"startOffset":2378,"endOffset":2406,"count":0}],"isBlockCoverage":true},{"functionName":"get hasMagic","ranges":[{"startOffset":2422,"endOffset":2892,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2929,"endOffset":3286,"count":6},{"startOffset":2996,"endOffset":3134,"count":3},{"startOffset":3134,"endOffset":3280,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3098,"endOffset":3112,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3237,"endOffset":3251,"count":0}],"isBlockCoverage":false},{"functionName":"#fillNegs","ranges":[{"startOffset":3291,"endOffset":4480,"count":3},{"startOffset":3380,"endOffset":3424,"count":0},{"startOffset":3467,"endOffset":3479,"count":0},{"startOffset":3670,"endOffset":4453,"count":0}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":4485,"endOffset":4857,"count":3},{"startOffset":4577,"endOffset":4586,"count":0},{"startOffset":4659,"endOffset":4703,"count":0},{"startOffset":4705,"endOffset":4775,"count":0}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":4862,"endOffset":5332,"count":0}],"isBlockCoverage":false},{"functionName":"isStart","ranges":[{"startOffset":5337,"endOffset":5935,"count":6},{"startOffset":5406,"endOffset":5500,"count":0},{"startOffset":5516,"endOffset":5934,"count":0}],"isBlockCoverage":true},{"functionName":"isEnd","ranges":[{"startOffset":5940,"endOffset":6427,"count":6},{"startOffset":6007,"endOffset":6038,"count":0},{"startOffset":6060,"endOffset":6105,"count":0},{"startOffset":6121,"endOffset":6342,"count":0},{"startOffset":6343,"endOffset":6346,"count":0}],"isBlockCoverage":true},{"functionName":"copyIn","ranges":[{"startOffset":6432,"endOffset":6573,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":6578,"endOffset":6737,"count":0}],"isBlockCoverage":false},{"functionName":"#parseAST","ranges":[{"startOffset":6749,"endOffset":10733,"count":3},{"startOffset":7084,"endOffset":8460,"count":13},{"startOffset":7292,"endOffset":7413,"count":0},{"startOffset":7443,"endOffset":7861,"count":0},{"startOffset":7898,"endOffset":8087,"count":0},{"startOffset":8139,"endOffset":8163,"count":1},{"startOffset":8165,"endOffset":8420,"count":0},{"startOffset":8519,"endOffset":10732,"count":0}],"isBlockCoverage":true},{"functionName":"fromGlob","ranges":[{"startOffset":10745,"endOffset":10908,"count":3}],"isBlockCoverage":true},{"functionName":"toMMPattern","ranges":[{"startOffset":11008,"endOffset":11979,"count":3},{"startOffset":11140,"endOffset":11172,"count":0},{"startOffset":11536,"endOffset":11565,"count":2},{"startOffset":11566,"endOffset":11714,"count":2},{"startOffset":11603,"endOffset":11652,"count":0},{"startOffset":11653,"endOffset":11713,"count":0},{"startOffset":11739,"endOffset":11775,"count":2},{"startOffset":11775,"endOffset":11820,"count":1},{"startOffset":11820,"endOffset":11825,"count":0},{"startOffset":11826,"endOffset":11830,"count":1},{"startOffset":11841,"endOffset":11846,"count":0},{"startOffset":11847,"endOffset":11851,"count":1}],"isBlockCoverage":true},{"functionName":"toRegExpSource","ranges":[{"startOffset":15422,"endOffset":20542,"count":3},{"startOffset":16650,"endOffset":17681,"count":2},{"startOffset":16982,"endOffset":17007,"count":0},{"startOffset":17138,"endOffset":17163,"count":0},{"startOffset":17299,"endOffset":17324,"count":0},{"startOffset":17610,"endOffset":17628,"count":0},{"startOffset":17641,"endOffset":17653,"count":1},{"startOffset":17654,"endOffset":17658,"count":1},{"startOffset":17916,"endOffset":17922,"count":0},{"startOffset":17932,"endOffset":17982,"count":0},{"startOffset":18228,"endOffset":18485,"count":0},{"startOffset":18559,"endOffset":18572,"count":0},{"startOffset":18573,"endOffset":18580,"count":0},{"startOffset":18654,"endOffset":18669,"count":0},{"startOffset":18670,"endOffset":18678,"count":0},{"startOffset":18679,"endOffset":18699,"count":0},{"startOffset":18701,"endOffset":19151,"count":0},{"startOffset":19152,"endOffset":19158,"count":0},{"startOffset":19159,"endOffset":19173,"count":0},{"startOffset":19186,"endOffset":19190,"count":0},{"startOffset":19203,"endOffset":19230,"count":0},{"startOffset":19269,"endOffset":19545,"count":0},{"startOffset":19547,"endOffset":20541,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15708,"endOffset":16054,"count":3},{"startOffset":15871,"endOffset":15899,"count":0}],"isBlockCoverage":true},{"functionName":"#partsToRegExp","ranges":[{"startOffset":20547,"endOffset":21192,"count":0}],"isBlockCoverage":false},{"functionName":"#parseGlob","ranges":[{"startOffset":21204,"endOffset":22713,"count":3},{"startOffset":21374,"endOffset":22632,"count":13},{"startOffset":21440,"endOffset":21574,"count":0},{"startOffset":21603,"endOffset":21819,"count":0},{"startOffset":21847,"endOffset":22217,"count":0},{"startOffset":22245,"endOffset":22456,"count":1},{"startOffset":22312,"endOffset":22330,"count":0},{"startOffset":22456,"endOffset":22484,"count":12},{"startOffset":22484,"endOffset":22587,"count":0},{"startOffset":22587,"endOffset":22632,"count":12}],"isBlockCoverage":true}]},{"scriptId":"178","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/minimatch/dist/cjs/brace-expressions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5763,"count":1}],"isBlockCoverage":true},{"functionName":"braceEscape","ranges":[{"startOffset":1000,"endOffset":1037,"count":0}],"isBlockCoverage":false},{"functionName":"regexpEscape","ranges":[{"startOffset":1098,"endOffset":1150,"count":0}],"isBlockCoverage":false},{"functionName":"rangesToString","ranges":[{"startOffset":1236,"endOffset":1263,"count":0}],"isBlockCoverage":false},{"functionName":"parseClass","ranges":[{"startOffset":1621,"endOffset":5683,"count":0}],"isBlockCoverage":false}]},{"scriptId":"179","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/minimatch/dist/cjs/unescape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":973,"count":1}],"isBlockCoverage":true},{"functionName":"unescape","ranges":[{"startOffset":694,"endOffset":906,"count":6},{"startOffset":783,"endOffset":818,"count":0}],"isBlockCoverage":true}]},{"scriptId":"180","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/minimatch/dist/cjs/escape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":968,"count":1}],"isBlockCoverage":true},{"functionName":"escape","ranges":[{"startOffset":553,"endOffset":907,"count":0}],"isBlockCoverage":false}]},{"scriptId":"181","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/dist/cjs/src/glob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8058,"count":1},{"startOffset":540,"endOffset":549,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":614,"endOffset":8004,"count":1}],"isBlockCoverage":true},{"functionName":"Glob","ranges":[{"startOffset":1544,"endOffset":5669,"count":1},{"startOffset":1634,"endOffset":1679,"count":0},{"startOffset":2001,"endOffset":2039,"count":0},{"startOffset":2116,"endOffset":2186,"count":0},{"startOffset":2215,"endOffset":2220,"count":0},{"startOffset":2616,"endOffset":2631,"count":0},{"startOffset":2743,"endOffset":2773,"count":0},{"startOffset":2775,"endOffset":2861,"count":0},{"startOffset":2903,"endOffset":2947,"count":0},{"startOffset":3117,"endOffset":3191,"count":0},{"startOffset":3220,"endOffset":3429,"count":0},{"startOffset":3603,"endOffset":3851,"count":0},{"startOffset":3936,"endOffset":3967,"count":0},{"startOffset":4033,"endOffset":4065,"count":0},{"startOffset":4126,"endOffset":4157,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3153,"endOffset":3179,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3377,"endOffset":3417,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5293,"endOffset":5331,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5383,"endOffset":5506,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5556,"endOffset":5661,"count":1}],"isBlockCoverage":true},{"functionName":"walk","ranges":[{"startOffset":5674,"endOffset":6360,"count":0}],"isBlockCoverage":false},{"functionName":"walkSync","ranges":[{"startOffset":6365,"endOffset":6769,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":6774,"endOffset":7118,"count":1},{"startOffset":6952,"endOffset":6993,"count":0}],"isBlockCoverage":true},{"functionName":"streamSync","ranges":[{"startOffset":7123,"endOffset":7475,"count":0}],"isBlockCoverage":false},{"functionName":"iterateSync","ranges":[{"startOffset":7595,"endOffset":7669,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7674,"endOffset":7736,"count":0}],"isBlockCoverage":false},{"functionName":"iterate","ranges":[{"startOffset":7863,"endOffset":7934,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7939,"endOffset":8002,"count":0}],"isBlockCoverage":false}]},{"scriptId":"182","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/path-scurry/dist/cjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":65859,"count":1},{"startOffset":407,"endOffset":488,"count":0},{"startOffset":664,"endOffset":706,"count":0},{"startOffset":65412,"endOffset":65423,"count":0},{"startOffset":65718,"endOffset":65735,"count":0},{"startOffset":65780,"endOffset":65798,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88,"endOffset":405,"count":104},{"startOffset":232,"endOffset":247,"count":5},{"startOffset":248,"endOffset":284,"count":99},{"startOffset":264,"endOffset":284,"count":5},{"startOffset":287,"endOffset":363,"count":99}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":327,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":410,"endOffset":487,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":571,"endOffset":662,"count":1}],"isBlockCoverage":true},{"functionName":"__setModuleDefault","ranges":[{"startOffset":666,"endOffset":706,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":759,"endOffset":1039,"count":1},{"startOffset":807,"endOffset":818,"count":0},{"startOffset":880,"endOffset":981,"count":104}],"isBlockCoverage":true},{"functionName":"fsFromOption","ranges":[{"startOffset":2193,"endOffset":2448,"count":2},{"startOffset":2243,"endOffset":2267,"count":0},{"startOffset":2288,"endOffset":2448,"count":0}],"isBlockCoverage":true},{"functionName":"uncToDrive","ranges":[{"startOffset":2558,"endOffset":2633,"count":0}],"isBlockCoverage":false},{"functionName":"entToType","ranges":[{"startOffset":3666,"endOffset":4085,"count":18},{"startOffset":3688,"endOffset":3695,"count":9},{"startOffset":3700,"endOffset":4085,"count":9},{"startOffset":3742,"endOffset":4085,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":4171,"endOffset":4326,"count":28},{"startOffset":4236,"endOffset":4245,"count":13},{"startOffset":4245,"endOffset":4325,"count":15}],"isBlockCoverage":true},{"functionName":"normalizeNocase","ranges":[{"startOffset":4392,"endOffset":4566,"count":0}],"isBlockCoverage":false},{"functionName":"ResolveCache","ranges":[{"startOffset":4709,"endOffset":4759,"count":2}],"isBlockCoverage":true},{"functionName":"ChildrenCache","ranges":[{"startOffset":5687,"endOffset":5857,"count":1}],"isBlockCoverage":true},{"functionName":"sizeCalculation","ranges":[{"startOffset":5821,"endOffset":5838,"count":14}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6508,"endOffset":37890,"count":23}],"isBlockCoverage":true},{"functionName":"get dev","ranges":[{"startOffset":7486,"endOffset":7529,"count":0}],"isBlockCoverage":false},{"functionName":"get mode","ranges":[{"startOffset":7545,"endOffset":7590,"count":0}],"isBlockCoverage":false},{"functionName":"get nlink","ranges":[{"startOffset":7607,"endOffset":7654,"count":0}],"isBlockCoverage":false},{"functionName":"get uid","ranges":[{"startOffset":7669,"endOffset":7712,"count":0}],"isBlockCoverage":false},{"functionName":"get gid","ranges":[{"startOffset":7727,"endOffset":7770,"count":0}],"isBlockCoverage":false},{"functionName":"get rdev","ranges":[{"startOffset":7786,"endOffset":7831,"count":0}],"isBlockCoverage":false},{"functionName":"get blksize","ranges":[{"startOffset":7850,"endOffset":7901,"count":0}],"isBlockCoverage":false},{"functionName":"get ino","ranges":[{"startOffset":7916,"endOffset":7959,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":7975,"endOffset":8020,"count":0}],"isBlockCoverage":false},{"functionName":"get blocks","ranges":[{"startOffset":8038,"endOffset":8087,"count":0}],"isBlockCoverage":false},{"functionName":"get atimeMs","ranges":[{"startOffset":8106,"endOffset":8157,"count":0}],"isBlockCoverage":false},{"functionName":"get mtimeMs","ranges":[{"startOffset":8176,"endOffset":8227,"count":0}],"isBlockCoverage":false},{"functionName":"get ctimeMs","ranges":[{"startOffset":8246,"endOffset":8297,"count":0}],"isBlockCoverage":false},{"functionName":"get birthtimeMs","ranges":[{"startOffset":8320,"endOffset":8379,"count":0}],"isBlockCoverage":false},{"functionName":"get atime","ranges":[{"startOffset":8396,"endOffset":8443,"count":0}],"isBlockCoverage":false},{"functionName":"get mtime","ranges":[{"startOffset":8460,"endOffset":8507,"count":0}],"isBlockCoverage":false},{"functionName":"get ctime","ranges":[{"startOffset":8524,"endOffset":8571,"count":0}],"isBlockCoverage":false},{"functionName":"get birthtime","ranges":[{"startOffset":8592,"endOffset":8647,"count":0}],"isBlockCoverage":false},{"functionName":"get path","ranges":[{"startOffset":9175,"endOffset":9242,"count":0}],"isBlockCoverage":false},{"functionName":"PathBase","ranges":[{"startOffset":9435,"endOffset":10093,"count":23},{"startOffset":9567,"endOffset":9590,"count":0},{"startOffset":9731,"endOffset":9738,"count":1},{"startOffset":9965,"endOffset":10016,"count":22},{"startOffset":10016,"endOffset":10087,"count":1}],"isBlockCoverage":true},{"functionName":"depth","ranges":[{"startOffset":10246,"endOffset":10452,"count":0}],"isBlockCoverage":false},{"functionName":"childrenCache","ranges":[{"startOffset":10490,"endOffset":10544,"count":22}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":10647,"endOffset":11039,"count":2},{"startOffset":10682,"endOffset":10718,"count":0},{"startOffset":10918,"endOffset":10966,"count":0}],"isBlockCoverage":true},{"functionName":"#resolveParts","ranges":[{"startOffset":11044,"endOffset":11195,"count":2}],"isBlockCoverage":true},{"functionName":"children","ranges":[{"startOffset":11494,"endOffset":11792,"count":23},{"startOffset":11576,"endOffset":11614,"count":9},{"startOffset":11614,"endOffset":11791,"count":14}],"isBlockCoverage":true},{"functionName":"child","ranges":[{"startOffset":12197,"endOffset":13461,"count":6},{"startOffset":12270,"endOffset":12306,"count":1},{"startOffset":12306,"endOffset":12338,"count":5},{"startOffset":12338,"endOffset":12389,"count":0},{"startOffset":12389,"endOffset":12503,"count":5},{"startOffset":12503,"endOffset":12530,"count":0},{"startOffset":12543,"endOffset":12564,"count":5},{"startOffset":12600,"endOffset":12692,"count":0},{"startOffset":12692,"endOffset":12898,"count":5},{"startOffset":12898,"endOffset":12908,"count":4},{"startOffset":12909,"endOffset":12913,"count":1},{"startOffset":12967,"endOffset":12998,"count":1},{"startOffset":13011,"endOffset":13022,"count":4},{"startOffset":13195,"endOffset":13242,"count":0},{"startOffset":13242,"endOffset":13460,"count":5}],"isBlockCoverage":true},{"functionName":"relative","ranges":[{"startOffset":13628,"endOffset":13971,"count":5},{"startOffset":13683,"endOffset":13729,"count":1},{"startOffset":13729,"endOffset":13809,"count":4},{"startOffset":13809,"endOffset":13869,"count":0},{"startOffset":13869,"endOffset":13928,"count":4},{"startOffset":13928,"endOffset":13940,"count":3},{"startOffset":13941,"endOffset":13945,"count":1},{"startOffset":13946,"endOffset":13956,"count":3}],"isBlockCoverage":true},{"functionName":"relativePosix","ranges":[{"startOffset":14239,"endOffset":14667,"count":0}],"isBlockCoverage":false},{"functionName":"fullpath","ranges":[{"startOffset":14746,"endOffset":15124,"count":33},{"startOffset":14801,"endOffset":14847,"count":20},{"startOffset":14847,"endOffset":14927,"count":13},{"startOffset":14927,"endOffset":14987,"count":1},{"startOffset":14987,"endOffset":15056,"count":12},{"startOffset":15056,"endOffset":15060,"count":1},{"startOffset":15061,"endOffset":15071,"count":11}],"isBlockCoverage":true},{"functionName":"fullpathPosix","ranges":[{"startOffset":15323,"endOffset":16003,"count":0}],"isBlockCoverage":false},{"functionName":"isUnknown","ranges":[{"startOffset":16274,"endOffset":16341,"count":2}],"isBlockCoverage":true},{"functionName":"isType","ranges":[{"startOffset":16346,"endOffset":16402,"count":0}],"isBlockCoverage":false},{"functionName":"getType","ranges":[{"startOffset":16407,"endOffset":17189,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":17245,"endOffset":17307,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectory","ranges":[{"startOffset":17360,"endOffset":17427,"count":0}],"isBlockCoverage":false},{"functionName":"isCharacterDevice","ranges":[{"startOffset":17487,"endOffset":17560,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockDevice","ranges":[{"startOffset":17616,"endOffset":17685,"count":0}],"isBlockCoverage":false},{"functionName":"isFIFO","ranges":[{"startOffset":17738,"endOffset":17800,"count":0}],"isBlockCoverage":false},{"functionName":"isSocket","ranges":[{"startOffset":17850,"endOffset":17915,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbolicLink","ranges":[{"startOffset":17972,"endOffset":18043,"count":17}],"isBlockCoverage":true},{"functionName":"lstatCached","ranges":[{"startOffset":18295,"endOffset":18377,"count":0}],"isBlockCoverage":false},{"functionName":"readlinkCached","ranges":[{"startOffset":18738,"endOffset":18795,"count":0}],"isBlockCoverage":false},{"functionName":"realpathCached","ranges":[{"startOffset":19161,"endOffset":19216,"count":0}],"isBlockCoverage":false},{"functionName":"readdirCached","ranges":[{"startOffset":19599,"endOffset":19720,"count":9}],"isBlockCoverage":true},{"functionName":"canReadlink","ranges":[{"startOffset":20017,"endOffset":20366,"count":0}],"isBlockCoverage":false},{"functionName":"calledReaddir","ranges":[{"startOffset":20527,"endOffset":20598,"count":18}],"isBlockCoverage":true},{"functionName":"isENOENT","ranges":[{"startOffset":20847,"endOffset":20905,"count":9}],"isBlockCoverage":true},{"functionName":"isNamed","ranges":[{"startOffset":21374,"endOffset":21521,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":21835,"endOffset":22594,"count":0}],"isBlockCoverage":false},{"functionName":"readlinkSync","ranges":[{"startOffset":22660,"endOffset":23406,"count":0}],"isBlockCoverage":false},{"functionName":"#readdirSuccess","ranges":[{"startOffset":23411,"endOffset":23709,"count":9},{"startOffset":23653,"endOffset":23703,"count":0}],"isBlockCoverage":true},{"functionName":"#markENOENT","ranges":[{"startOffset":23714,"endOffset":23921,"count":0}],"isBlockCoverage":false},{"functionName":"#markChildrenENOENT","ranges":[{"startOffset":23926,"endOffset":24163,"count":0}],"isBlockCoverage":false},{"functionName":"#markENOREALPATH","ranges":[{"startOffset":24168,"endOffset":24258,"count":0}],"isBlockCoverage":false},{"functionName":"#markENOTDIR","ranges":[{"startOffset":24327,"endOffset":24990,"count":0}],"isBlockCoverage":false},{"functionName":"#readdirFail","ranges":[{"startOffset":24995,"endOffset":25334,"count":0}],"isBlockCoverage":false},{"functionName":"#lstatFail","ranges":[{"startOffset":25339,"endOffset":25749,"count":0}],"isBlockCoverage":false},{"functionName":"#readlinkFail","ranges":[{"startOffset":25754,"endOffset":26498,"count":0}],"isBlockCoverage":false},{"functionName":"#readdirAddChild","ranges":[{"startOffset":26503,"endOffset":26634,"count":17}],"isBlockCoverage":true},{"functionName":"#readdirAddNewChild","ranges":[{"startOffset":26639,"endOffset":27066,"count":17},{"startOffset":26901,"endOffset":26918,"count":9},{"startOffset":26919,"endOffset":26938,"count":9},{"startOffset":26940,"endOffset":26987,"count":9}],"isBlockCoverage":true},{"functionName":"#readdirMaybePromoteChild","ranges":[{"startOffset":27071,"endOffset":27475,"count":17},{"startOffset":27160,"endOffset":27469,"count":0}],"isBlockCoverage":true},{"functionName":"#readdirPromoteChild","ranges":[{"startOffset":27480,"endOffset":28166,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":28803,"endOffset":29100,"count":1},{"startOffset":29016,"endOffset":29084,"count":0}],"isBlockCoverage":true},{"functionName":"lstatSync","ranges":[{"startOffset":29163,"endOffset":29447,"count":0}],"isBlockCoverage":false},{"functionName":"#applyStat","ranges":[{"startOffset":29452,"endOffset":30443,"count":1},{"startOffset":30372,"endOffset":30389,"count":0},{"startOffset":30391,"endOffset":30437,"count":0}],"isBlockCoverage":true},{"functionName":"#callOnReaddirCB","ranges":[{"startOffset":30503,"endOffset":30710,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30678,"endOffset":30702,"count":9}],"isBlockCoverage":true},{"functionName":"readdirCB","ranges":[{"startOffset":31476,"endOffset":32962,"count":9},{"startOffset":31544,"endOffset":31702,"count":0},{"startOffset":31779,"endOffset":31998,"count":0},{"startOffset":32130,"endOffset":32161,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31652,"endOffset":31670,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31949,"endOffset":31966,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":32412,"endOffset":32954,"count":9},{"startOffset":32451,"endOffset":32552,"count":0},{"startOffset":32711,"endOffset":32786,"count":17}],"isBlockCoverage":true},{"functionName":"readdir","ranges":[{"startOffset":33263,"endOffset":34505,"count":0}],"isBlockCoverage":false},{"functionName":"readdirSync","ranges":[{"startOffset":34570,"endOffset":35371,"count":0}],"isBlockCoverage":false},{"functionName":"canReaddir","ranges":[{"startOffset":35376,"endOffset":35760,"count":65},{"startOffset":35438,"endOffset":35451,"count":9},{"startOffset":35451,"endOffset":35629,"count":56},{"startOffset":35629,"endOffset":35646,"count":50},{"startOffset":35647,"endOffset":35664,"count":0},{"startOffset":35667,"endOffset":35704,"count":0},{"startOffset":35704,"endOffset":35759,"count":56}],"isBlockCoverage":true},{"functionName":"shouldWalk","ranges":[{"startOffset":35765,"endOffset":35970,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":36289,"endOffset":36690,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":36747,"endOffset":37135,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37289,"endOffset":37888,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":38091,"endOffset":39971,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":40092,"endOffset":41013,"count":23}],"isBlockCoverage":true},{"functionName":"PathPosix","ranges":[{"startOffset":40473,"endOffset":40615,"count":23}],"isBlockCoverage":true},{"functionName":"getRootString","ranges":[{"startOffset":40653,"endOffset":40728,"count":2},{"startOffset":40711,"endOffset":40716,"count":0}],"isBlockCoverage":true},{"functionName":"getRoot","ranges":[{"startOffset":40766,"endOffset":40818,"count":0}],"isBlockCoverage":false},{"functionName":"newChild","ranges":[{"startOffset":40856,"endOffset":41011,"count":22}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":41370,"endOffset":62414,"count":1}],"isBlockCoverage":true},{"functionName":"PathScurryBase","ranges":[{"startOffset":42215,"endOffset":44010,"count":1},{"startOffset":42428,"endOffset":42488,"count":0},{"startOffset":43091,"endOffset":43103,"count":0},{"startOffset":43105,"endOffset":43141,"count":0},{"startOffset":43206,"endOffset":43304,"count":0},{"startOffset":43656,"endOffset":43979,"count":4},{"startOffset":43900,"endOffset":43904,"count":3},{"startOffset":43905,"endOffset":43914,"count":1}],"isBlockCoverage":true},{"functionName":"depth","ranges":[{"startOffset":44091,"endOffset":44243,"count":0}],"isBlockCoverage":false},{"functionName":"childrenCache","ranges":[{"startOffset":44418,"endOffset":44472,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":44787,"endOffset":45488,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePosix","ranges":[{"startOffset":45950,"endOffset":46671,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":46772,"endOffset":46935,"count":0}],"isBlockCoverage":false},{"functionName":"relativePosix","ranges":[{"startOffset":47092,"endOffset":47265,"count":0}],"isBlockCoverage":false},{"functionName":"basename","ranges":[{"startOffset":47352,"endOffset":47509,"count":0}],"isBlockCoverage":false},{"functionName":"dirname","ranges":[{"startOffset":47595,"endOffset":47775,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":47780,"endOffset":48312,"count":0}],"isBlockCoverage":false},{"functionName":"readdirSync","ranges":[{"startOffset":48317,"endOffset":48891,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":49544,"endOffset":49707,"count":0}],"isBlockCoverage":false},{"functionName":"lstatSync","ranges":[{"startOffset":49776,"endOffset":49941,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":49946,"endOffset":50371,"count":0}],"isBlockCoverage":false},{"functionName":"readlinkSync","ranges":[{"startOffset":50376,"endOffset":50797,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":50802,"endOffset":51227,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":51232,"endOffset":51653,"count":0}],"isBlockCoverage":false},{"functionName":"walk","ranges":[{"startOffset":51658,"endOffset":53795,"count":0}],"isBlockCoverage":false},{"functionName":"walkSync","ranges":[{"startOffset":53800,"endOffset":54988,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":55336,"endOffset":55399,"count":0}],"isBlockCoverage":false},{"functionName":"iterate","ranges":[{"startOffset":55404,"endOffset":55974,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56118,"endOffset":56180,"count":0}],"isBlockCoverage":false},{"functionName":"iterateSync","ranges":[{"startOffset":56185,"endOffset":57309,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":57314,"endOffset":60261,"count":0}],"isBlockCoverage":false},{"functionName":"streamSync","ranges":[{"startOffset":60266,"endOffset":62231,"count":0}],"isBlockCoverage":false},{"functionName":"chdir","ranges":[{"startOffset":62236,"endOffset":62412,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":62634,"endOffset":63750,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":64011,"endOffset":64725,"count":1}],"isBlockCoverage":true},{"functionName":"PathScurryPosix","ranges":[{"startOffset":64138,"endOffset":64320,"count":1}],"isBlockCoverage":true},{"functionName":"parseRootPath","ranges":[{"startOffset":64358,"endOffset":64405,"count":1}],"isBlockCoverage":true},{"functionName":"newRoot","ranges":[{"startOffset":64443,"endOffset":64580,"count":1}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":64668,"endOffset":64723,"count":0}],"isBlockCoverage":false},{"functionName":"PathScurryDarwin","ranges":[{"startOffset":65034,"endOffset":65166,"count":0}],"isBlockCoverage":false}]},{"scriptId":"183","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/path-scurry/node_modules/lru-cache/dist/cjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":49524,"count":1},{"startOffset":263,"endOffset":269,"count":0},{"startOffset":387,"endOffset":391,"count":0},{"startOffset":740,"endOffset":2309,"count":0}],"isBlockCoverage":true},{"functionName":"emitWarning","ranges":[{"startOffset":436,"endOffset":615,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":768,"endOffset":954,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":982,"endOffset":1491,"count":0}],"isBlockCoverage":true},{"functionName":"warnACPolyfill","ranges":[{"startOffset":1603,"endOffset":2306,"count":0}],"isBlockCoverage":false},{"functionName":"shouldWarn","ranges":[{"startOffset":2350,"endOffset":2377,"count":0}],"isBlockCoverage":false},{"functionName":"isPosInt","ranges":[{"startOffset":2425,"endOffset":2480,"count":40},{"startOffset":2434,"endOffset":2456,"count":25},{"startOffset":2457,"endOffset":2465,"count":25},{"startOffset":2466,"endOffset":2480,"count":25}],"isBlockCoverage":true},{"functionName":"getUintArray","ranges":[{"startOffset":2995,"endOffset":3312,"count":5},{"startOffset":3023,"endOffset":3029,"count":1},{"startOffset":3034,"endOffset":3312,"count":4},{"startOffset":3087,"endOffset":3312,"count":0}],"isBlockCoverage":true},{"functionName":"ZeroArray","ranges":[{"startOffset":3371,"endOffset":3439,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3442,"endOffset":4192,"count":2}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":3509,"endOffset":3537,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":3550,"endOffset":3791,"count":3},{"startOffset":3641,"endOffset":3651,"count":1},{"startOffset":3651,"endOffset":3790,"count":2}],"isBlockCoverage":true},{"functionName":"Stack","ranges":[{"startOffset":3796,"endOffset":4073,"count":2},{"startOffset":3888,"endOffset":3975,"count":0}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":4078,"endOffset":4131,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":4136,"endOffset":4190,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4579,"endOffset":49461,"count":3}],"isBlockCoverage":true},{"functionName":"unsafeExposeInternals","ranges":[{"startOffset":6762,"endOffset":7672,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":7780,"endOffset":7823,"count":0}],"isBlockCoverage":false},{"functionName":"get maxSize","ranges":[{"startOffset":7900,"endOffset":7951,"count":0}],"isBlockCoverage":false},{"functionName":"get calculatedSize","ranges":[{"startOffset":8037,"endOffset":8102,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":8182,"endOffset":8227,"count":0}],"isBlockCoverage":false},{"functionName":"get fetchMethod","ranges":[{"startOffset":8308,"endOffset":8367,"count":0}],"isBlockCoverage":false},{"functionName":"get dispose","ranges":[{"startOffset":8444,"endOffset":8495,"count":0}],"isBlockCoverage":false},{"functionName":"get disposeAfter","ranges":[{"startOffset":8577,"endOffset":8638,"count":0}],"isBlockCoverage":false},{"functionName":"LRUCache","ranges":[{"startOffset":8643,"endOffset":13058,"count":3},{"startOffset":9037,"endOffset":9054,"count":2},{"startOffset":9056,"endOffset":9144,"count":0},{"startOffset":9175,"endOffset":9194,"count":2},{"startOffset":9195,"endOffset":9202,"count":1},{"startOffset":9228,"endOffset":9297,"count":0},{"startOffset":9497,"endOffset":9837,"count":1},{"startOffset":9530,"endOffset":9551,"count":0},{"startOffset":9553,"endOffset":9675,"count":0},{"startOffset":9736,"endOffset":9827,"count":0},{"startOffset":9876,"endOffset":9924,"count":0},{"startOffset":9926,"endOffset":10017,"count":0},{"startOffset":10522,"endOffset":10570,"count":0},{"startOffset":10619,"endOffset":10710,"count":0},{"startOffset":11359,"endOffset":11780,"count":1},{"startOffset":11446,"endOffset":11557,"count":0},{"startOffset":11618,"endOffset":11726,"count":0},{"startOffset":12038,"endOffset":12060,"count":0},{"startOffset":12109,"endOffset":12112,"count":0},{"startOffset":12209,"endOffset":12400,"count":0},{"startOffset":12481,"endOffset":12498,"count":1},{"startOffset":12499,"endOffset":12521,"count":1},{"startOffset":12523,"endOffset":12619,"count":0},{"startOffset":12665,"endOffset":12682,"count":1},{"startOffset":12684,"endOffset":13052,"count":0}],"isBlockCoverage":true},{"functionName":"getRemainingTTL","ranges":[{"startOffset":13138,"endOffset":13219,"count":0}],"isBlockCoverage":false},{"functionName":"#initializeTTLTracking","ranges":[{"startOffset":13224,"endOffset":15812,"count":0}],"isBlockCoverage":false},{"functionName":"#updateItemAge","ranges":[{"startOffset":15890,"endOffset":15899,"count":0}],"isBlockCoverage":false},{"functionName":"#statusTTL","ranges":[{"startOffset":15918,"endOffset":15927,"count":0}],"isBlockCoverage":false},{"functionName":"#setItemTTL","ranges":[{"startOffset":15947,"endOffset":15956,"count":0}],"isBlockCoverage":false},{"functionName":"#isStale","ranges":[{"startOffset":15998,"endOffset":16009,"count":9}],"isBlockCoverage":true},{"functionName":"#initializeSizeTracking","ranges":[{"startOffset":16015,"endOffset":17881,"count":1}],"isBlockCoverage":true},{"functionName":"#removeItemSize","ranges":[{"startOffset":16185,"endOffset":16285,"count":0}],"isBlockCoverage":false},{"functionName":"#requireSize","ranges":[{"startOffset":16315,"endOffset":17354,"count":14},{"startOffset":16517,"endOffset":16558,"count":0},{"startOffset":16696,"endOffset":16802,"count":0},{"startOffset":16894,"endOffset":17022,"count":0},{"startOffset":17040,"endOffset":17305,"count":0}],"isBlockCoverage":true},{"functionName":"#addItemSize","ranges":[{"startOffset":17384,"endOffset":17874,"count":14},{"startOffset":17594,"endOffset":17652,"count":0},{"startOffset":17741,"endOffset":17864,"count":0}],"isBlockCoverage":true},{"functionName":"#removeItemSize","ranges":[{"startOffset":17904,"endOffset":17913,"count":0}],"isBlockCoverage":false},{"functionName":"#addItemSize","ranges":[{"startOffset":17934,"endOffset":17954,"count":0}],"isBlockCoverage":false},{"functionName":"#requireSize","ranges":[{"startOffset":17975,"endOffset":18185,"count":0}],"isBlockCoverage":false},{"functionName":"#indexes","ranges":[{"startOffset":18191,"endOffset":18701,"count":0}],"isBlockCoverage":false},{"functionName":"#rindexes","ranges":[{"startOffset":18706,"endOffset":19217,"count":0}],"isBlockCoverage":false},{"functionName":"#isValidIndex","ranges":[{"startOffset":19222,"endOffset":19352,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":19494,"endOffset":19801,"count":0}],"isBlockCoverage":false},{"functionName":"rentries","ranges":[{"startOffset":20007,"endOffset":20316,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":20459,"endOffset":20703,"count":0}],"isBlockCoverage":false},{"functionName":"rkeys","ranges":[{"startOffset":20907,"endOffset":21153,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":21298,"endOffset":21559,"count":0}],"isBlockCoverage":false},{"functionName":"rvalues","ranges":[{"startOffset":21767,"endOffset":22030,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22149,"endOffset":22207,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":22377,"endOffset":22811,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":23087,"endOffset":23450,"count":0}],"isBlockCoverage":false},{"functionName":"rforEach","ranges":[{"startOffset":23625,"endOffset":23990,"count":0}],"isBlockCoverage":false},{"functionName":"purgeStale","ranges":[{"startOffset":24106,"endOffset":24382,"count":0}],"isBlockCoverage":false},{"functionName":"dump","ranges":[{"startOffset":24509,"endOffset":25459,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":25680,"endOffset":26325,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":26491,"endOffset":30416,"count":14},{"startOffset":26549,"endOffset":26613,"count":0},{"startOffset":27068,"endOffset":27328,"count":0},{"startOffset":27366,"endOffset":27377,"count":1},{"startOffset":27378,"endOffset":27399,"count":13},{"startOffset":27514,"endOffset":27526,"count":1},{"startOffset":27543,"endOffset":27736,"count":13},{"startOffset":27589,"endOffset":27607,"count":0},{"startOffset":27679,"endOffset":27699,"count":0},{"startOffset":28093,"endOffset":28112,"count":0},{"startOffset":28155,"endOffset":29840,"count":0},{"startOffset":29863,"endOffset":29877,"count":0},{"startOffset":29879,"endOffset":29933,"count":0},{"startOffset":29958,"endOffset":30140,"count":0},{"startOffset":30194,"endOffset":30211,"count":0},{"startOffset":30213,"endOffset":30389,"count":0}],"isBlockCoverage":true},{"functionName":"pop","ranges":[{"startOffset":30541,"endOffset":31298,"count":0}],"isBlockCoverage":false},{"functionName":"#evict","ranges":[{"startOffset":31303,"endOffset":32371,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":32671,"endOffset":33608,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":33837,"endOffset":34274,"count":0}],"isBlockCoverage":false},{"functionName":"#backgroundFetch","ranges":[{"startOffset":34279,"endOffset":39405,"count":0}],"isBlockCoverage":false},{"functionName":"#isBackgroundFetch","ranges":[{"startOffset":39410,"endOffset":39684,"count":23},{"startOffset":39494,"endOffset":39571,"count":0},{"startOffset":39572,"endOffset":39627,"count":0},{"startOffset":39628,"endOffset":39676,"count":0}],"isBlockCoverage":true},{"functionName":"fetch","ranges":[{"startOffset":39689,"endOffset":43019,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":43205,"endOffset":45341,"count":23},{"startOffset":43461,"endOffset":45265,"count":9},{"startOffset":43612,"endOffset":43643,"count":0},{"startOffset":43682,"endOffset":44489,"count":0},{"startOffset":44557,"endOffset":44576,"count":0},{"startOffset":44992,"endOffset":45066,"count":0},{"startOffset":45144,"endOffset":45211,"count":0},{"startOffset":45265,"endOffset":45335,"count":14},{"startOffset":45291,"endOffset":45335,"count":0}],"isBlockCoverage":true},{"functionName":"#connect","ranges":[{"startOffset":45346,"endOffset":45422,"count":0}],"isBlockCoverage":false},{"functionName":"#moveToTail","ranges":[{"startOffset":45427,"endOffset":46089,"count":9},{"startOffset":45790,"endOffset":46083,"count":0}],"isBlockCoverage":true},{"functionName":"delete","ranges":[{"startOffset":46210,"endOffset":48139,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":48219,"endOffset":49459,"count":0}],"isBlockCoverage":false}]},{"scriptId":"184","url":"node:perf_hooks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1065,"count":1}],"isBlockCoverage":false}]},{"scriptId":"185","url":"node:internal/perf/resource_timing","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7417,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceResourceTiming","ranges":[{"startOffset":885,"endOffset":945,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":949,"endOffset":1074,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1078,"endOffset":1214,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1218,"endOffset":1381,"count":0}],"isBlockCoverage":false},{"functionName":"get initiatorType","ranges":[{"startOffset":1385,"endOffset":1521,"count":0}],"isBlockCoverage":false},{"functionName":"get workerStart","ranges":[{"startOffset":1525,"endOffset":1681,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectStart","ranges":[{"startOffset":1685,"endOffset":1833,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectEnd","ranges":[{"startOffset":1837,"endOffset":1981,"count":0}],"isBlockCoverage":false},{"functionName":"get fetchStart","ranges":[{"startOffset":1985,"endOffset":2134,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupStart","ranges":[{"startOffset":2138,"endOffset":2321,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupEnd","ranges":[{"startOffset":2325,"endOffset":2504,"count":0}],"isBlockCoverage":false},{"functionName":"get connectStart","ranges":[{"startOffset":2508,"endOffset":2684,"count":0}],"isBlockCoverage":false},{"functionName":"get connectEnd","ranges":[{"startOffset":2688,"endOffset":2860,"count":0}],"isBlockCoverage":false},{"functionName":"get secureConnectionStart","ranges":[{"startOffset":2864,"endOffset":3062,"count":0}],"isBlockCoverage":false},{"functionName":"get nextHopProtocol","ranges":[{"startOffset":3066,"endOffset":3255,"count":0}],"isBlockCoverage":false},{"functionName":"get requestStart","ranges":[{"startOffset":3259,"endOffset":3417,"count":0}],"isBlockCoverage":false},{"functionName":"get responseStart","ranges":[{"startOffset":3421,"endOffset":3581,"count":0}],"isBlockCoverage":false},{"functionName":"get responseEnd","ranges":[{"startOffset":3585,"endOffset":3721,"count":0}],"isBlockCoverage":false},{"functionName":"get encodedBodySize","ranges":[{"startOffset":3725,"endOffset":3873,"count":0}],"isBlockCoverage":false},{"functionName":"get decodedBodySize","ranges":[{"startOffset":3877,"endOffset":4025,"count":0}],"isBlockCoverage":false},{"functionName":"get transferSize","ranges":[{"startOffset":4029,"endOffset":4283,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":4287,"endOffset":5228,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceResourceTiming","ranges":[{"startOffset":6096,"endOffset":6706,"count":0}],"isBlockCoverage":false},{"functionName":"markResourceTiming","ranges":[{"startOffset":6775,"endOffset":7342,"count":0}],"isBlockCoverage":false}]},{"scriptId":"186","url":"node:internal/perf/usertiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6257,"count":1}],"isBlockCoverage":false},{"functionName":"getMark","ranges":[{"startOffset":1212,"endOffset":1664,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMark","ranges":[{"startOffset":1692,"endOffset":2427,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":2431,"endOffset":2536,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2540,"endOffset":2723,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMeasure","ranges":[{"startOffset":3107,"endOffset":3167,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":3171,"endOffset":3279,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceMeasure","ranges":[{"startOffset":3481,"endOffset":3731,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":3733,"endOffset":3874,"count":0}],"isBlockCoverage":false},{"functionName":"calculateStartDuration","ranges":[{"startOffset":3876,"endOffset":5459,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":5461,"endOffset":5896,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarkTimings","ranges":[{"startOffset":5898,"endOffset":6153,"count":0}],"isBlockCoverage":false}]},{"scriptId":"187","url":"node:internal/perf/nodetiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3516,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceNodeTiming","ranges":[{"startOffset":729,"endOffset":2742,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1394,"endOffset":1490,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1606,"endOffset":1700,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1820,"endOffset":1917,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2035,"endOffset":2131,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2248,"endOffset":2343,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2469,"endOffset":2586,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2746,"endOffset":2987,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2991,"endOffset":3377,"count":0}],"isBlockCoverage":false}]},{"scriptId":"188","url":"node:internal/structured_clone","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":661,"count":1}],"isBlockCoverage":false},{"functionName":"structuredClone","ranges":[{"startOffset":186,"endOffset":618,"count":0}],"isBlockCoverage":false}]},{"scriptId":"189","url":"node:internal/worker/io","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15479,"count":1}],"isBlockCoverage":false},{"functionName":"MessagePort.hasRef","ranges":[{"startOffset":3683,"endOffset":3766,"count":0}],"isBlockCoverage":false},{"functionName":"validateMessagePort","ranges":[{"startOffset":3769,"endOffset":3907,"count":0}],"isBlockCoverage":false},{"functionName":"isMessageEvent","ranges":[{"startOffset":3909,"endOffset":3985,"count":0}],"isBlockCoverage":false},{"functionName":"MessageEvent","ranges":[{"startOffset":4024,"endOffset":4540,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4628,"endOffset":4752,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4862,"endOffset":4988,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5103,"endOffset":5234,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5344,"endOffset":5470,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5579,"endOffset":5704,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5946,"endOffset":6264,"count":0}],"isBlockCoverage":false},{"functionName":"oninit","ranges":[{"startOffset":6403,"endOffset":6546,"count":0}],"isBlockCoverage":false},{"functionName":"MessagePortCloseEvent","ranges":[{"startOffset":6848,"endOffset":6887,"count":0}],"isBlockCoverage":false},{"functionName":"onclose","ranges":[{"startOffset":6960,"endOffset":7033,"count":0}],"isBlockCoverage":false},{"functionName":"MessagePort.close","ranges":[{"startOffset":7214,"endOffset":7349,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":7482,"endOffset":8110,"count":0}],"isBlockCoverage":false},{"functionName":"setupPortReferencing","ranges":[{"startOffset":8117,"endOffset":9480,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableWorkerStdio","ranges":[{"startOffset":9530,"endOffset":9879,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":9883,"endOffset":10189,"count":0}],"isBlockCoverage":false},{"functionName":"WritableWorkerStdio","ranges":[{"startOffset":10240,"endOffset":10389,"count":0}],"isBlockCoverage":false},{"functionName":"_writev","ranges":[{"startOffset":10393,"endOffset":10769,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":10773,"endOffset":10953,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10957,"endOffset":11204,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerStdio","ranges":[{"startOffset":11208,"endOffset":11478,"count":0}],"isBlockCoverage":false},{"functionName":"receiveMessageOnPort","ranges":[{"startOffset":11480,"endOffset":11660,"count":0}],"isBlockCoverage":false},{"functionName":"onMessageEvent","ranges":[{"startOffset":11662,"endOffset":11757,"count":0}],"isBlockCoverage":false},{"functionName":"isBroadcastChannel","ranges":[{"startOffset":11759,"endOffset":11845,"count":0}],"isBlockCoverage":false},{"functionName":"BroadcastChannel","ranges":[{"startOffset":11932,"endOffset":12446,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12450,"endOffset":12863,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":12899,"endOffset":13028,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":13065,"endOffset":13463,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":13531,"endOffset":13941,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":14224,"endOffset":14391,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":14676,"endOffset":14847,"count":0}],"isBlockCoverage":false}]},{"scriptId":"190","url":"node:internal/perf/performance","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6365,"count":1}],"isBlockCoverage":false},{"functionName":"Performance","ranges":[{"startOffset":1338,"endOffset":1398,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1402,"endOffset":1697,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarks","ranges":[{"startOffset":1701,"endOffset":1932,"count":0}],"isBlockCoverage":false},{"functionName":"clearMeasures","ranges":[{"startOffset":1936,"endOffset":2145,"count":0}],"isBlockCoverage":false},{"functionName":"clearResourceTimings","ranges":[{"startOffset":2149,"endOffset":2366,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":2370,"endOffset":2498,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":2502,"endOffset":2759,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":2763,"endOffset":3020,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":3024,"endOffset":3245,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":3249,"endOffset":3534,"count":0}],"isBlockCoverage":false},{"functionName":"now","ranges":[{"startOffset":3538,"endOffset":3634,"count":0}],"isBlockCoverage":false},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":3638,"endOffset":3954,"count":0}],"isBlockCoverage":false},{"functionName":"get timeOrigin","ranges":[{"startOffset":3958,"endOffset":4084,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":4088,"endOffset":4316,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformance","ranges":[{"startOffset":5917,"endOffset":6086,"count":1}],"isBlockCoverage":true},{"functionName":"Performance","ranges":[{"startOffset":5974,"endOffset":6065,"count":1}],"isBlockCoverage":true},{"functionName":"dispatchBufferFull","ranges":[{"startOffset":6130,"endOffset":6268,"count":0}],"isBlockCoverage":false}]},{"scriptId":"191","url":"node:internal/perf/event_loop_utilization","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1527,"count":1}],"isBlockCoverage":false},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":153,"endOffset":446,"count":0}],"isBlockCoverage":false},{"functionName":"internalEventLoopUtilization","ranges":[{"startOffset":448,"endOffset":1447,"count":0}],"isBlockCoverage":false}]},{"scriptId":"192","url":"node:internal/perf/timerify","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2280,"count":1}],"isBlockCoverage":false},{"functionName":"processComplete","ranges":[{"startOffset":610,"endOffset":985,"count":0}],"isBlockCoverage":false},{"functionName":"timerify","ranges":[{"startOffset":987,"endOffset":2251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"193","url":"node:internal/histogram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8057,"count":1}],"isBlockCoverage":false},{"functionName":"isHistogram","ranges":[{"startOffset":894,"endOffset":968,"count":0}],"isBlockCoverage":false},{"functionName":"Histogram","ranges":[{"startOffset":990,"endOffset":1050,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1054,"endOffset":1466,"count":0}],"isBlockCoverage":false},{"functionName":"get count","ranges":[{"startOffset":1517,"endOffset":1644,"count":0}],"isBlockCoverage":false},{"functionName":"get countBigInt","ranges":[{"startOffset":1695,"endOffset":1834,"count":0}],"isBlockCoverage":false},{"functionName":"get min","ranges":[{"startOffset":1885,"endOffset":2008,"count":0}],"isBlockCoverage":false},{"functionName":"get minBigInt","ranges":[{"startOffset":2059,"endOffset":2194,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":2245,"endOffset":2368,"count":0}],"isBlockCoverage":false},{"functionName":"get maxBigInt","ranges":[{"startOffset":2419,"endOffset":2554,"count":0}],"isBlockCoverage":false},{"functionName":"get mean","ranges":[{"startOffset":2605,"endOffset":2730,"count":0}],"isBlockCoverage":false},{"functionName":"get exceeds","ranges":[{"startOffset":2781,"endOffset":2912,"count":0}],"isBlockCoverage":false},{"functionName":"get exceedsBigInt","ranges":[{"startOffset":2963,"endOffset":3106,"count":0}],"isBlockCoverage":false},{"functionName":"get stddev","ranges":[{"startOffset":3157,"endOffset":3286,"count":0}],"isBlockCoverage":false},{"functionName":"percentile","ranges":[{"startOffset":3357,"endOffset":3706,"count":0}],"isBlockCoverage":false},{"functionName":"percentileBigInt","ranges":[{"startOffset":3777,"endOffset":4138,"count":0}],"isBlockCoverage":false},{"functionName":"get percentiles","ranges":[{"startOffset":4201,"endOffset":4390,"count":0}],"isBlockCoverage":false},{"functionName":"get percentilesBigInt","ranges":[{"startOffset":4453,"endOffset":4654,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":4691,"endOffset":4807,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4811,"endOffset":4968,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4972,"endOffset":5032,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":5036,"endOffset":5293,"count":0}],"isBlockCoverage":false},{"functionName":"RecordableHistogram","ranges":[{"startOffset":5345,"endOffset":5405,"count":0}],"isBlockCoverage":false},{"functionName":"record","ranges":[{"startOffset":5474,"endOffset":5748,"count":0}],"isBlockCoverage":false},{"functionName":"recordDelta","ranges":[{"startOffset":5785,"endOffset":5936,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":5992,"endOffset":6265,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6269,"endOffset":6436,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6440,"endOffset":6500,"count":0}],"isBlockCoverage":false},{"functionName":"internalHistogram","ranges":[{"startOffset":6504,"endOffset":6691,"count":0}],"isBlockCoverage":false},{"functionName":"internalHistogram.<computed>","ranges":[{"startOffset":6736,"endOffset":6744,"count":0}],"isBlockCoverage":false},{"functionName":"internalRecordableHistogram","ranges":[{"startOffset":6747,"endOffset":6986,"count":0}],"isBlockCoverage":false},{"functionName":"internalRecordableHistogram.<computed>","ranges":[{"startOffset":7041,"endOffset":7049,"count":0}],"isBlockCoverage":false},{"functionName":"createHistogram","ranges":[{"startOffset":7193,"endOffset":7880,"count":0}],"isBlockCoverage":false}]},{"scriptId":"194","url":"node:internal/perf/event_loop_delay","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1724,"count":1}],"isBlockCoverage":false},{"functionName":"ELDHistogram","ranges":[{"startOffset":625,"endOffset":686,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":726,"endOffset":937,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":977,"endOffset":1190,"count":0}],"isBlockCoverage":false},{"functionName":"monitorEventLoopDelay","ranges":[{"startOffset":1283,"endOffset":1682,"count":0}],"isBlockCoverage":false}]},{"scriptId":"195","url":"node:fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":73,"count":1}],"isBlockCoverage":false}]},{"scriptId":"196","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/minipass/dist/cjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33736,"count":1},{"startOffset":374,"endOffset":427,"count":0}],"isBlockCoverage":true},{"functionName":"__importDefault","ranges":[{"startOffset":70,"endOffset":151,"count":1},{"startOffset":122,"endOffset":127,"count":0}],"isBlockCoverage":true},{"functionName":"isStream","ranges":[{"startOffset":715,"endOffset":902,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":1028,"endOffset":1274,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":1404,"endOffset":1557,"count":0}],"isBlockCoverage":false},{"functionName":"defer","ranges":[{"startOffset":2834,"endOffset":2868,"count":0}],"isBlockCoverage":false},{"functionName":"nodefer","ranges":[{"startOffset":2886,"endOffset":2898,"count":0}],"isBlockCoverage":false},{"functionName":"isEndish","ranges":[{"startOffset":2917,"endOffset":2978,"count":3},{"startOffset":2938,"endOffset":2956,"count":2},{"startOffset":2957,"endOffset":2978,"count":2}],"isBlockCoverage":true},{"functionName":"isArrayBufferLike","ranges":[{"startOffset":3006,"endOffset":3185,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBufferView","ranges":[{"startOffset":3213,"endOffset":3264,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3353,"endOffset":3901,"count":0}],"isBlockCoverage":true},{"functionName":"unpipe","ranges":[{"startOffset":4058,"endOffset":4158,"count":0}],"isBlockCoverage":false},{"functionName":"PipeProxyErrors","ranges":[{"startOffset":4163,"endOffset":4331,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectModeOptions","ranges":[{"startOffset":4362,"endOffset":4383,"count":1}],"isBlockCoverage":true},{"functionName":"isEncodingOptions","ranges":[{"startOffset":4411,"endOffset":4474,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4829,"endOffset":33673,"count":1}],"isBlockCoverage":true},{"functionName":"Minipass","ranges":[{"startOffset":5710,"endOffset":7219,"count":1},{"startOffset":5766,"endOffset":5783,"count":0},{"startOffset":5875,"endOffset":5971,"count":0},{"startOffset":6097,"endOffset":6337,"count":0},{"startOffset":6428,"endOffset":6480,"count":0},{"startOffset":6624,"endOffset":6715,"count":0},{"startOffset":6838,"endOffset":6927,"count":0},{"startOffset":6984,"endOffset":7213,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6683,"endOffset":6701,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6896,"endOffset":6913,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7168,"endOffset":7187,"count":0}],"isBlockCoverage":false},{"functionName":"get bufferLength","ranges":[{"startOffset":7601,"endOffset":7662,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":7739,"endOffset":7792,"count":0}],"isBlockCoverage":false},{"functionName":"set encoding","ranges":[{"startOffset":7863,"endOffset":7960,"count":0}],"isBlockCoverage":false},{"functionName":"setEncoding","ranges":[{"startOffset":8049,"endOffset":8145,"count":0}],"isBlockCoverage":false},{"functionName":"get objectMode","ranges":[{"startOffset":8210,"endOffset":8267,"count":0}],"isBlockCoverage":false},{"functionName":"set objectMode","ranges":[{"startOffset":8338,"endOffset":8438,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8498,"endOffset":8549,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8812,"endOffset":8878,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8941,"endOffset":9082,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":9147,"endOffset":9198,"count":0}],"isBlockCoverage":false},{"functionName":"set aborted","ranges":[{"startOffset":9333,"endOffset":9351,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":9356,"endOffset":12746,"count":1},{"startOffset":9424,"endOffset":9437,"count":0},{"startOffset":9473,"endOffset":9508,"count":0},{"startOffset":9538,"endOffset":9716,"count":0},{"startOffset":9761,"endOffset":9830,"count":0},{"startOffset":9916,"endOffset":9923,"count":0},{"startOffset":10212,"endOffset":10238,"count":0},{"startOffset":10240,"endOffset":10774,"count":0},{"startOffset":11071,"endOffset":11089,"count":0},{"startOffset":11195,"endOffset":11253,"count":0},{"startOffset":11312,"endOffset":11334,"count":0},{"startOffset":11371,"endOffset":11378,"count":0},{"startOffset":11422,"endOffset":12043,"count":0},{"startOffset":12045,"endOffset":12212,"count":0},{"startOffset":12214,"endOffset":12454,"count":0},{"startOffset":12468,"endOffset":12745,"count":0}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":13241,"endOffset":14069,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14074,"endOffset":14785,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":14790,"endOffset":15561,"count":1},{"startOffset":14858,"endOffset":14924,"count":0},{"startOffset":14969,"endOffset":15038,"count":0},{"startOffset":15084,"endOffset":15112,"count":0},{"startOffset":15141,"endOffset":15162,"count":0},{"startOffset":15481,"endOffset":15497,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15618,"endOffset":16048,"count":1},{"startOffset":15672,"endOffset":15679,"count":0},{"startOffset":15713,"endOffset":15735,"count":0},{"startOffset":15737,"endOffset":15784,"count":0},{"startOffset":15919,"endOffset":15933,"count":0},{"startOffset":15974,"endOffset":15997,"count":0}],"isBlockCoverage":true},{"functionName":"resume","ranges":[{"startOffset":16494,"endOffset":16541,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":16586,"endOffset":16694,"count":0}],"isBlockCoverage":false},{"functionName":"get destroyed","ranges":[{"startOffset":16769,"endOffset":16824,"count":0}],"isBlockCoverage":false},{"functionName":"get flowing","ranges":[{"startOffset":16964,"endOffset":17015,"count":1}],"isBlockCoverage":true},{"functionName":"get paused","ranges":[{"startOffset":17093,"endOffset":17142,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17147,"endOffset":17336,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17341,"endOffset":17539,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17544,"endOffset":17765,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17770,"endOffset":17861,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":17998,"endOffset":18979,"count":0}],"isBlockCoverage":false},{"functionName":"unpipe","ranges":[{"startOffset":19331,"endOffset":19759,"count":0}],"isBlockCoverage":false},{"functionName":"addListener","ranges":[{"startOffset":19817,"endOffset":19886,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":20637,"endOffset":21442,"count":4},{"startOffset":20725,"endOffset":20911,"count":1},{"startOffset":20911,"endOffset":21416,"count":3},{"startOffset":20947,"endOffset":20974,"count":0},{"startOffset":20976,"endOffset":21023,"count":0},{"startOffset":21054,"endOffset":21074,"count":1},{"startOffset":21076,"endOffset":21156,"count":0},{"startOffset":21189,"endOffset":21211,"count":0},{"startOffset":21213,"endOffset":21416,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21297,"endOffset":21336,"count":0}],"isBlockCoverage":false},{"functionName":"removeListener","ranges":[{"startOffset":21501,"endOffset":21574,"count":0}],"isBlockCoverage":false},{"functionName":"off","ranges":[{"startOffset":21926,"endOffset":22505,"count":0}],"isBlockCoverage":false},{"functionName":"removeAllListeners","ranges":[{"startOffset":22847,"endOffset":23155,"count":3},{"startOffset":22969,"endOffset":23129,"count":0}],"isBlockCoverage":true},{"functionName":"get emittedEnd","ranges":[{"startOffset":23224,"endOffset":23282,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23287,"endOffset":23734,"count":4},{"startOffset":23473,"endOffset":23728,"count":1},{"startOffset":23659,"endOffset":23678,"count":0}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":24919,"endOffset":26657,"count":6},{"startOffset":25165,"endOffset":25202,"count":0},{"startOffset":25235,"endOffset":25454,"count":1},{"startOffset":25274,"endOffset":25282,"count":0},{"startOffset":25299,"endOffset":25306,"count":0},{"startOffset":25357,"endOffset":25400,"count":0},{"startOffset":25454,"endOffset":26518,"count":5},{"startOffset":25486,"endOffset":25533,"count":1},{"startOffset":25533,"endOffset":26518,"count":4},{"startOffset":25567,"endOffset":25870,"count":0},{"startOffset":25904,"endOffset":26193,"count":0},{"startOffset":26228,"endOffset":26345,"count":1},{"startOffset":26345,"endOffset":26518,"count":3},{"startOffset":26379,"endOffset":26400,"count":2},{"startOffset":26402,"endOffset":26518,"count":2},{"startOffset":26518,"endOffset":26656,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25366,"endOffset":25392,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26662,"endOffset":26935,"count":1},{"startOffset":26718,"endOffset":26805,"count":0},{"startOffset":26842,"endOffset":26849,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26940,"endOffset":27192,"count":1},{"startOffset":26997,"endOffset":27010,"count":0},{"startOffset":27115,"endOffset":27154,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27124,"endOffset":27146,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27197,"endOffset":27698,"count":1},{"startOffset":27239,"endOffset":27523,"count":0},{"startOffset":27561,"endOffset":27593,"count":0}],"isBlockCoverage":true},{"functionName":"collect","ranges":[{"startOffset":27818,"endOffset":28302,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":28480,"endOffset":28755,"count":0}],"isBlockCoverage":false},{"functionName":"promise","ranges":[{"startOffset":28841,"endOffset":29096,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29245,"endOffset":31246,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31434,"endOffset":32352,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":32766,"endOffset":33450,"count":0}],"isBlockCoverage":false},{"functionName":"get isStream","ranges":[{"startOffset":33616,"endOffset":33671,"count":0}],"isBlockCoverage":false}]},{"scriptId":"197","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/dist/cjs/src/pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7298,"count":1}],"isBlockCoverage":true},{"functionName":"isPatternList","ranges":[{"startOffset":241,"endOffset":263,"count":4}],"isBlockCoverage":true},{"functionName":"isGlobList","ranges":[{"startOffset":284,"endOffset":306,"count":4}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":395,"endOffset":7235,"count":4}],"isBlockCoverage":true},{"functionName":"Pattern","ranges":[{"startOffset":586,"endOffset":2959,"count":4},{"startOffset":681,"endOffset":747,"count":0},{"startOffset":783,"endOffset":846,"count":0},{"startOffset":899,"endOffset":992,"count":0},{"startOffset":1082,"endOffset":1148,"count":0},{"startOffset":1396,"endOffset":2953,"count":1},{"startOffset":1740,"endOffset":2369,"count":0},{"startOffset":2428,"endOffset":2943,"count":0}],"isBlockCoverage":true},{"functionName":"pattern","ranges":[{"startOffset":3034,"endOffset":3098,"count":63}],"isBlockCoverage":true},{"functionName":"isString","ranges":[{"startOffset":3164,"endOffset":3249,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobstar","ranges":[{"startOffset":3315,"endOffset":3407,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":3470,"endOffset":3553,"count":0}],"isBlockCoverage":false},{"functionName":"globString","ranges":[{"startOffset":3638,"endOffset":4000,"count":10},{"startOffset":3717,"endOffset":3992,"count":2},{"startOffset":3775,"endOffset":3925,"count":1},{"startOffset":3819,"endOffset":3874,"count":0},{"startOffset":3946,"endOffset":3991,"count":1}],"isBlockCoverage":true},{"functionName":"hasMore","ranges":[{"startOffset":4080,"endOffset":4143,"count":21}],"isBlockCoverage":true},{"functionName":"rest","ranges":[{"startOffset":4239,"endOffset":4657,"count":54},{"startOffset":4298,"endOffset":4316,"count":50},{"startOffset":4316,"endOffset":4358,"count":4},{"startOffset":4358,"endOffset":4385,"count":1},{"startOffset":4385,"endOffset":4656,"count":3}],"isBlockCoverage":true},{"functionName":"isUNC","ranges":[{"startOffset":4741,"endOffset":5208,"count":2},{"startOffset":4842,"endOffset":4855,"count":1},{"startOffset":4868,"endOffset":5201,"count":1},{"startOffset":4928,"endOffset":4968,"count":0},{"startOffset":4969,"endOffset":5004,"count":0},{"startOffset":5005,"endOffset":5040,"count":0},{"startOffset":5041,"endOffset":5089,"count":0},{"startOffset":5090,"endOffset":5120,"count":0},{"startOffset":5121,"endOffset":5169,"count":0},{"startOffset":5170,"endOffset":5200,"count":0}],"isBlockCoverage":true},{"functionName":"isDrive","ranges":[{"startOffset":5545,"endOffset":5923,"count":2},{"startOffset":5650,"endOffset":5665,"count":1},{"startOffset":5678,"endOffset":5916,"count":1},{"startOffset":5740,"endOffset":5780,"count":0},{"startOffset":5781,"endOffset":5819,"count":0},{"startOffset":5820,"endOffset":5868,"count":0},{"startOffset":5869,"endOffset":5915,"count":0}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":6156,"endOffset":6449,"count":37},{"startOffset":6267,"endOffset":6285,"count":36},{"startOffset":6298,"endOffset":6442,"count":1},{"startOffset":6350,"endOffset":6366,"count":0}],"isBlockCoverage":true},{"functionName":"root","ranges":[{"startOffset":6524,"endOffset":6691,"count":9},{"startOffset":6631,"endOffset":6651,"count":0},{"startOffset":6664,"endOffset":6667,"count":0}],"isBlockCoverage":true},{"functionName":"checkFollowGlobstar","ranges":[{"startOffset":6809,"endOffset":6946,"count":0}],"isBlockCoverage":false},{"functionName":"markFollowGlobstar","ranges":[{"startOffset":7042,"endOffset":7233,"count":0}],"isBlockCoverage":false}]},{"scriptId":"198","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/dist/cjs/src/walker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11532,"count":1}],"isBlockCoverage":true},{"functionName":"makeIgnore","ranges":[{"startOffset":408,"endOffset":589,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":661,"endOffset":9170,"count":1}],"isBlockCoverage":true},{"functionName":"GlobUtil","ranges":[{"startOffset":848,"endOffset":1546,"count":1},{"startOffset":1031,"endOffset":1037,"count":0},{"startOffset":1070,"endOffset":1139,"count":0},{"startOffset":1306,"endOffset":1317,"count":0},{"startOffset":1373,"endOffset":1540,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1464,"endOffset":1528,"count":0}],"isBlockCoverage":false},{"functionName":"#ignored","ranges":[{"startOffset":1551,"endOffset":1644,"count":3},{"startOffset":1620,"endOffset":1637,"count":0}],"isBlockCoverage":true},{"functionName":"#childrenIgnored","ranges":[{"startOffset":1649,"endOffset":1735,"count":9},{"startOffset":1703,"endOffset":1728,"count":0}],"isBlockCoverage":true},{"functionName":"pause","ranges":[{"startOffset":1770,"endOffset":1813,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":1818,"endOffset":2096,"count":2},{"startOffset":1882,"endOffset":1891,"count":0},{"startOffset":1905,"endOffset":1912,"count":0},{"startOffset":2061,"endOffset":2090,"count":0}],"isBlockCoverage":true},{"functionName":"onResume","ranges":[{"startOffset":2101,"endOffset":2356,"count":0}],"isBlockCoverage":false},{"functionName":"matchCheck","ranges":[{"startOffset":2474,"endOffset":2909,"count":1},{"startOffset":2521,"endOffset":2539,"count":0},{"startOffset":2553,"endOffset":2570,"count":0},{"startOffset":2620,"endOffset":2770,"count":0},{"startOffset":2873,"endOffset":2891,"count":0}],"isBlockCoverage":true},{"functionName":"matchCheckTest","ranges":[{"startOffset":2914,"endOffset":3207,"count":1},{"startOffset":3001,"endOffset":3030,"count":0},{"startOffset":3055,"endOffset":3072,"count":0},{"startOffset":3107,"endOffset":3126,"count":0},{"startOffset":3189,"endOffset":3200,"count":0}],"isBlockCoverage":true},{"functionName":"matchCheckSync","ranges":[{"startOffset":3212,"endOffset":3639,"count":0}],"isBlockCoverage":false},{"functionName":"matchFinish","ranges":[{"startOffset":3644,"endOffset":4484,"count":1},{"startOffset":3713,"endOffset":3720,"count":0},{"startOffset":3785,"endOffset":3805,"count":0},{"startOffset":3869,"endOffset":3887,"count":0},{"startOffset":3888,"endOffset":3899,"count":0},{"startOffset":3980,"endOffset":4022,"count":0},{"startOffset":4045,"endOffset":4172,"count":0},{"startOffset":4228,"endOffset":4247,"count":0},{"startOffset":4310,"endOffset":4346,"count":0},{"startOffset":4363,"endOffset":4380,"count":0},{"startOffset":4435,"endOffset":4447,"count":0}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":4489,"endOffset":4637,"count":1}],"isBlockCoverage":true},{"functionName":"matchSync","ranges":[{"startOffset":4642,"endOffset":4786,"count":0}],"isBlockCoverage":false},{"functionName":"walkCB","ranges":[{"startOffset":4791,"endOffset":5023,"count":1},{"startOffset":4875,"endOffset":4884,"count":0},{"startOffset":4898,"endOffset":4903,"count":0}],"isBlockCoverage":true},{"functionName":"walkCB2","ranges":[{"startOffset":5028,"endOffset":6442,"count":9},{"startOffset":5126,"endOffset":5138,"count":0},{"startOffset":5162,"endOffset":5171,"count":0},{"startOffset":5185,"endOffset":5190,"count":0},{"startOffset":5216,"endOffset":5327,"count":0},{"startOffset":5782,"endOffset":5937,"count":0},{"startOffset":6035,"endOffset":6064,"count":0},{"startOffset":6066,"endOffset":6107,"count":0},{"startOffset":6234,"endOffset":6283,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5244,"endOffset":5295,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":5638,"endOffset":5708,"count":18},{"startOffset":5693,"endOffset":5698,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5913,"endOffset":5925,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6331,"endOffset":6388,"count":9}],"isBlockCoverage":true},{"functionName":"walkCB3","ranges":[{"startOffset":6447,"endOffset":7089,"count":9},{"startOffset":6739,"endOffset":6894,"count":1},{"startOffset":6791,"endOffset":6800,"count":0},{"startOffset":6966,"endOffset":7067,"count":8}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":6595,"endOffset":6665,"count":18},{"startOffset":6650,"endOffset":6655,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6870,"endOffset":6882,"count":1}],"isBlockCoverage":true},{"functionName":"walkCBSync","ranges":[{"startOffset":7094,"endOffset":7334,"count":0}],"isBlockCoverage":false},{"functionName":"walkCB2Sync","ranges":[{"startOffset":7339,"endOffset":8549,"count":0}],"isBlockCoverage":false},{"functionName":"walkCB3Sync","ranges":[{"startOffset":8554,"endOffset":9168,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":9200,"endOffset":10371,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":10405,"endOffset":11464,"count":1}],"isBlockCoverage":true},{"functionName":"GlobStream","ranges":[{"startOffset":10458,"endOffset":10771,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10688,"endOffset":10707,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10744,"endOffset":10763,"count":1}],"isBlockCoverage":true},{"functionName":"matchEmit","ranges":[{"startOffset":10776,"endOffset":10888,"count":1},{"startOffset":10869,"endOffset":10882,"count":0}],"isBlockCoverage":true},{"functionName":"stream","ranges":[{"startOffset":10893,"endOffset":11249,"count":1},{"startOffset":11115,"endOffset":11214,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11004,"endOffset":11103,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11063,"endOffset":11087,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11178,"endOffset":11202,"count":0}],"isBlockCoverage":false},{"functionName":"streamSync","ranges":[{"startOffset":11254,"endOffset":11462,"count":0}],"isBlockCoverage":false}]},{"scriptId":"199","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/dist/cjs/src/ignore.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3798,"count":1},{"startOffset":531,"endOffset":540,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":592,"endOffset":3738,"count":0}],"isBlockCoverage":true}]},{"scriptId":"200","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/dist/cjs/src/processor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10772,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":357,"endOffset":938,"count":18}],"isBlockCoverage":true},{"functionName":"HasWalkedCache","ranges":[{"startOffset":395,"endOffset":461,"count":18}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":466,"endOffset":536,"count":17}],"isBlockCoverage":true},{"functionName":"hasWalked","ranges":[{"startOffset":541,"endOffset":652,"count":1},{"startOffset":618,"endOffset":623,"count":0}],"isBlockCoverage":true},{"functionName":"storeWalked","ranges":[{"startOffset":657,"endOffset":936,"count":10},{"startOffset":813,"endOffset":846,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1195,"endOffset":1647,"count":18}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":1242,"endOffset":1455,"count":1},{"startOffset":1301,"endOffset":1304,"count":0},{"startOffset":1319,"endOffset":1322,"count":0},{"startOffset":1434,"endOffset":1447,"count":0}],"isBlockCoverage":true},{"functionName":"entries","ranges":[{"startOffset":1490,"endOffset":1645,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1547,"endOffset":1637,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1784,"endOffset":2598,"count":18}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":1828,"endOffset":2183,"count":17},{"startOffset":1885,"endOffset":1916,"count":0},{"startOffset":1980,"endOffset":2117,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2009,"endOffset":2053,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2188,"endOffset":2427,"count":9},{"startOffset":2296,"endOffset":2371,"count":0}],"isBlockCoverage":true},{"functionName":"entries","ranges":[{"startOffset":2432,"endOffset":2510,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2475,"endOffset":2502,"count":8}],"isBlockCoverage":true},{"functionName":"keys","ranges":[{"startOffset":2515,"endOffset":2596,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2569,"endOffset":2588,"count":17}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2797,"endOffset":10703,"count":18}],"isBlockCoverage":true},{"functionName":"Processor","ranges":[{"startOffset":2948,"endOffset":3200,"count":18},{"startOffset":3135,"endOffset":3158,"count":17},{"startOffset":3171,"endOffset":3193,"count":1}],"isBlockCoverage":true},{"functionName":"processPatterns","ranges":[{"startOffset":3205,"endOffset":7131,"count":9},{"startOffset":3656,"endOffset":3687,"count":0},{"startOffset":3758,"endOffset":4167,"count":0},{"startOffset":4214,"endOffset":4223,"count":0},{"startOffset":4361,"endOffset":4403,"count":2},{"startOffset":4405,"endOffset":4547,"count":2},{"startOffset":4643,"endOffset":4812,"count":1},{"startOffset":4728,"endOffset":4737,"count":0},{"startOffset":5033,"endOffset":5318,"count":0},{"startOffset":5759,"endOffset":5793,"count":0},{"startOffset":5794,"endOffset":5846,"count":0},{"startOffset":6063,"endOffset":6072,"count":0},{"startOffset":6075,"endOffset":6306,"count":0},{"startOffset":6367,"endOffset":6957,"count":0},{"startOffset":6989,"endOffset":7094,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3318,"endOffset":3334,"count":9}],"isBlockCoverage":true},{"functionName":"subwalkTargets","ranges":[{"startOffset":7136,"endOffset":7197,"count":9}],"isBlockCoverage":true},{"functionName":"child","ranges":[{"startOffset":7202,"endOffset":7279,"count":17}],"isBlockCoverage":true},{"functionName":"filterEntries","ranges":[{"startOffset":7475,"endOffset":8312,"count":9},{"startOffset":7697,"endOffset":8282,"count":17},{"startOffset":8027,"endOffset":8258,"count":0}],"isBlockCoverage":true},{"functionName":"testGlobstar","ranges":[{"startOffset":8317,"endOffset":10191,"count":17},{"startOffset":8447,"endOffset":8516,"count":0},{"startOffset":8549,"endOffset":9424,"count":8},{"startOffset":9068,"endOffset":9410,"count":0},{"startOffset":9617,"endOffset":9702,"count":0},{"startOffset":9703,"endOffset":9731,"count":0},{"startOffset":9732,"endOffset":9761,"count":0},{"startOffset":9763,"endOffset":9841,"count":0},{"startOffset":9876,"endOffset":10053,"count":0}],"isBlockCoverage":true},{"functionName":"testRegExp","ranges":[{"startOffset":10196,"endOffset":10431,"count":17},{"startOffset":10272,"endOffset":10279,"count":16},{"startOffset":10279,"endOffset":10360,"count":1},{"startOffset":10360,"endOffset":10425,"count":0}],"isBlockCoverage":true},{"functionName":"testString","ranges":[{"startOffset":10436,"endOffset":10701,"count":0}],"isBlockCoverage":false}]},{"scriptId":"201","url":"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/dist/cjs/src/has-magic.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1058,"count":1}],"isBlockCoverage":true},{"functionName":"hasMagic","ranges":[{"startOffset":748,"endOffset":990,"count":0}],"isBlockCoverage":false}]},{"scriptId":"202","url":"node:internal/modules/esm/handle_process_exit","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":424,"count":1}],"isBlockCoverage":false},{"functionName":"handleProcessExit","ranges":[{"startOffset":298,"endOffset":379,"count":0}],"isBlockCoverage":false}]}],"timestamp":81027.793479,"source-map-cache":{"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/dist/cjs/src/bin.js":{"lineLengths":[19,13,62,55,27,41,31,50,41,33,56,2,18,35,0,74,23,4,10,10,19,24,75,43,6,2,10,14,19,24,76,34,6,2,11,10,19,74,72,0,77,68,0,78,74,75,75,74,72,53,0,72,77,70,0,74,75,53,8,6,15,19,48,6,21,19,56,6,11,19,61,6,12,19,75,70,73,74,55,8,6,13,19,72,6,15,19,75,69,73,64,6,11,19,77,57,6,19,19,75,74,73,39,8,6,10,74,73,8,6,14,52,6,13,72,71,31,0,75,72,63,75,55,8,6,12,59,0,74,39,8,6,12,72,6,17,72,59,6,31,76,69,55,6,2,10,18,19,64,39,6,2,10,10,19,69,31,6,11,19,72,73,70,32,0,74,68,71,73,77,73,50,0,75,70,72,73,68,53,8,6,15,68,74,72,32,18,22,21,22,20,20,22,20,20,21,21,18,6,2,14,13,19,47,6,2,11,12,19,75,74,6,2,11,11,19,51,6,3,5,46,22,31,24,5,52,37,51,41,31,21,60,30,12,89,57,34,24,24,44,30,30,26,40,38,32,30,28,28,38,34,34,26,26,28,28,7,27,15,45,47,5,10,48,103,5,1,11,29,62,20,1,31],"data":{"version":3,"file":"bin.js","sourceRoot":"","sources":["file:///home/gcadoret/www/lcov-reporter/node_modules/glob/src/bin.ts"],"names":[],"mappings":";;;AACA,uDAAkD;AAClD,2BAA+B;AAC/B,yCAAgC;AAChC,+BAA2B;AAC3B,kDAAyC;AACzC,yCAAuC;AAEvC,MAAM,CAAC,GAAG,IAAA,gBAAI,EAAC;IACb,KAAK,EAAE,4CAA4C;CACpD,CAAC;KACC,WAAW,CACV;YACQ,sBAAO;;;;GAIhB,CACA;KACA,GAAG,CAAC;IACH,GAAG,EAAE;QACH,KAAK,EAAE,GAAG;QACV,IAAI,EAAE,SAAS;QACf,WAAW,EAAE;0CACuB;KACrC;CACF,CAAC;KACD,GAAG,CAAC;IACH,OAAO,EAAE;QACP,KAAK,EAAE,GAAG;QACV,IAAI,EAAE,SAAS;QACf,WAAW,EAAE;iCACc;KAC5B;CACF,CAAC;KACD,IAAI,CAAC;IACJ,GAAG,EAAE;QACH,KAAK,EAAE,GAAG;QACV,WAAW,EAAE;;;;;;;;;;;;;;;;;;;;;OAqBZ;KACF;IACD,QAAQ,EAAE;QACR,KAAK,EAAE,GAAG;QACV,WAAW,EAAE,0BAA0B;KACxC;IACD,cAAc,EAAE;QACd,KAAK,EAAE,GAAG;QACV,WAAW,EAAE,kCAAkC;KAChD;IACD,IAAI,EAAE;QACJ,KAAK,EAAE,GAAG;QACV,WAAW,EAAE,uCAAuC;KACrD;IACD,KAAK,EAAE;QACL,KAAK,EAAE,GAAG;QACV,WAAW,EAAE;;;;;OAKZ;KACF;IAED,MAAM,EAAE;QACN,KAAK,EAAE,GAAG;QACV,WAAW,EAAE,kDAAkD;KAChE;IACD,QAAQ,EAAE;QACR,KAAK,EAAE,GAAG;QACV,WAAW,EAAE;;;+DAG4C;KAC1D;IACD,IAAI,EAAE;QACJ,KAAK,EAAE,GAAG;QACV,WAAW,EAAE;wDACqC;KACnD;IACD,YAAY,EAAE;QACZ,KAAK,EAAE,GAAG;QACV,WAAW,EAAE;;;;OAIZ;KACF;IAED,GAAG,EAAE;QACH,WAAW,EAAE;;OAEZ;KACF;IACD,OAAO,EAAE;QACP,WAAW,EAAE,8BAA8B;KAC5C;IACD,MAAM,EAAE;QACN,WAAW,EAAE;;;;;;;;;OASZ;KACF;IACD,KAAK,EAAE;QACL,WAAW,EAAE;;;;OAIZ;KACF;IACD,KAAK,EAAE;QACL,WAAW,EAAE,kDAAkD;KAChE;IACD,UAAU,EAAE;QACV,WAAW,EAAE;0DACuC;KACrD;IACD,wBAAwB,EAAE;QACxB,WAAW,EAAE;;sDAEmC;KACjD;CACF,CAAC;KACD,GAAG,CAAC;IACH,WAAW,EAAE;QACX,KAAK,EAAE,GAAG;QACV,WAAW,EAAE;sCACmB;KACjC;CACF,CAAC;KACD,GAAG,CAAC;IACH,GAAG,EAAE;QACH,KAAK,EAAE,GAAG;QACV,WAAW,EAAE,+CAA+C;QAC5D,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE;KACvB;IACD,IAAI,EAAE;QACJ,KAAK,EAAE,GAAG;QACV,WAAW,EAAE;;;;;;;;;;;;;;;;;;;OAmBZ;KACF;IACD,QAAQ,EAAE;QACR,WAAW,EAAE;;uEAEoD;QACjE,QAAQ,EAAE,CAAC,CAAC,EAAE,CACZ,IAAI,GAAG,CAAC;YACN,KAAK;YACL,SAAS;YACT,QAAQ;YACR,SAAS;YACT,OAAO;YACP,OAAO;YACP,SAAS;YACT,OAAO;YACP,OAAO;YACP,QAAQ;YACR,QAAQ;SACT,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;KACZ;CACF,CAAC;KACD,OAAO,CAAC;IACP,MAAM,EAAE;QACN,KAAK,EAAE,GAAG;QACV,WAAW,EAAE,yBAAyB;KACvC;CACF,CAAC;KACD,IAAI,CAAC;IACJ,KAAK,EAAE;QACL,KAAK,EAAE,GAAG;QACV,WAAW,EAAE;yEACsD;KACpE;CACF,CAAC;KACD,IAAI,CAAC;IACJ,IAAI,EAAE;QACJ,KAAK,EAAE,GAAG;QACV,WAAW,EAAE,6BAA6B;KAC3C;CACF,CAAC,CAAA;AAEJ,IAAI;IACF,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,CAAA;IACzC,IAAI,MAAM,CAAC,IAAI,EAAE;QACf,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAA;QACtB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;KAChB;IACD,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO;QAC7C,MAAM,sBAAsB,CAAA;IAC9B,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO;QAC5C,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;IAClC,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG;QACzB,CAAC,CAAC,WAAW;QACb,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAA,eAAU,EAAC,CAAC,CAAC,CAAC,CAAA;IAC3C,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG;QACxB,CAAC,CAAC,EAAE;QACJ,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAA,eAAU,EAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAA,WAAI,EAAC,CAAC,CAAC,CAAC,CAAA;IAC5D,MAAM,MAAM,GAAG,IAAA,qBAAU,EAAC,QAAQ,EAAE;QAClC,QAAQ,EAAE,MAAM,CAAC,QAAQ;QACzB,GAAG,EAAE,MAAM,CAAC,GAAG;QACf,GAAG,EAAE,MAAM,CAAC,GAAG;QACf,WAAW,EAAE,MAAM,CAAC,cAAc,CAAC;QACnC,MAAM,EAAE,MAAM,CAAC,MAAM;QACrB,MAAM,EAAE,MAAM,CAAC,MAAM;QACrB,IAAI,EAAE,MAAM,CAAC,IAAI;QACjB,SAAS,EAAE,MAAM,CAAC,YAAY,CAAC;QAC/B,QAAQ,EAAE,MAAM,CAAC,WAAW,CAAC;QAC7B,OAAO,EAAE,MAAM,CAAC,OAAO;QACvB,MAAM,EAAE,MAAM,CAAC,MAAM;QACrB,KAAK,EAAE,MAAM,CAAC,KAAK;QACnB,KAAK,EAAE,MAAM,CAAC,KAAK;QACnB,UAAU,EAAE,MAAM,CAAC,UAAU;QAC7B,QAAQ,EAAE,MAAM,CAAC,QAAuC;QACxD,QAAQ,EAAE,MAAM,CAAC,QAAQ;QACzB,IAAI,EAAE,MAAM,CAAC,IAAI;QACjB,IAAI,EAAE,MAAM,CAAC,IAAI;QACjB,KAAK,EAAE,MAAM,CAAC,KAAK;QACnB,KAAK,EAAE,MAAM,CAAC,KAAK;KACpB,CAAC,CAAA;IAEF,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAA;IACtB,IAAI,CAAC,GAAG,EAAE;QACR,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACpC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;KACvC;SAAM;QACL,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;QACvC,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,IAAA,kCAAe,EAAC,GAAG,EAAE,OAAO,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAA;KACvE;CACF;AAAC,OAAO,CAAC,EAAE;IACV,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAA;IACxB,OAAO,CAAC,KAAK,CAAC,CAAC,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;IACzD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;CAChB","sourcesContent":["#!/usr/bin/env node\nimport { foregroundChild } from 'foreground-child'\nimport { existsSync } from 'fs'\nimport { jack } from 'jackspeak'\nimport { join } from 'path'\nimport { version } from '../package.json'\nimport { globStream } from './index.js'\n\nconst j = jack({\n  usage: 'glob [options] [<pattern> [<pattern> ...]]',\n})\n  .description(\n    `\n    Glob v${version}\n\n    Expand the positional glob expression arguments into any matching file\n    system paths found.\n  `\n  )\n  .opt({\n    cmd: {\n      short: 'c',\n      hint: 'command',\n      description: `Run the command provided, passing the glob expression\n                    matches as arguments.`,\n    },\n  })\n  .opt({\n    default: {\n      short: 'p',\n      hint: 'pattern',\n      description: `If no positional arguments are provided, glob will use\n                    this pattern`,\n    },\n  })\n  .flag({\n    all: {\n      short: 'A',\n      description: `By default, the glob cli command will not expand any\n                    arguments that are an exact match to a file on disk.\n\n                    This prevents double-expanding, in case the shell expands\n                    an argument whose filename is a glob expression.\n\n                    For example, if 'app/*.ts' would match 'app/[id].ts', then\n                    on Windows powershell or cmd.exe, 'glob app/*.ts' will\n                    expand to 'app/[id].ts', as expected. However, in posix\n                    shells such as bash or zsh, the shell will first expand\n                    'app/*.ts' to a list of filenames. Then glob will look\n                    for a file matching 'app/[id].ts' (ie, 'app/i.ts' or\n                    'app/d.ts'), which is unexpected.\n\n                    Setting '--all' prevents this behavior, causing glob\n                    to treat ALL patterns as glob expressions to be expanded,\n                    even if they are an exact match to a file on disk.\n\n                    When setting this option, be sure to enquote arguments\n                    so that the shell will not expand them prior to passing\n                    them to the glob command process.\n      `,\n    },\n    absolute: {\n      short: 'a',\n      description: 'Expand to absolute paths',\n    },\n    'dot-relative': {\n      short: 'd',\n      description: `Prepend './' on relative matches`,\n    },\n    mark: {\n      short: 'm',\n      description: `Append a / on any directories matched`,\n    },\n    posix: {\n      short: 'x',\n      description: `Always resolve to posix style paths, using '/' as the\n                    directory separator, even on Windows. Drive letter\n                    absolute matches on Windows will be expanded to their\n                    full resolved UNC maths, eg instead of 'C:\\\\foo\\\\bar',\n                    it will expand to '//?/C:/foo/bar'.\n      `,\n    },\n\n    follow: {\n      short: 'f',\n      description: `Follow symlinked directories when expanding '**'`,\n    },\n    realpath: {\n      short: 'R',\n      description: `Call 'fs.realpath' on all of the results. In the case\n                    of an entry that cannot be resolved, the entry is\n                    omitted. This incurs a slight performance penalty, of\n                    course, because of the added system calls.`,\n    },\n    stat: {\n      short: 's',\n      description: `Call 'fs.lstat' on all entries, whether required or not\n                    to determine if it's a valid match.`,\n    },\n    'match-base': {\n      short: 'b',\n      description: `Perform a basename-only match if the pattern does not\n                    contain any slash characters. That is, '*.js' would be\n                    treated as equivalent to '**/*.js', matching js files\n                    in all directories.\n      `,\n    },\n\n    dot: {\n      description: `Allow patterns to match files/directories that start\n                    with '.', even if the pattern does not start with '.'\n      `,\n    },\n    nobrace: {\n      description: 'Do not expand {...} patterns',\n    },\n    nocase: {\n      description: `Perform a case-insensitive match. This defaults to\n                    'true' on macOS and Windows platforms, and false on\n                    all others.\n\n                    Note: 'nocase' should only be explicitly set when it is\n                    known that the filesystem's case sensitivity differs\n                    from the platform default. If set 'true' on\n                    case-insensitive file systems, then the walk may return\n                    more or less results than expected.\n      `,\n    },\n    nodir: {\n      description: `Do not match directories, only files.\n\n                    Note: to *only* match directories, append a '/' at the\n                    end of the pattern.\n      `,\n    },\n    noext: {\n      description: `Do not expand extglob patterns, such as '+(a|b)'`,\n    },\n    noglobstar: {\n      description: `Do not expand '**' against multiple path portions.\n                    Ie, treat it as a normal '*' instead.`,\n    },\n    'windows-path-no-escape': {\n      description: `Use '\\\\' as a path separator *only*, and *never* as an\n                    escape character. If set, all '\\\\' characters are\n                    replaced with '/' in the pattern.`,\n    },\n  })\n  .num({\n    'max-depth': {\n      short: 'D',\n      description: `Maximum depth to traverse from the current\n                    working directory`,\n    },\n  })\n  .opt({\n    cwd: {\n      short: 'C',\n      description: 'Current working directory to execute/match in',\n      default: process.cwd(),\n    },\n    root: {\n      short: 'r',\n      description: `A string path resolved against the 'cwd', which is\n                    used as the starting point for absolute patterns that\n                    start with '/' (but not drive letters or UNC paths\n                    on Windows).\n\n                    Note that this *doesn't* necessarily limit the walk to\n                    the 'root' directory, and doesn't affect the cwd\n                    starting point for non-absolute patterns. A pattern\n                    containing '..' will still be able to traverse out of\n                    the root directory, if it is not an actual root directory\n                    on the filesystem, and any non-absolute patterns will\n                    still be matched in the 'cwd'.\n\n                    To start absolute and non-absolute patterns in the same\n                    path, you can use '--root=' to set it to the empty\n                    string. However, be aware that on Windows systems, a\n                    pattern like 'x:/*' or '//host/share/*' will *always*\n                    start in the 'x:/' or '//host/share/' directory,\n                    regardless of the --root setting.\n      `,\n    },\n    platform: {\n      description: `Defaults to the value of 'process.platform' if\n                    available, or 'linux' if not. Setting --platform=win32\n                    on non-Windows systems may cause strange behavior!`,\n      validate: v =>\n        new Set([\n          'aix',\n          'android',\n          'darwin',\n          'freebsd',\n          'haiku',\n          'linux',\n          'openbsd',\n          'sunos',\n          'win32',\n          'cygwin',\n          'netbsd',\n        ]).has(v),\n    },\n  })\n  .optList({\n    ignore: {\n      short: 'i',\n      description: `Glob patterns to ignore`,\n    },\n  })\n  .flag({\n    debug: {\n      short: 'v',\n      description: `Output a huge amount of noisy debug information about\n                    patterns as they are parsed and used to match files.`,\n    },\n  })\n  .flag({\n    help: {\n      short: 'h',\n      description: 'Show this usage information',\n    },\n  })\n\ntry {\n  const { positionals, values } = j.parse()\n  if (values.help) {\n    console.log(j.usage())\n    process.exit(0)\n  }\n  if (positionals.length === 0 && !values.default)\n    throw 'No patterns provided'\n  if (positionals.length === 0 && values.default)\n    positionals.push(values.default)\n  const patterns = values.all\n    ? positionals\n    : positionals.filter(p => !existsSync(p))\n  const matches = values.all\n    ? []\n    : positionals.filter(p => existsSync(p)).map(p => join(p))\n  const stream = globStream(patterns, {\n    absolute: values.absolute,\n    cwd: values.cwd,\n    dot: values.dot,\n    dotRelative: values['dot-relative'],\n    follow: values.follow,\n    ignore: values.ignore,\n    mark: values.mark,\n    matchBase: values['match-base'],\n    maxDepth: values['max-depth'],\n    nobrace: values.nobrace,\n    nocase: values.nocase,\n    nodir: values.nodir,\n    noext: values.noext,\n    noglobstar: values.noglobstar,\n    platform: values.platform as undefined | NodeJS.Platform,\n    realpath: values.realpath,\n    root: values.root,\n    stat: values.stat,\n    debug: values.debug,\n    posix: values.posix,\n  })\n\n  const cmd = values.cmd\n  if (!cmd) {\n    matches.forEach(m => console.log(m))\n    stream.on('data', f => console.log(f))\n  } else {\n    stream.on('data', f => matches.push(f))\n    stream.on('end', () => foregroundChild(cmd, matches, { shell: true }))\n  }\n} catch (e) {\n  console.error(j.usage())\n  console.error(e instanceof Error ? e.message : String(e))\n  process.exit(1)\n}\n"]},"url":null,"sourceURL":null},"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/foreground-child/dist/cjs/index.js":{"lineLengths":[13,72,62,2,62,59,49,62,45,53,47,21,92,3,56,2,23,2,12,3,37,75,37,23,23,18,5,74,44,32,25,18,5,47,28,23,5,33,36,21,18,5,54,2,42,37,85,32,23,36,5,50,47,31,13,33,33,9,19,41,34,9,28,6,64,51,21,47,28,29,19,19,9,28,20,45,62,23,25,26,19,43,25,24,9,43,23,26,9,21,69,70,68,70,50,38,40,17,50,37,13,23,53,13,32,9,14,36,9,7,23,46,54,48,11,56,44,11,5,17,1,42,3,57,3,33,32,52,32,58,17,32,37,13,25,32,10,13,70,38,41,33,9,21,28,5,18,50,50,9,6,2,86,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/foreground-child/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChildProcess,\n  SendHandle,\n  Serializable,\n  spawn as nodeSpawn,\n  SpawnOptions,\n} from 'child_process'\nimport crossSpawn from 'cross-spawn'\nimport { onExit } from 'signal-exit'\nimport { allSignals } from './all-signals.js'\nimport { watchdog } from './watchdog.js'\n\n/* c8 ignore start */\nconst spawn = process?.platform === 'win32' ? crossSpawn : nodeSpawn\n/* c8 ignore stop */\n\n/**\n * The signature for the cleanup method.\n *\n * Arguments indicate the exit status of the child process.\n *\n * If a Promise is returned, then the process is not terminated\n * until it resolves, and the resolution value is treated as the\n * exit status (if a number) or signal exit (if a signal string).\n *\n * If `undefined` is returned, then no change is made, and the parent\n * exits in the same way that the child exited.\n *\n * If boolean `false` is returned, then the parent's exit is canceled.\n *\n * If a number is returned, then the parent process exits with the number\n * as its exitCode.\n *\n * If a signal string is returned, then the parent process is killed with\n * the same signal that caused the child to exit.\n */\nexport type Cleanup = (\n  code: number | null,\n  signal: null | NodeJS.Signals\n) =>\n  | void\n  | undefined\n  | number\n  | NodeJS.Signals\n  | false\n  | Promise<void | undefined | number | NodeJS.Signals | false>\n\nexport type FgArgs =\n  | [program: string | string[], cleanup?: Cleanup]\n  | [program: string[], opts?: SpawnOptions, cleanup?: Cleanup]\n  | [program: string, cleanup?: Cleanup]\n  | [program: string, opts?: SpawnOptions, cleanup?: Cleanup]\n  | [program: string, args?: string[], cleanup?: Cleanup]\n  | [\n      program: string,\n      args?: string[],\n      opts?: SpawnOptions,\n      cleanup?: Cleanup\n    ]\n\n/**\n * Normalizes the arguments passed to `foregroundChild`.\n *\n * Exposed for testing.\n *\n * @internal\n */\nexport const normalizeFgArgs = (\n  fgArgs: FgArgs\n): [\n  program: string,\n  args: string[],\n  spawnOpts: SpawnOptions,\n  cleanup: Cleanup\n] => {\n  let [program, args = [], spawnOpts = {}, cleanup = () => {}] = fgArgs\n  if (typeof args === 'function') {\n    cleanup = args\n    spawnOpts = {}\n    args = []\n  } else if (!!args && typeof args === 'object' && !Array.isArray(args)) {\n    if (typeof spawnOpts === 'function') cleanup = spawnOpts\n    spawnOpts = args\n    args = []\n  } else if (typeof spawnOpts === 'function') {\n    cleanup = spawnOpts\n    spawnOpts = {}\n  }\n  if (Array.isArray(program)) {\n    const [pp, ...pa] = program\n    program = pp\n    args = pa\n  }\n  return [program, args, { ...spawnOpts }, cleanup]\n}\n\n/**\n * Spawn the specified program as a \"foreground\" process, or at least as\n * close as is possible given node's lack of exec-without-fork.\n *\n * Cleanup method may be used to modify or ignore the result of the child's\n * exit code or signal. If cleanup returns undefined (or a Promise that\n * resolves to undefined), then the parent will exit in the same way that\n * the child did.\n *\n * Return boolean `false` to prevent the parent's exit entirely.\n */\nexport function foregroundChild(\n  cmd: string | string[],\n  cleanup?: Cleanup\n): ChildProcess\nexport function foregroundChild(\n  program: string,\n  args?: string[],\n  cleanup?: Cleanup\n): ChildProcess\nexport function foregroundChild(\n  program: string,\n  spawnOpts?: SpawnOptions,\n  cleanup?: Cleanup\n): ChildProcess\nexport function foregroundChild(\n  program: string,\n  args?: string[],\n  spawnOpts?: SpawnOptions,\n  cleanup?: Cleanup\n): ChildProcess\nexport function foregroundChild(...fgArgs: FgArgs): ChildProcess {\n  const [program, args, spawnOpts, cleanup] = normalizeFgArgs(fgArgs)\n\n  spawnOpts.stdio = [0, 1, 2]\n  if (process.send) {\n    spawnOpts.stdio.push('ipc')\n  }\n\n  const child = spawn(program, args, spawnOpts)\n\n  const unproxySignals = proxySignals(child)\n  const childHangup = () => {\n    try {\n      child.kill('SIGHUP')\n\n      /* c8 ignore start */\n    } catch (_) {\n      // SIGHUP is weird on windows\n      child.kill('SIGTERM')\n    }\n    /* c8 ignore stop */\n  }\n  const removeOnExit = onExit(childHangup)\n\n  const dog = watchdog(child)\n\n  let done = false\n  child.on('close', async (code, signal) => {\n    dog.kill('SIGKILL')\n    /* c8 ignore start */\n    if (done) {\n      return\n    }\n    /* c8 ignore stop */\n    done = true\n    const result = cleanup(code, signal)\n    const res = isPromise(result) ? await result : result\n    removeOnExit()\n    unproxySignals()\n\n    if (res === false) return\n    else if (typeof res === 'string') {\n      signal = res\n      code = null\n    } else if (typeof res === 'number') {\n      code = res\n      signal = null\n    }\n\n    if (signal) {\n      // If there is nothing else keeping the event loop alive,\n      // then there's a race between a graceful exit and getting\n      // the signal to this process.  Put this timeout here to\n      // make sure we're still alive to get the signal, and thus\n      // exit with the intended signal code.\n      /* istanbul ignore next */\n      setTimeout(() => {}, 2000)\n      try {\n        process.kill(process.pid, signal)\n        /* c8 ignore start */\n      } catch (_) {\n        process.kill(process.pid, 'SIGTERM')\n      }\n      /* c8 ignore stop */\n    } else {\n      process.exit(code || 0)\n    }\n  })\n\n  if (process.send) {\n    process.removeAllListeners('message')\n\n    child.on('message', (message, sendHandle) => {\n      process.send?.(message, sendHandle)\n    })\n\n    process.on('message', (message, sendHandle) => {\n      child.send(\n        message as Serializable,\n        sendHandle as SendHandle | undefined\n      )\n    })\n  }\n\n  return child\n}\n\n/**\n * Starts forwarding signals to `child` through `parent`.\n */\nconst proxySignals = (child: ChildProcess) => {\n  const listeners = new Map()\n\n  for (const sig of allSignals) {\n    const listener = () => {\n      // some signals can only be received, not sent\n      try {\n        child.kill(sig)\n        /* c8 ignore start */\n      } catch (_) {}\n      /* c8 ignore stop */\n    }\n    try {\n      // if it's a signal this system doesn't recognize, skip it\n      process.on(sig, listener)\n      listeners.set(sig, listener)\n      /* c8 ignore start */\n    } catch (_) {}\n    /* c8 ignore stop */\n  }\n\n  return () => {\n    for (const [sig, listener] of listeners) {\n      process.removeListener(sig, listener)\n    }\n  }\n}\n\nconst isPromise = (o: any): o is Promise<any> =>\n  !!o && typeof o === 'object' && typeof o.then === 'function'\n"]},"url":null,"sourceURL":null},"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/signal-exit/dist/cjs/index.js":{"lineLengths":[13,7,62,74,65,63,53,60,45,115,43,34,51,41,47,46,41,38,37,55,26,64,27,15,15,25,20,6,17,22,17,6,14,23,19,35,40,9,52,24,28,30,32,11,5,16,36,5,28,40,35,29,23,19,9,28,43,28,9,14,30,9,5,28,31,25,9,32,24,46,51,9,28,62,9,19,5,1,22,1,37,12,26,44,10,16,34,10,18,36,10,6,2,49,14,25,5,14,16,1,41,52,40,25,65,24,29,13,25,31,23,20,26,16,32,43,32,49,45,70,71,69,35,63,46,83,84,82,82,81,27,37,34,68,74,61,17,36,49,34,70,41,68,29,53,40,17,14,9,61,49,5,22,29,40,29,9,28,37,24,9,59,33,22,49,63,68,30,13,10,5,12,27,19,9,28,65,68,68,35,33,49,17,51,23,46,13,25,9,44,47,10,46,49,10,5,14,28,19,9,29,45,53,33,28,75,13,32,17,60,37,13,25,32,11,55,67,33,5,30,29,40,21,9,43,28,65,91,5,31,45,56,46,49,37,13,33,60,33,69,32,23,9,14,55,9,5,1,35,65,25,94,3,67,39,2,68,29,2,61,3,28,3,66,66,45,2,12,3,24,3,68,66,45,2,12,3,27,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/signal-exit/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Note: since nyc uses this module to output coverage, any lines\n// that are in the direct sync flow of nyc's outputCoverage are\n// ignored, since we can never get coverage for them.\n// grab a reference to node's real process object right away\nimport { signals } from './signals.js'\nexport { signals }\n\n// just a loosened process type so we can do some evil things\ntype ProcessRE = NodeJS.Process & {\n  reallyExit: (code?: number | undefined | null) => any\n  emit: (ev: string, ...a: any[]) => any\n}\n\nconst processOk = (process: any): process is ProcessRE =>\n  !!process &&\n  typeof process === 'object' &&\n  typeof process.removeListener === 'function' &&\n  typeof process.emit === 'function' &&\n  typeof process.reallyExit === 'function' &&\n  typeof process.listeners === 'function' &&\n  typeof process.kill === 'function' &&\n  typeof process.pid === 'number' &&\n  typeof process.on === 'function'\n\nconst kExitEmitter = Symbol.for('signal-exit emitter')\nconst global: typeof globalThis & { [kExitEmitter]?: Emitter } = globalThis\nconst ObjectDefineProperty = Object.defineProperty.bind(Object)\n\n/**\n * A function that takes an exit code and signal as arguments\n *\n * In the case of signal exits *only*, a return value of true\n * will indicate that the signal is being handled, and we should\n * not synthetically exit with the signal we received. Regardless\n * of the handler return value, the handler is unloaded when an\n * otherwise fatal signal is received, so you get exactly 1 shot\n * at it, unless you add another onExit handler at that point.\n *\n * In the case of numeric code exits, we may already have committed\n * to exiting the process, for example via a fatal exception or\n * unhandled promise rejection, so it is impossible to stop safely.\n */\nexport type Handler = (\n  code: number | null | undefined,\n  signal: NodeJS.Signals | null\n) => true | void\ntype ExitEvent = 'afterExit' | 'exit'\ntype Emitted = { [k in ExitEvent]: boolean }\ntype Listeners = { [k in ExitEvent]: Handler[] }\n\n// teeny special purpose ee\nclass Emitter {\n  emitted: Emitted = {\n    afterExit: false,\n    exit: false,\n  }\n\n  listeners: Listeners = {\n    afterExit: [],\n    exit: [],\n  }\n\n  count: number = 0\n  id: number = Math.random()\n\n  constructor() {\n    if (global[kExitEmitter]) {\n      return global[kExitEmitter]\n    }\n    ObjectDefineProperty(global, kExitEmitter, {\n      value: this,\n      writable: false,\n      enumerable: false,\n      configurable: false,\n    })\n  }\n\n  on(ev: ExitEvent, fn: Handler) {\n    this.listeners[ev].push(fn)\n  }\n\n  removeListener(ev: ExitEvent, fn: Handler) {\n    const list = this.listeners[ev]\n    const i = list.indexOf(fn)\n    /* c8 ignore start */\n    if (i === -1) {\n      return\n    }\n    /* c8 ignore stop */\n    if (i === 0 && list.length === 1) {\n      list.length = 0\n    } else {\n      list.splice(i, 1)\n    }\n  }\n\n  emit(\n    ev: ExitEvent,\n    code: number | null | undefined,\n    signal: NodeJS.Signals | null\n  ): boolean {\n    if (this.emitted[ev]) {\n      return false\n    }\n    this.emitted[ev] = true\n    let ret: boolean = false\n    for (const fn of this.listeners[ev]) {\n      ret = fn(code, signal) === true || ret\n    }\n    if (ev === 'exit') {\n      ret = this.emit('afterExit', code, signal) || ret\n    }\n    return ret\n  }\n}\n\nabstract class SignalExitBase {\n  abstract onExit(cb: Handler, opts?: { alwaysLast?: boolean }): () => void\n  abstract load(): void\n  abstract unload(): void\n}\n\nconst signalExitWrap = <T extends SignalExitBase>(handler: T) => {\n  return {\n    onExit(cb: Handler, opts?: { alwaysLast?: boolean }) {\n      return handler.onExit(cb, opts)\n    },\n    load() {\n      return handler.load()\n    },\n    unload() {\n      return handler.unload()\n    },\n  }\n}\n\nclass SignalExitFallback extends SignalExitBase {\n  onExit() {\n    return () => {}\n  }\n  load() {}\n  unload() {}\n}\n\nclass SignalExit extends SignalExitBase {\n  // \"SIGHUP\" throws an `ENOSYS` error on Windows,\n  // so use a supported signal instead\n  /* c8 ignore start */\n  #hupSig = process.platform === 'win32' ? 'SIGINT' : 'SIGHUP'\n  /* c8 ignore stop */\n  #emitter = new Emitter()\n  #process: ProcessRE\n  #originalProcessEmit: ProcessRE['emit']\n  #originalProcessReallyExit: ProcessRE['reallyExit']\n\n  #sigListeners: { [k in NodeJS.Signals]?: () => void } = {}\n  #loaded: boolean = false\n\n  constructor(process: ProcessRE) {\n    super()\n    this.#process = process\n    // { <signal>: <listener fn>, ... }\n    this.#sigListeners = {}\n    for (const sig of signals) {\n      this.#sigListeners[sig] = () => {\n        // If there are no other listeners, an exit is coming!\n        // Simplest way: remove us and then re-send the signal.\n        // We know that this will kill the process, so we can\n        // safely emit now.\n        const listeners = this.#process.listeners(sig)\n        let { count } = this.#emitter\n        // This is a workaround for the fact that signal-exit v3 and signal\n        // exit v4 are not aware of each other, and each will attempt to let\n        // the other handle it, so neither of them do. To correct this, we\n        // detect if we're the only handler *except* for previous versions\n        // of signal-exit, and increment by the count of listeners it has\n        // created.\n        /* c8 ignore start */\n        const p = process as unknown as {\n          __signal_exit_emitter__?: { count: number }\n        }\n        if (\n          typeof p.__signal_exit_emitter__ === 'object' &&\n          typeof p.__signal_exit_emitter__.count === 'number'\n        ) {\n          count += p.__signal_exit_emitter__.count\n        }\n        /* c8 ignore stop */\n        if (listeners.length === count) {\n          this.unload()\n          const ret = this.#emitter.emit('exit', null, sig)\n          /* c8 ignore start */\n          const s = sig === 'SIGHUP' ? this.#hupSig : sig\n          if (!ret) process.kill(process.pid, s)\n          /* c8 ignore stop */\n        }\n      }\n    }\n\n    this.#originalProcessReallyExit = process.reallyExit\n    this.#originalProcessEmit = process.emit\n  }\n\n  onExit(cb: Handler, opts?: { alwaysLast?: boolean }) {\n    /* c8 ignore start */\n    if (!processOk(this.#process)) {\n      return () => {}\n    }\n    /* c8 ignore stop */\n\n    if (this.#loaded === false) {\n      this.load()\n    }\n\n    const ev = opts?.alwaysLast ? 'afterExit' : 'exit'\n    this.#emitter.on(ev, cb)\n    return () => {\n      this.#emitter.removeListener(ev, cb)\n      if (\n        this.#emitter.listeners['exit'].length === 0 &&\n        this.#emitter.listeners['afterExit'].length === 0\n      ) {\n        this.unload()\n      }\n    }\n  }\n\n  load() {\n    if (this.#loaded) {\n      return\n    }\n    this.#loaded = true\n\n    // This is the number of onSignalExit's that are in play.\n    // It's important so that we can count the correct number of\n    // listeners on signals, and don't wait for the other one to\n    // handle it instead of us.\n    this.#emitter.count += 1\n\n    for (const sig of signals) {\n      try {\n        const fn = this.#sigListeners[sig]\n        if (fn) this.#process.on(sig, fn)\n      } catch (_) {}\n    }\n\n    this.#process.emit = (ev: string, ...a: any[]) => {\n      return this.#processEmit(ev, ...a)\n    }\n    this.#process.reallyExit = (code?: number | null | undefined) => {\n      return this.#processReallyExit(code)\n    }\n  }\n\n  unload() {\n    if (!this.#loaded) {\n      return\n    }\n    this.#loaded = false\n\n    signals.forEach(sig => {\n      const listener = this.#sigListeners[sig]\n      /* c8 ignore start */\n      if (!listener) {\n        throw new Error('Listener not defined for signal: ' + sig)\n      }\n      /* c8 ignore stop */\n      try {\n        this.#process.removeListener(sig, listener)\n        /* c8 ignore start */\n      } catch (_) {}\n      /* c8 ignore stop */\n    })\n    this.#process.emit = this.#originalProcessEmit\n    this.#process.reallyExit = this.#originalProcessReallyExit\n    this.#emitter.count -= 1\n  }\n\n  #processReallyExit(code?: number | null | undefined) {\n    /* c8 ignore start */\n    if (!processOk(this.#process)) {\n      return 0\n    }\n    this.#process.exitCode = code || 0\n    /* c8 ignore stop */\n\n    this.#emitter.emit('exit', this.#process.exitCode, null)\n    return this.#originalProcessReallyExit.call(\n      this.#process,\n      this.#process.exitCode\n    )\n  }\n\n  #processEmit(ev: string, ...args: any[]): any {\n    const og = this.#originalProcessEmit\n    if (ev === 'exit' && processOk(this.#process)) {\n      if (typeof args[0] === 'number') {\n        this.#process.exitCode = args[0]\n        /* c8 ignore start */\n      }\n      /* c8 ignore start */\n      const ret = og.call(this.#process, ev, ...args)\n      /* c8 ignore start */\n      this.#emitter.emit('exit', this.#process.exitCode, null)\n      /* c8 ignore stop */\n      return ret\n    } else {\n      return og.call(this.#process, ev, ...args)\n    }\n  }\n}\n\nconst process = globalThis.process\n// wrap so that we call the method on the actual handler, without\n// exporting it directly.\nexport const {\n  /**\n   * Called when the process is exiting, whether via signal, explicit\n   * exit, or running out of stuff to do.\n   *\n   * If the global process object is not suitable for instrumentation,\n   * then this will be a no-op.\n   *\n   * Returns a function that may be used to unload signal-exit.\n   */\n  onExit,\n\n  /**\n   * Load the listeners.  Likely you never need to call this, unless\n   * doing a rather deep integration with signal-exit functionality.\n   * Mostly exposed for the benefit of testing.\n   *\n   * @internal\n   */\n  load,\n\n  /**\n   * Unload the listeners.  Likely you never need to call this, unless\n   * doing a rather deep integration with signal-exit functionality.\n   * Mostly exposed for the benefit of testing.\n   *\n   * @internal\n   */\n  unload,\n} = signalExitWrap(\n  processOk(process) ? new SignalExit(process) : new SignalExitFallback()\n)\n"]},"url":null,"sourceURL":null},"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/signal-exit/dist/cjs/signals.js":{"lineLengths":[13,62,25,3,47,2,54,54,53,55,28,2,55,54,52,2,54,49,2,56,52,55,36,2,54,50,54,13,3,21,52,35,133,61,14,16,6,1,35,68,1,35],"data":{"version":3,"file":"signals.js","sourceRoot":"","sources":["file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/signal-exit/src/signals.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AACU,QAAA,OAAO,GAAqB,EAAE,CAAA;AAC3C,eAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAA;AAE3C,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,EAAE;IAChC,eAAO,CAAC,IAAI,CACV,SAAS,EACT,SAAS,EACT,WAAW,EACX,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,QAAQ,EACR,SAAS,EACT,QAAQ;IACR,yDAAyD;IACzD,UAAU;IACV,YAAY;KACb,CAAA;CACF;AAED,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,EAAE;IAChC,eAAO,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAA;CACxD","sourcesContent":["/**\n * This is not the set of all possible signals.\n *\n * It IS, however, the set of all signals that trigger\n * an exit on either Linux or BSD systems.  Linux is a\n * superset of the signal names supported on BSD, and\n * the unknown signals just fail to register, so we can\n * catch that easily enough.\n *\n * Windows signals are a different set, since there are\n * signals that terminate Windows processes, but don't\n * terminate (or don't even exist) on Posix systems.\n *\n * Don't bother with SIGKILL.  It's uncatchable, which\n * means that we can't fire any callbacks anyway.\n *\n * If a user does happen to register a handler on a non-\n * fatal signal like SIGWINCH or something, and then\n * exit, it'll end up firing `process.emit('exit')`, so\n * the handler will be fired anyway.\n *\n * SIGBUS, SIGFPE, SIGSEGV and SIGILL, when not raised\n * artificially, inherently leave the process in a\n * state from which it is not safe to try and enter JS\n * listeners.\n */\nexport const signals: NodeJS.Signals[] = []\nsignals.push('SIGHUP', 'SIGINT', 'SIGTERM')\n\nif (process.platform !== 'win32') {\n  signals.push(\n    'SIGALRM',\n    'SIGABRT',\n    'SIGVTALRM',\n    'SIGXCPU',\n    'SIGXFSZ',\n    'SIGUSR2',\n    'SIGTRAP',\n    'SIGSYS',\n    'SIGQUIT',\n    'SIGIOT'\n    // should detect profiler and enable/disable accordingly.\n    // see #21\n    // 'SIGPROF'\n  )\n}\n\nif (process.platform === 'linux') {\n  signals.push('SIGIO', 'SIGPOLL', 'SIGPWR', 'SIGSTKFLT')\n}\n"]},"url":null,"sourceURL":null},"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/foreground-child/dist/cjs/all-signals.js":{"lineLengths":[13,72,62,2,62,28,68,21,74,72,53,22,61,21,62,64,61,32,2,12,13,13,14,16,17,17,17,17,17,17,16,16,16,16,16,16,16,16,14,16,17,17,17,17,17,17,17,16,16,16,16,16,16,16,16,15,15,39],"data":{"version":3,"file":"all-signals.js","sourceRoot":"","sources":["file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/foreground-child/src/all-signals.ts"],"names":[],"mappings":";;;;;;AAAA,oEAAsC;AACzB,QAAA,UAAU;AACrB,0EAA0E;AAC1E,MAAM,CAAC,IAAI,CAAC,wBAAS,CAAC,CAAC,MAAM,CAC3B,CAAC,CAAC,EAAE,CACF,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC;IACnB,iDAAiD;IACjD,CAAC,KAAK,SAAS;IACf,yDAAyD;IACzD,CAAC,KAAK,SAAS,CACE,CAAA;AAEvB,8DAA8D;AAC9D,gEAAgE;AAChE,6DAA6D;AAC7D,gCAAgC;AAChC,EAAE;AACF,YAAY;AACZ,aAAa;AACb,aAAa;AACb,cAAc;AACd,gBAAgB;AAChB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,cAAc;AACd,gBAAgB;AAChB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,eAAe;AACf,eAAe","sourcesContent":["import constants from 'node:constants'\nexport const allSignals =\n  // this is the full list of signals that Node will let us do anything with\n  Object.keys(constants).filter(\n    k =>\n      k.startsWith('SIG') &&\n      // https://github.com/tapjs/signal-exit/issues/21\n      k !== 'SIGPROF' &&\n      // no sense trying to listen for SIGKILL, it's impossible\n      k !== 'SIGKILL'\n  ) as NodeJS.Signals[]\n\n// These are some obscure signals that are reported by kill -l\n// on macOS, Linux, or Windows, but which don't have any mapping\n// in Node.js. No sense trying if they're just going to throw\n// every time on every platform.\n//\n// 'SIGEMT',\n// 'SIGLOST',\n// 'SIGPOLL',\n// 'SIGRTMAX',\n// 'SIGRTMAX-1',\n// 'SIGRTMAX-10',\n// 'SIGRTMAX-11',\n// 'SIGRTMAX-12',\n// 'SIGRTMAX-13',\n// 'SIGRTMAX-14',\n// 'SIGRTMAX-15',\n// 'SIGRTMAX-2',\n// 'SIGRTMAX-3',\n// 'SIGRTMAX-4',\n// 'SIGRTMAX-5',\n// 'SIGRTMAX-6',\n// 'SIGRTMAX-7',\n// 'SIGRTMAX-8',\n// 'SIGRTMAX-9',\n// 'SIGRTMIN',\n// 'SIGRTMIN+1',\n// 'SIGRTMIN+10',\n// 'SIGRTMIN+11',\n// 'SIGRTMIN+12',\n// 'SIGRTMIN+13',\n// 'SIGRTMIN+14',\n// 'SIGRTMIN+15',\n// 'SIGRTMIN+16',\n// 'SIGRTMIN+2',\n// 'SIGRTMIN+3',\n// 'SIGRTMIN+4',\n// 'SIGRTMIN+5',\n// 'SIGRTMIN+6',\n// 'SIGRTMIN+7',\n// 'SIGRTMIN+8',\n// 'SIGRTMIN+9',\n// 'SIGSTKFLT',\n// 'SIGUNUSED',\n"]},"url":null,"sourceURL":null},"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/foreground-child/dist/cjs/watchdog.js":{"lineLengths":[13,63,64,39,62,26,49,33,41,66,18,20,14,47,22,27,22,17,42,22,11,36,45,20,11,4,28,1,2,29,26,103,24,7,45,28,23,32,7,15,2,28,36],"data":{"version":3,"file":"watchdog.js","sourceRoot":"","sources":["file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/foreground-child/src/watchdog.ts"],"names":[],"mappings":";AAAA,+DAA+D;AAC/D,gEAAgE;AAChE,uCAAuC;;;AAEvC,iDAAmD;AAEnD,MAAM,YAAY,GAAG,MAAM,CAAC,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;CAqB9B,CAAA;AAEM,MAAM,QAAQ,GAAG,CAAC,KAAmB,EAAE,EAAE;IAC9C,IAAI,SAAS,GAAG,KAAK,CAAA;IACrB,MAAM,GAAG,GAAG,IAAA,qBAAK,EACf,OAAO,CAAC,QAAQ,EAChB,CAAC,IAAI,EAAE,YAAY,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EACvC;QACE,KAAK,EAAE,QAAQ;KAChB,CACF,CAAA;IACD,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAA;IACxC,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE;QACpB,IAAI,CAAC,SAAS;YAAE,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;IACrC,CAAC,CAAC,CAAA;IACF,OAAO,GAAG,CAAA;AACZ,CAAC,CAAA;AAdY,QAAA,QAAQ,YAcpB","sourcesContent":["// this spawns a child process that listens for SIGHUP when the\n// parent process exits, and after 200ms, sends a SIGKILL to the\n// child, in case it did not terminate.\n\nimport { ChildProcess, spawn } from 'child_process'\n\nconst watchdogCode = String.raw`\nconst pid = parseInt(process.argv[1], 10)\nprocess.title = 'node (foreground-child watchdog pid=' + pid + ')'\nif (!isNaN(pid)) {\n  let barked = false\n  // keepalive\n  const interval = setInterval(() => {}, 60000)\n  const bark = () => {\n    clearInterval(interval)\n    if (barked) return\n    barked = true\n    process.removeListener('SIGHUP', bark)\n    setTimeout(() => {\n      try {\n        process.kill(pid, 'SIGKILL')\n        setTimeout(() => process.exit(), 200)\n      } catch (_) {}\n    }, 500)\n  })\n  process.on('SIGHUP', bark)\n}\n`\n\nexport const watchdog = (child: ChildProcess) => {\n  let dogExited = false\n  const dog = spawn(\n    process.execPath,\n    ['-e', watchdogCode, String(child.pid)],\n    {\n      stdio: 'ignore',\n    }\n  )\n  dog.on('exit', () => (dogExited = true))\n  child.on('exit', () => {\n    if (!dogExited) dog.kill('SIGTERM')\n  })\n  return dog\n}\n"]},"url":null,"sourceURL":null},"file:///home/gcadoret/www/lcov-reporter/node_modules/jackspeak/dist/cjs/index.js":{"lineLengths":[13,72,62,2,62,85,41,51,50,12,58,41,88,40,34,33,53,18,15,22,28,2,43,41,15,36,19,21,21,39,31,38,27,48,36,43,34,34,94,5,24,15,2,67,9,63,12,23,13,28,25,27,52,58,36,64,52,46,14,28,19,31,22,30,74,55,84,42,16,30,25,61,5,25,21,29,2,49,28,40,22,37,43,36,42,72,27,40,22,55,67,53,5,24,13,20,12,16,21,17,23,24,6,1,26,55,66,53,5,24,13,20,12,16,21,17,23,23,6,1,22,55,67,53,5,24,13,20,12,16,21,17,23,24,6,1,26,55,66,53,5,24,13,20,12,16,21,17,23,23,6,1,23,61,68,53,5,24,13,20,29,60,5,12,16,21,17,24,24,6,1,27,61,67,53,5,24,13,20,29,65,5,12,16,21,17,24,23,6,1,47,17,39,43,66,29,31,31,61,14,9,72,29,31,32,53,31,45,14,9,14,32,29,32,40,38,14,9,47,47,9,40,44,43,37,32,42,14,9,5,13,2,46,54,3,68,59,3,12,15,12,13,17,9,15,22,11,19,31,32,68,19,78,44,79,80,63,46,43,5,7,75,71,76,15,7,42,13,34,9,20,62,9,62,46,31,9,20,5,7,60,40,6,76,71,34,6,77,31,7,32,36,67,9,30,72,60,42,40,83,17,13,9,66,55,17,20,53,26,53,25,11,19,23,28,10,44,46,48,53,71,29,17,13,47,38,51,59,69,55,30,49,31,91,38,43,21,17,55,26,75,82,81,49,17,42,52,52,107,25,37,21,26,52,118,25,51,48,25,30,49,50,96,82,29,25,21,17,34,40,58,47,17,22,40,43,17,13,9,67,66,28,44,13,9,64,58,41,99,13,9,26,17,5,7,71,20,7,32,61,19,46,63,38,55,83,9,5,7,75,66,7,17,42,61,9,32,46,50,26,67,13,74,132,26,36,19,13,64,82,13,9,5,18,43,19,64,46,84,9,5,7,47,7,48,34,65,9,65,20,5,7,72,7,37,62,20,5,7,37,7,17,44,5,7,46,7,21,48,5,7,44,7,17,44,5,7,53,7,21,48,5,7,35,7,18,45,5,7,44,7,22,49,5,7,76,78,65,7,23,26,61,44,31,31,21,29,15,9,47,20,5,28,26,105,44,37,31,31,21,30,15,34,13,20,5,32,69,66,60,9,36,67,9,33,76,52,9,26,53,86,62,13,44,86,71,13,45,38,9,5,7,58,7,13,24,31,29,51,38,54,40,20,38,44,15,9,58,34,20,42,38,15,9,14,67,34,30,29,28,76,35,50,54,24,74,17,22,50,42,24,65,17,13,75,73,58,71,62,20,28,38,15,9,52,46,39,67,20,59,56,9,58,71,24,33,27,56,68,71,53,81,77,17,22,28,39,57,40,66,17,35,64,17,13,18,37,42,41,57,35,49,74,17,22,85,17,13,9,45,5,7,67,7,21,32,39,23,29,38,54,40,58,9,27,34,67,9,14,67,34,30,29,28,76,35,50,54,24,74,17,22,50,42,24,65,17,13,75,73,58,71,62,53,9,46,39,71,20,9,48,65,33,27,55,25,54,29,58,13,38,38,37,95,13,18,65,13,9,63,5,23,76,61,71,25,29,24,56,42,44,41,33,64,33,25,13,36,49,75,74,58,38,40,25,45,36,37,38,20,42,40,50,49,43,54,55,47,36,13,45,37,23,40,49,31,13,27,9,34,5,7,57,7,14,89,18,13,31,60,59,59,35,65,26,68,79,14,12,5,7,40,7,46,74,5,1,20,51,52,41,63,9,24,35,23,7,54,110,40,50,37,35,51,35,16,66,47,55,14,55,42,2,46,31,37,16,32,2,3,61,3,49,20,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///home/gcadoret/www/lcov-reporter/node_modules/jackspeak/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["export type ConfigType = 'number' | 'string' | 'boolean'\n\n/**\n * Given a Jack object, get the typeof its ConfigSet\n */\nexport type Unwrap<J> = J extends Jack<infer C> ? C : never\n\nimport { inspect, InspectOptions, ParseArgsConfig } from 'node:util'\nimport { parseArgs } from './parse-args.js'\n\n// it's a tiny API, just cast it inline, it's fine\n//@ts-ignore\nimport cliui from '@isaacs/cliui'\nimport { basename } from 'node:path'\n\nconst width = Math.min(\n  (process && process.stdout && process.stdout.columns) || 80,\n  80\n)\n\n// indentation spaces from heading level\nconst indent = (n: number) => (n - 1) * 2\n\nconst toEnvKey = (pref: string, key: string): string => {\n  return [pref, key.replace(/[^a-zA-Z0-9]+/g, ' ')]\n    .join(' ')\n    .trim()\n    .toUpperCase()\n    .replace(/ /g, '_')\n}\n\nconst toEnvVal = (\n  value: string | boolean | number | string[] | boolean[] | number[],\n  delim: string = '\\n'\n): string => {\n  const str =\n    typeof value === 'string'\n      ? value\n      : typeof value === 'boolean'\n      ? value\n        ? '1'\n        : '0'\n      : typeof value === 'number'\n      ? String(value)\n      : Array.isArray(value)\n      ? value\n          .map((v: string | number | boolean) => toEnvVal(v))\n          .join(delim)\n      : /* c8 ignore start */\n        undefined\n  if (typeof str !== 'string') {\n    throw new Error(\n      `could not serialize value to environment: ${JSON.stringify(value)}`\n    )\n  }\n  /* c8 ignore stop */\n  return str\n}\n\nconst fromEnvVal = <T extends ConfigType, M extends boolean>(\n  env: string,\n  type: T,\n  multiple: M,\n  delim: string = '\\n'\n): ValidValue<T, M> =>\n  (multiple\n    ? env\n      ? env.split(delim).map(v => fromEnvVal(v, type, false))\n      : []\n    : type === 'string'\n    ? env\n    : type === 'boolean'\n    ? env === '1'\n    : +env.trim()) as ValidValue<T, M>\n\n/**\n * Defines the type of value that is valid, given a config definition's\n * {@link ConfigType} and boolean multiple setting\n */\nexport type ValidValue<T extends ConfigType, M extends boolean> = [\n  T,\n  M\n] extends ['number', true]\n  ? number[]\n  : [T, M] extends ['string', true]\n  ? string[]\n  : [T, M] extends ['boolean', true]\n  ? boolean[]\n  : [T, M] extends ['number', false]\n  ? number\n  : [T, M] extends ['string', false]\n  ? string\n  : [T, M] extends ['boolean', false]\n  ? boolean\n  : [T, M] extends ['string', boolean]\n  ? string | string[]\n  : [T, M] extends ['boolean', boolean]\n  ? boolean | boolean[]\n  : [T, M] extends ['number', boolean]\n  ? number | number[]\n  : [T, M] extends [ConfigType, false]\n  ? string | number | boolean\n  : [T, M] extends [ConfigType, true]\n  ? string[] | number[] | boolean[]\n  : string | number | boolean | string[] | number[] | boolean[]\n\n/**\n * The meta information for a config option definition, when the\n * type and multiple values can be inferred by the method being used\n */\nexport type ConfigOptionMeta<T extends ConfigType, M extends boolean> = {\n  default?: ValidValue<T, M> | undefined\n  description?: string\n  validate?: ((v: any) => v is ValidValue<T, M>) | ((v: any) => boolean)\n  short?: string | undefined\n  type?: T\n} & (T extends 'boolean' ? {} : { hint?: string | undefined }) &\n  (M extends false\n    ? {}\n    : { multiple?: M | undefined; delim?: string | undefined })\n\n/**\n * A set of {@link ConfigOptionMeta} fields, referenced by their longOption\n * string values.\n */\nexport type ConfigMetaSet<T extends ConfigType, M extends boolean> = {\n  [longOption: string]: ConfigOptionMeta<T, M>\n}\n\n/**\n * Infer {@link ConfigSet} fields from a given {@link ConfigMetaSet}\n */\nexport type ConfigSetFromMetaSet<\n  T extends ConfigType,\n  M extends boolean,\n  S extends ConfigMetaSet<T, M>\n> = {\n  [longOption in keyof S]: ConfigOptionBase<T, M>\n}\n\n/**\n * Fields that can be set on a {@link ConfigOptionBase} or\n * {@link ConfigOptionMeta} based on whether or not the field is known to be\n * multiple.\n */\nexport type MultiType<M extends boolean> = M extends true\n  ? {\n      multiple: true\n      delim?: string | undefined\n    }\n  : M extends false\n  ? {\n      multiple?: false | undefined\n      delim?: undefined\n    }\n  : {\n      multiple?: boolean | undefined\n      delim?: string | undefined\n    }\n\n/**\n * A config field definition, in its full representation.\n */\nexport type ConfigOptionBase<T extends ConfigType, M extends boolean> = {\n  type: T\n  short?: string | undefined\n  default?: ValidValue<T, M> | undefined\n  description?: string\n  hint?: T extends 'boolean' ? undefined : string | undefined\n  validate?: (v: any) => v is ValidValue<T, M>\n} & MultiType<M>\n\nexport const isConfigType = (t: string): t is ConfigType =>\n  typeof t === 'string' &&\n  (t === 'string' || t === 'number' || t === 'boolean')\n\nconst undefOrType = (v: any, t: string): boolean =>\n  v === undefined || typeof v === t\n\n// print the value type, for error message reporting\nconst valueType = (\n  v:\n    | string\n    | number\n    | boolean\n    | string[]\n    | number[]\n    | boolean[]\n    | { type: ConfigType; multiple?: boolean }\n): string =>\n  typeof v === 'string'\n    ? 'string'\n    : typeof v === 'boolean'\n    ? 'boolean'\n    : typeof v === 'number'\n    ? 'number'\n    : Array.isArray(v)\n    ? joinTypes([...new Set(v.map(v => valueType(v)))]) + '[]'\n    : `${v.type}${v.multiple ? '[]' : ''}`\n\nconst joinTypes = (types: string[]): string =>\n  types.length === 1 ? types[0] : `(${types.join('|')})`\n\nconst isValidValue = <T extends ConfigType, M extends boolean>(\n  v: any,\n  type: T,\n  multi: M\n): v is ValidValue<T, M> => {\n  if (multi) {\n    if (!Array.isArray(v)) return false\n    return !v.some((v: any) => !isValidValue(v, type, false))\n  }\n  if (Array.isArray(v)) return false\n  return typeof v === type\n}\n\nexport const isConfigOption = <T extends ConfigType, M extends boolean>(\n  o: any,\n  type: T,\n  multi: M\n): o is ConfigOptionBase<T, M> =>\n  !!o &&\n  typeof o === 'object' &&\n  isConfigType(o.type) &&\n  o.type === type &&\n  undefOrType(o.short, 'string') &&\n  undefOrType(o.description, 'string') &&\n  undefOrType(o.hint, 'string') &&\n  undefOrType(o.validate, 'function') &&\n  (o.default === undefined || isValidValue(o.default, type, multi)) &&\n  !!o.multiple === multi\n\n/**\n * A set of {@link ConfigOptionBase} objects, referenced by their longOption\n * string values.\n */\nexport type ConfigSet = {\n  [longOption: string]: ConfigOptionBase<ConfigType, boolean>\n}\n\n/**\n * The 'values' field returned by {@link Jack#parse}\n */\nexport type OptionsResults<T extends ConfigSet> = {\n  [k in keyof T]?: T[k] extends ConfigOptionBase<'string', false>\n    ? string\n    : T[k] extends ConfigOptionBase<'string', true>\n    ? string[]\n    : T[k] extends ConfigOptionBase<'number', false>\n    ? number\n    : T[k] extends ConfigOptionBase<'number', true>\n    ? number[]\n    : T[k] extends ConfigOptionBase<'boolean', false>\n    ? boolean\n    : T[k] extends ConfigOptionBase<'boolean', true>\n    ? boolean[]\n    : never\n}\n\n/**\n * The object retured by {@link Jack#parse}\n */\nexport type Parsed<T extends ConfigSet> = {\n  values: OptionsResults<T>\n  positionals: string[]\n}\n\nfunction num(\n  o: ConfigOptionMeta<'number', false> = {}\n): ConfigOptionBase<'number', false> {\n  const { default: def, validate: val, ...rest } = o\n  if (def !== undefined && !isValidValue(def, 'number', false)) {\n    throw new TypeError('invalid default value')\n  }\n  const validate = val\n    ? (val as (v: any) => v is ValidValue<'number', false>)\n    : undefined\n  return {\n    ...rest,\n    default: def,\n    validate,\n    type: 'number',\n    multiple: false,\n  }\n}\n\nfunction numList(\n  o: ConfigOptionMeta<'number', true> = {}\n): ConfigOptionBase<'number', true> {\n  const { default: def, validate: val, ...rest } = o\n  if (def !== undefined && !isValidValue(def, 'number', true)) {\n    throw new TypeError('invalid default value')\n  }\n  const validate = val\n    ? (val as (v: any) => v is ValidValue<'number', true>)\n    : undefined\n  return {\n    ...rest,\n    default: def,\n    validate,\n    type: 'number',\n    multiple: true,\n  }\n}\n\nfunction opt(\n  o: ConfigOptionMeta<'string', false> = {}\n): ConfigOptionBase<'string', false> {\n  const { default: def, validate: val, ...rest } = o\n  if (def !== undefined && !isValidValue(def, 'string', false)) {\n    throw new TypeError('invalid default value')\n  }\n  const validate = val\n    ? (val as (v: any) => v is ValidValue<'string', false>)\n    : undefined\n  return {\n    ...rest,\n    default: def,\n    validate,\n    type: 'string',\n    multiple: false,\n  }\n}\n\nfunction optList(\n  o: ConfigOptionMeta<'string', true> = {}\n): ConfigOptionBase<'string', true> {\n  const { default: def, validate: val, ...rest } = o\n  if (def !== undefined && !isValidValue(def, 'string', true)) {\n    throw new TypeError('invalid default value')\n  }\n  const validate = val\n    ? (val as (v: any) => v is ValidValue<'string', true>)\n    : undefined\n  return {\n    ...rest,\n    default: def,\n    validate,\n    type: 'string',\n    multiple: true,\n  }\n}\n\nfunction flag(\n  o: ConfigOptionMeta<'boolean', false> = {}\n): ConfigOptionBase<'boolean', false> {\n  const {\n    hint,\n    default: def,\n    validate: val,\n    ...rest\n  } = o as ConfigOptionMeta<'boolean', false> & { hint: any }\n  if (def !== undefined && !isValidValue(def, 'boolean', false)) {\n    throw new TypeError('invalid default value')\n  }\n  const validate = val\n    ? (val as (v: any) => v is ValidValue<'boolean', false>)\n    : undefined\n  if (hint !== undefined) {\n    throw new TypeError('cannot provide hint for flag')\n  }\n  return {\n    ...rest,\n    default: def,\n    validate,\n    type: 'boolean',\n    multiple: false,\n  }\n}\n\nfunction flagList(\n  o: ConfigOptionMeta<'boolean', true> = {}\n): ConfigOptionBase<'boolean', true> {\n  const {\n    hint,\n    default: def,\n    validate: val,\n    ...rest\n  } = o as ConfigOptionMeta<'boolean', false> & { hint: any }\n  if (def !== undefined && !isValidValue(def, 'boolean', true)) {\n    throw new TypeError('invalid default value')\n  }\n  const validate = val\n    ? (val as (v: any) => v is ValidValue<'boolean', true>)\n    : undefined\n  if (hint !== undefined) {\n    throw new TypeError('cannot provide hint for flag list')\n  }\n  return {\n    ...rest,\n    default: def,\n    validate,\n    type: 'boolean',\n    multiple: true,\n  }\n}\nconst toParseArgsOptionsConfig = (\n  options: ConfigSet\n): Exclude<ParseArgsConfig['options'], undefined> => {\n  const c: Exclude<ParseArgsConfig['options'], undefined> = {}\n  for (const longOption in options) {\n    const config = options[longOption]\n    if (isConfigOption(config, 'number', true)) {\n      c[longOption] = {\n        type: 'string',\n        multiple: true,\n        default: config.default?.map(c => String(c)),\n      }\n    } else if (isConfigOption(config, 'number', false)) {\n      c[longOption] = {\n        type: 'string',\n        multiple: false,\n        default:\n          config.default === undefined\n            ? undefined\n            : String(config.default),\n      }\n    } else {\n      const conf = config as\n        | ConfigOptionBase<'string', boolean>\n        | ConfigOptionBase<'boolean', boolean>\n      c[longOption] = {\n        type: conf.type,\n        multiple: conf.multiple,\n        default: conf.default,\n      }\n    }\n    if (typeof config.short === 'string') {\n      c[longOption].short = config.short\n    }\n\n    if (\n      config.type === 'boolean' &&\n      !longOption.startsWith('no-') &&\n      !options[`no-${longOption}`]\n    ) {\n      c[`no-${longOption}`] = {\n        type: 'boolean',\n        multiple: config.multiple,\n      }\n    }\n  }\n  return c\n}\n\n/**\n * A row used when generating the {@link Jack#usage} string\n */\nexport interface Row {\n  left?: string\n  text: string\n  skipLine?: boolean\n  type?: string\n}\n\n/**\n * A heading for a section in the usage, created by the jack.heading()\n * method.\n *\n * First heading is always level 1, subsequent headings default to 2.\n *\n * The level of the nearest heading level sets the indentation of the\n * description that follows.\n */\nexport interface Heading extends Row {\n  type: 'heading'\n  text: string\n  left?: ''\n  skipLine?: boolean\n  level: number\n  pre?: boolean\n}\nconst isHeading = (r: { type?: string }): r is Heading =>\n  r.type === 'heading'\n\n/**\n * An arbitrary blob of text describing some stuff, set by the\n * jack.description() method.\n *\n * Indentation determined by level of the nearest header.\n */\nexport interface Description extends Row {\n  type: 'description'\n  text: string\n  left?: ''\n  skipLine?: boolean\n  pre?: boolean\n}\n\nconst isDescription = (r: { type?: string }): r is Description =>\n  r.type === 'description'\n\n/**\n * A heading or description row used when generating the {@link Jack#usage}\n * string\n */\nexport type TextRow = Heading | Description\n\n/**\n * Either a {@link TextRow} or a reference to a {@link ConfigOptionBase}\n */\nexport type UsageField =\n  | TextRow\n  | {\n      type: 'config'\n      name: string\n      value: ConfigOptionBase<ConfigType, boolean>\n    }\n\n/**\n * Options provided to the {@link Jack} constructor\n */\nexport interface JackOptions {\n  /**\n   * Whether to allow positional arguments\n   *\n   * @default true\n   */\n  allowPositionals?: boolean\n\n  /**\n   * Prefix to use when reading/writing the environment variables\n   *\n   * If not specified, environment behavior will not be available.\n   */\n  envPrefix?: string\n\n  /**\n   * Environment object to read/write. Defaults `process.env`.\n   * No effect if `envPrefix` is not set.\n   */\n  env?: { [k: string]: string | undefined }\n\n  /**\n   * A short usage string. If not provided, will be generated from the\n   * options provided, but that can of course be rather verbose if\n   * there are a lot of options.\n   */\n  usage?: string\n\n  /**\n   * Stop parsing flags and opts at the first positional argument.\n   * This is to support cases like `cmd [flags] <subcmd> [options]`, where\n   * each subcommand may have different options.  This effectively treats\n   * any positional as a `--` argument.  Only relevant if `allowPositionals`\n   * is true.\n   *\n   * To do subcommands, set this option, look at the first positional, and\n   * parse the remaining positionals as appropriate.\n   *\n   * @default false\n   */\n  stopAtPositional?: boolean\n}\n\n/**\n * Class returned by the {@link jack} function and all configuration\n * definition methods.  This is what gets chained together.\n */\nexport class Jack<C extends ConfigSet = {}> {\n  #configSet: C\n  #shorts: { [k: string]: string }\n  #options: JackOptions\n  #fields: UsageField[] = []\n  #env: { [k: string]: string | undefined }\n  #envPrefix?: string\n  #allowPositionals: boolean\n  #usage?: string\n  #usageMarkdown?: string\n\n  constructor(options: JackOptions = {}) {\n    this.#options = options\n    this.#allowPositionals = options.allowPositionals !== false\n    this.#env =\n      this.#options.env === undefined ? process.env : this.#options.env\n    this.#envPrefix = options.envPrefix\n    // We need to fib a little, because it's always the same object, but it\n    // starts out as having an empty config set.  Then each method that adds\n    // fields returns `this as Jack<C & { ...newConfigs }>`\n    this.#configSet = Object.create(null) as C\n    this.#shorts = Object.create(null)\n  }\n\n  /**\n   * Set the default value (which will still be overridden by env or cli)\n   * as if from a parsed config file. The optional `source` param, if\n   * provided, will be included in error messages if a value is invalid or\n   * unknown.\n   */\n  setConfigValues(values: OptionsResults<C>, source = '') {\n    try {\n      this.validate(values)\n    } catch (er) {\n      throw Object.assign(er as Error, source ? { source } : {})\n    }\n    for (const [field, value] of Object.entries(values)) {\n      const my = this.#configSet[field]\n      my.default = value\n    }\n    return this\n  }\n\n  /**\n   * Parse a string of arguments, and return the resulting\n   * `{ values, positionals }` object.\n   *\n   * If an {@link JackOptions#envPrefix} is set, then it will read default\n   * values from the environment, and write the resulting values back\n   * to the environment as well.\n   *\n   * Environment values always take precedence over any other value, except\n   * an explicit CLI setting.\n   */\n  parse(args: string[] = process.argv): Parsed<C> {\n    if (args === process.argv) {\n      args = args.slice(\n        (process as { _eval?: string })._eval !== undefined ? 1 : 2\n      )\n    }\n    if (this.#envPrefix) {\n      for (const [field, my] of Object.entries(this.#configSet)) {\n        const ek = toEnvKey(this.#envPrefix, field)\n        const env = this.#env[ek]\n        if (env !== undefined) {\n          my.default = fromEnvVal(env, my.type, !!my.multiple, my.delim)\n        }\n      }\n    }\n\n    const options = toParseArgsOptionsConfig(this.#configSet)\n    const result = parseArgs({\n      args,\n      options,\n      // always strict, but using our own logic\n      strict: false,\n      allowPositionals: this.#allowPositionals,\n      tokens: true,\n    })\n\n    const p: Parsed<C> = {\n      values: {},\n      positionals: [],\n    }\n    for (const token of result.tokens) {\n      if (token.kind === 'positional') {\n        p.positionals.push(token.value)\n        if (this.#options.stopAtPositional) {\n          p.positionals.push(...args.slice(token.index + 1))\n          return p\n        }\n      } else if (token.kind === 'option') {\n        let value: string | number | boolean | undefined = undefined\n        if (token.name.startsWith('no-')) {\n          const my = this.#configSet[token.name]\n          const pname = token.name.substring('no-'.length)\n          const pos = this.#configSet[pname]\n          if (\n            pos &&\n            pos.type === 'boolean' &&\n            (!my ||\n              (my.type === 'boolean' && !!my.multiple === !!pos.multiple))\n          ) {\n            value = false\n            token.name = pname\n          }\n        }\n        const my = this.#configSet[token.name]\n        if (!my) {\n          throw new Error(\n            `Unknown option '${token.rawName}'. ` +\n              `To specify a positional argument starting with a '-', ` +\n              `place it at the end of the command after '--', as in ` +\n              `'-- ${token.rawName}'`\n          )\n        }\n        if (value === undefined) {\n          if (token.value === undefined) {\n            if (my.type !== 'boolean') {\n              throw new Error(\n                `No value provided for ${token.rawName}, expected ${my.type}`\n              )\n            }\n            value = true\n          } else {\n            if (my.type === 'boolean') {\n              throw new Error(\n                `Flag ${token.rawName} does not take a value, received '${token.value}'`\n              )\n            }\n            if (my.type === 'string') {\n              value = token.value\n            } else {\n              value = +token.value\n              if (value !== value) {\n                throw new Error(\n                  `Invalid value '${token.value}' provided for ` +\n                    `'${token.rawName}' option, expected number`\n                )\n              }\n            }\n          }\n        }\n        if (my.multiple) {\n          const pv = p.values as {\n            [k: string]: (string | number | boolean)[]\n          }\n          pv[token.name] = pv[token.name] ?? []\n          pv[token.name].push(value)\n        } else {\n          const pv = p.values as { [k: string]: string | number | boolean }\n          pv[token.name] = value\n        }\n      }\n    }\n\n    for (const [field, c] of Object.entries(this.#configSet)) {\n      if (c.default !== undefined && !(field in p.values)) {\n        //@ts-ignore\n        p.values[field] = c.default\n      }\n    }\n\n    for (const [field, value] of Object.entries(p.values)) {\n      const valid = this.#configSet[field].validate\n      if (valid && !valid(value)) {\n        throw new Error(\n          `Invalid value provided for --${field}: ${JSON.stringify(value)}`\n        )\n      }\n    }\n\n    this.#writeEnv(p)\n\n    return p\n  }\n\n  /**\n   * do not set fields as 'no-foo' if 'foo' exists and both are bools\n   * just set foo.\n   */\n  #noNoFields(f: string, val: any, s: string = f) {\n    if (!f.startsWith('no-') || typeof val !== 'boolean') return\n    const yes = f.substring('no-'.length)\n    // recurse so we get the core config key we care about.\n    this.#noNoFields(yes, val, s)\n    if (this.#configSet[yes]?.type === 'boolean') {\n      throw new Error(`do not set '${s}', instead set '${yes}' as desired.`)\n    }\n  }\n\n  /**\n   * Validate that any arbitrary object is a valid configuration `values`\n   * object.  Useful when loading config files or other sources.\n   */\n  validate(o: any): asserts o is Parsed<C>['values'] {\n    if (!o || typeof o !== 'object') {\n      throw new Error('Invalid config: not an object')\n    }\n    for (const field in o) {\n      this.#noNoFields(field, o[field])\n      const config = this.#configSet[field]\n      if (!config) {\n        throw new Error(`Unknown config option: ${field}`)\n      }\n      if (!isValidValue(o[field], config.type, !!config.multiple)) {\n        throw Object.assign(\n          new Error(\n            `Invalid value ${valueType(\n              o[field]\n            )} for ${field}, expected ${valueType(config)}`\n          ),\n          {\n            field,\n            value: o[field],\n          }\n        )\n      }\n      if (config.validate && !config.validate(o[field])) {\n        throw new Error(`Invalid config value for ${field}: ${o[field]}`)\n      }\n    }\n  }\n\n  #writeEnv(p: Parsed<C>) {\n    if (!this.#env || !this.#envPrefix) return\n    for (const [field, value] of Object.entries(p.values)) {\n      const my = this.#configSet[field]\n      this.#env[toEnvKey(this.#envPrefix, field)] = toEnvVal(\n        value,\n        my.delim\n      )\n    }\n  }\n\n  /**\n   * Add a heading to the usage output banner\n   */\n  heading(\n    text: string,\n    level?: 1 | 2 | 3 | 4 | 5 | 6,\n    { pre = false }: { pre?: boolean } = {}\n  ): Jack<C> {\n    if (level === undefined) {\n      level = this.#fields.some(r => isHeading(r)) ? 2 : 1\n    }\n    this.#fields.push({ type: 'heading', text, level, pre })\n    return this\n  }\n\n  /**\n   * Add a long-form description to the usage output at this position.\n   */\n  description(text: string, { pre }: { pre?: boolean } = {}): Jack<C> {\n    this.#fields.push({ type: 'description', text, pre })\n    return this\n  }\n\n  /**\n   * Add one or more number fields.\n   */\n  num<F extends ConfigMetaSet<'number', false>>(\n    fields: F\n  ): Jack<C & ConfigSetFromMetaSet<'number', false, F>> {\n    return this.#addFields(fields, num)\n  }\n\n  /**\n   * Add one or more multiple number fields.\n   */\n  numList<F extends ConfigMetaSet<'number', true>>(\n    fields: F\n  ): Jack<C & ConfigSetFromMetaSet<'number', true, F>> {\n    return this.#addFields(fields, numList)\n  }\n\n  /**\n   * Add one or more string option fields.\n   */\n  opt<F extends ConfigMetaSet<'string', false>>(\n    fields: F\n  ): Jack<C & ConfigSetFromMetaSet<'string', false, F>> {\n    return this.#addFields(fields, opt)\n  }\n\n  /**\n   * Add one or more multiple string option fields.\n   */\n  optList<F extends ConfigMetaSet<'string', true>>(\n    fields: F\n  ): Jack<C & ConfigSetFromMetaSet<'string', true, F>> {\n    return this.#addFields(fields, optList)\n  }\n\n  /**\n   * Add one or more flag fields.\n   */\n  flag<F extends ConfigMetaSet<'boolean', false>>(\n    fields: F\n  ): Jack<C & ConfigSetFromMetaSet<'boolean', false, F>> {\n    return this.#addFields(fields, flag)\n  }\n\n  /**\n   * Add one or more multiple flag fields.\n   */\n  flagList<F extends ConfigMetaSet<'boolean', true>>(\n    fields: F\n  ): Jack<C & ConfigSetFromMetaSet<'boolean', true, F>> {\n    return this.#addFields(fields, flagList)\n  }\n\n  /**\n   * Generic field definition method. Similar to flag/flagList/number/etc,\n   * but you must specify the `type` (and optionally `multiple` and `delim`)\n   * fields on each one, or Jack won't know how to define them.\n   */\n  addFields<F extends ConfigSet>(fields: F): Jack<C & F> {\n    const next = this as unknown as Jack<C & F>\n    for (const [name, field] of Object.entries(fields)) {\n      this.#validateName(name, field)\n      next.#fields.push({\n        type: 'config',\n        name,\n        value: field as ConfigOptionBase<ConfigType, boolean>,\n      })\n    }\n    Object.assign(next.#configSet, fields)\n    return next\n  }\n\n  #addFields<\n    T extends ConfigType,\n    M extends boolean,\n    F extends ConfigMetaSet<T, M>\n  >(\n    fields: F,\n    fn: (m: ConfigOptionMeta<T, M>) => ConfigOptionBase<T, M>\n  ): Jack<C & ConfigSetFromMetaSet<T, M, F>> {\n    type NextC = C & ConfigSetFromMetaSet<T, M, F>\n    const next = this as unknown as Jack<NextC>\n    Object.assign(\n      next.#configSet,\n      Object.fromEntries(\n        Object.entries(fields).map(([name, field]) => {\n          this.#validateName(name, field)\n          const option = fn(field)\n          next.#fields.push({\n            type: 'config',\n            name,\n            value: option as ConfigOptionBase<ConfigType, boolean>,\n          })\n          return [name, option]\n        })\n      )\n    )\n    return next\n  }\n\n  #validateName(name: string, field: { short?: string }) {\n    if (!/^[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?$/.test(name)) {\n      throw new TypeError(\n        `Invalid option name: ${name}, ` +\n          `must be '-' delimited ASCII alphanumeric`\n      )\n    }\n    if (this.#configSet[name]) {\n      throw new TypeError(`Cannot redefine option ${field}`)\n    }\n    if (this.#shorts[name]) {\n      throw new TypeError(\n        `Cannot redefine option ${name}, already ` +\n          `in use for ${this.#shorts[name]}`\n      )\n    }\n    if (field.short) {\n      if (!/^[a-zA-Z0-9]$/.test(field.short)) {\n        throw new TypeError(\n          `Invalid ${name} short option: ${field.short}, ` +\n            'must be 1 ASCII alphanumeric character'\n        )\n      }\n      if (this.#shorts[field.short]) {\n        throw new TypeError(\n          `Invalid ${name} short option: ${field.short}, ` +\n            `already in use for ${this.#shorts[field.short]}`\n        )\n      }\n      this.#shorts[field.short] = name\n      this.#shorts[name] = name\n    }\n  }\n\n  /**\n   * Return the usage banner for the given configuration\n   */\n  usage(): string {\n    if (this.#usage) return this.#usage\n\n    let headingLevel = 1\n    const ui = cliui({ width })\n    const first = this.#fields[0]\n    let start = first?.type === 'heading' ? 1 : 0\n    if (first?.type === 'heading') {\n      ui.div({\n        padding: [0, 0, 0, 0],\n        text: normalize(first.text),\n      })\n    }\n    ui.div({ padding: [0, 0, 0, 0], text: 'Usage:' })\n    if (this.#options.usage) {\n      ui.div({\n        text: this.#options.usage,\n        padding: [0, 0, 0, 2],\n      })\n    } else {\n      const cmd = basename(process.argv[1])\n      const shortFlags: string[] = []\n      const shorts: string[][] = []\n      const flags: string[] = []\n      const opts: string[][] = []\n      for (const [field, config] of Object.entries(this.#configSet)) {\n        if (config.short) {\n          if (config.type === 'boolean') shortFlags.push(config.short)\n          else shorts.push([config.short, config.hint || field])\n        } else {\n          if (config.type === 'boolean') flags.push(field)\n          else opts.push([field, config.hint || field])\n        }\n      }\n      const sf = shortFlags.length ? ' -' + shortFlags.join('') : ''\n      const so = shorts.map(([k, v]) => ` --${k}=<${v}>`).join('')\n      const lf = flags.map(k => ` --${k}`).join('')\n      const lo = opts.map(([k, v]) => ` --${k}=<${v}>`).join('')\n      const usage = `${cmd}${sf}${so}${lf}${lo}`.trim()\n      ui.div({\n        text: usage,\n        padding: [0, 0, 0, 2],\n      })\n    }\n\n    ui.div({ padding: [0, 0, 0, 0], text: '' })\n    const maybeDesc = this.#fields[start]\n    if (isDescription(maybeDesc)) {\n      const print = normalize(maybeDesc.text, maybeDesc.pre)\n      start++\n      ui.div({ padding: [0, 0, 0, 0], text: print })\n      ui.div({ padding: [0, 0, 0, 0], text: '' })\n    }\n\n    const { rows, maxWidth } = this.#usageRows(start)\n\n    // every heading/description after the first gets indented by 2\n    // extra spaces.\n    for (const row of rows) {\n      if (row.left) {\n        // If the row is too long, don't wrap it\n        // Bump the right-hand side down a line to make room\n        const configIndent = indent(Math.max(headingLevel, 2))\n        if (row.left.length > maxWidth - 3) {\n          ui.div({ text: row.left, padding: [0, 0, 0, configIndent] })\n          ui.div({ text: row.text, padding: [0, 0, 0, maxWidth] })\n        } else {\n          ui.div(\n            {\n              text: row.left,\n              padding: [0, 1, 0, configIndent],\n              width: maxWidth,\n            },\n            { padding: [0, 0, 0, 0], text: row.text }\n          )\n        }\n        if (row.skipLine) {\n          ui.div({ padding: [0, 0, 0, 0], text: '' })\n        }\n      } else {\n        if (isHeading(row)) {\n          const { level } = row\n          headingLevel = level\n          // only h1 and h2 have bottom padding\n          // h3-h6 do not\n          const b = level <= 2 ? 1 : 0\n          ui.div({ ...row, padding: [0, 0, b, indent(level)] })\n        } else {\n          ui.div({ ...row, padding: [0, 0, 1, indent(headingLevel + 1)] })\n        }\n      }\n    }\n\n    return (this.#usage = ui.toString())\n  }\n\n  /**\n   * Return the usage banner markdown for the given configuration\n   */\n  usageMarkdown(): string {\n    if (this.#usageMarkdown) return this.#usageMarkdown\n\n    const out: string[] = []\n\n    let headingLevel = 1\n    const first = this.#fields[0]\n    let start = first?.type === 'heading' ? 1 : 0\n    if (first?.type === 'heading') {\n      out.push(`# ${normalizeOneLine(first.text)}`)\n    }\n    out.push('Usage:')\n    if (this.#options.usage) {\n      out.push(normalizeMarkdown(this.#options.usage, true))\n    } else {\n      const cmd = basename(process.argv[1])\n      const shortFlags: string[] = []\n      const shorts: string[][] = []\n      const flags: string[] = []\n      const opts: string[][] = []\n      for (const [field, config] of Object.entries(this.#configSet)) {\n        if (config.short) {\n          if (config.type === 'boolean') shortFlags.push(config.short)\n          else shorts.push([config.short, config.hint || field])\n        } else {\n          if (config.type === 'boolean') flags.push(field)\n          else opts.push([field, config.hint || field])\n        }\n      }\n      const sf = shortFlags.length ? ' -' + shortFlags.join('') : ''\n      const so = shorts.map(([k, v]) => ` --${k}=<${v}>`).join('')\n      const lf = flags.map(k => ` --${k}`).join('')\n      const lo = opts.map(([k, v]) => ` --${k}=<${v}>`).join('')\n      const usage = `${cmd}${sf}${so}${lf}${lo}`.trim()\n      out.push(normalizeMarkdown(usage, true))\n    }\n\n    const maybeDesc = this.#fields[start]\n    if (isDescription(maybeDesc)) {\n      out.push(normalizeMarkdown(maybeDesc.text, maybeDesc.pre))\n      start++\n    }\n\n    const { rows } = this.#usageRows(start)\n\n    // heading level in markdown is number of # ahead of text\n    for (const row of rows) {\n      if (row.left) {\n        out.push(\n          '#'.repeat(headingLevel + 1) +\n            ' ' +\n            normalizeOneLine(row.left, true)\n        )\n        if (row.text) out.push(normalizeMarkdown(row.text))\n      } else if (isHeading(row)) {\n        const { level } = row\n        headingLevel = level\n        out.push(\n          `${'#'.repeat(headingLevel)} ${normalizeOneLine(\n            row.text,\n            row.pre\n          )}`\n        )\n      } else {\n        out.push(normalizeMarkdown(row.text, !!(row as Description).pre))\n      }\n    }\n\n    return (this.#usageMarkdown = out.join('\\n\\n') + '\\n')\n  }\n\n  #usageRows(start: number) {\n    // turn each config type into a row, and figure out the width of the\n    // left hand indentation for the option descriptions.\n    let maxMax = Math.max(12, Math.min(26, Math.floor(width / 3)))\n    let maxWidth = 8\n    let prev: Row | TextRow | undefined = undefined\n    const rows: (Row | TextRow)[] = []\n    for (const field of this.#fields.slice(start)) {\n      if (field.type !== 'config') {\n        if (prev?.type === 'config') prev.skipLine = true\n        prev = undefined\n        field.text = normalize(field.text, !!field.pre)\n        rows.push(field)\n        continue\n      }\n      const { value } = field\n      const desc = value.description || ''\n      const mult = value.multiple ? 'Can be set multiple times' : ''\n      const dmDelim = mult && (desc.includes('\\n') ? '\\n\\n' : '\\n')\n      const text = normalize(desc + dmDelim + mult)\n      const hint =\n        value.hint ||\n        (value.type === 'number'\n          ? 'n'\n          : value.type === 'string'\n          ? field.name\n          : undefined)\n      const short = !value.short\n        ? ''\n        : value.type === 'boolean'\n        ? `-${value.short} `\n        : `-${value.short}<${hint}> `\n      const left =\n        value.type === 'boolean'\n          ? `${short}--${field.name}`\n          : `${short}--${field.name}=<${hint}>`\n      const row: Row = { text, left, type: 'config' }\n      if (text.length > width - maxMax) {\n        row.skipLine = true\n      }\n      if (prev && left.length > maxMax) prev.skipLine = true\n      prev = row\n      const len = left.length + 4\n      if (len > maxWidth && len < maxMax) {\n        maxWidth = len\n      }\n\n      rows.push(row)\n    }\n\n    return { rows, maxWidth }\n  }\n\n  /**\n   * Return the configuration options as a plain object\n   */\n  toJSON() {\n    return Object.fromEntries(\n      Object.entries(this.#configSet).map(([field, def]) => [\n        field,\n        {\n          type: def.type,\n          ...(def.multiple ? { multiple: true } : {}),\n          ...(def.delim ? { delim: def.delim } : {}),\n          ...(def.short ? { short: def.short } : {}),\n          ...(def.description\n            ? { description: normalize(def.description) }\n            : {}),\n          ...(def.validate ? { validate: def.validate } : {}),\n          ...(def.default !== undefined ? { default: def.default } : {}),\n        },\n      ])\n    )\n  }\n\n  /**\n   * Custom printer for `util.inspect`\n   */\n  [inspect.custom](_: number, options: InspectOptions) {\n    return `Jack ${inspect(this.toJSON(), options)}`\n  }\n}\n\n// Unwrap and un-indent, so we can wrap description\n// strings however makes them look nice in the code.\nconst normalize = (s: string, pre: boolean = false): string =>\n  pre\n    ? // prepend a ZWSP to each line so cliui doesn't strip it.\n      s\n        .split('\\n')\n        .map(l => `\\u200b${l}`)\n        .join('\\n')\n    : s\n        // remove single line breaks, except for lists\n        .replace(/([^\\n])\\n[ \\t]*([^\\n])/g, (_, $1, $2) =>\n          !/^[-*]/.test($2) ? `${$1} ${$2}` : `${$1}\\n${$2}`\n        )\n        // normalize mid-line whitespace\n        .replace(/([^\\n])[ \\t]+([^\\n])/g, '$1 $2')\n        // two line breaks are enough\n        .replace(/\\n{3,}/g, '\\n\\n')\n        // remove any spaces at the start of a line\n        .replace(/\\n[ \\t]+/g, '\\n')\n        .trim()\n\n// normalize for markdown printing, remove leading spaces on lines\nconst normalizeMarkdown = (s: string, pre: boolean = false): string => {\n  const n = normalize(s, pre).replace(/\\\\/g, '\\\\\\\\')\n  return pre\n    ? `\\`\\`\\`\\n${n.replace(/\\u200b/g, '')}\\n\\`\\`\\``\n    : n.replace(/\\n +/g, '\\n').trim()\n}\n\nconst normalizeOneLine = (s: string, pre: boolean = false) => {\n  const n = normalize(s, pre)\n    .replace(/[\\s\\u200b]+/g, ' ')\n    .trim()\n  return pre ? `\\`${n}\\`` : n\n}\n\n/**\n * Main entry point. Create and return a {@link Jack} object.\n */\nexport const jack = (options: JackOptions = {}) => new Jack(options)\n"]},"url":null,"sourceURL":null},"file:///home/gcadoret/www/lcov-reporter/node_modules/jackspeak/dist/cjs/parse-args.js":{"lineLengths":[13,97,33,53,88,68,5,39,29,33,17,4,96,72,21,21,3,66,42,20,141,36,18,2,62,27,43,41,16,39,21,15,14,22,15,31,29,40,47,1,23,42],"data":{"version":3,"file":"parse-args-cjs.js","sourceRoot":"","sources":["file:///home/gcadoret/www/lcov-reporter/node_modules/jackspeak/src/parse-args-cjs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2CAA4B;AAE5B,MAAM,EAAE,GACN,OAAO,OAAO,KAAK,QAAQ;IAC3B,CAAC,CAAC,OAAO;IACT,OAAO,OAAO,CAAC,OAAO,KAAK,QAAQ;IACjC,CAAC,CAAC,OAAO,CAAC,OAAO;IACjB,CAAC,CAAC,QAAQ,CAAA;AACd,MAAM,GAAG,GAAG,EAAE;KACX,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;KACjB,KAAK,CAAC,GAAG,CAAC;KACV,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;AAE5B,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,GAAG,IAAI,CAAA;AAC5B,IAAI,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE;IACrC,EAAE,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAAA;CAC3C;AAEY,QAAA,SAAS,GAAG,EAAE,CAAA","sourcesContent":["import * as util from 'util'\n\nconst pv =\n  typeof process === 'object' &&\n  !!process &&\n  typeof process.version === 'string'\n    ? process.version\n    : 'v0.0.0'\nconst pvs = pv\n  .replace(/^v/, '')\n  .split('.')\n  .map(s => parseInt(s, 10))\n\nlet { parseArgs: pa } = util\nif (!pa || pvs[0] > 18 || pvs[1] < 11) {\n  pa = require('@pkgjs/parseargs').parseArgs\n}\n\nexport const parseArgs = pa\n"]},"url":null,"sourceURL":null},"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/dist/cjs/src/index.js":{"lineLengths":[13,62,298,41,39,49,48,61,1,40,44,57,1,32,42,59,1,28,45,55,1,49,62,1,42,45,58,1,34,65,36,69,38,46,26,3,40,27,29,3,21,39,112,116,37,106,47,119,20,37,16,13,23,15,27,19,35,16,29,20,37,25,38,31,35,3,33,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///home/gcadoret/www/lcov-reporter/node_modules/glob/src/index.ts"],"names":[],"mappings":";;;AAAA,yCAA4C;AAS5C,uCAAgC;AAChC,iDAAyC;AAuBzC,SAAgB,cAAc,CAC5B,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,UAAU,EAAE,CAAA;AAChD,CAAC;AALD,wCAKC;AAsBD,SAAgB,UAAU,CACxB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,MAAM,EAAE,CAAA;AAC5C,CAAC;AALD,gCAKC;AAqBD,SAAgB,QAAQ,CACtB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAA;AAC9C,CAAC;AALD,4BAKC;AAwBD,KAAK,UAAU,KAAK,CAClB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAA;AAC1C,CAAC;AAqBD,SAAgB,eAAe,CAC7B,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,WAAW,EAAE,CAAA;AACjD,CAAC;AALD,0CAKC;AAqBD,SAAgB,WAAW,CACzB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,OAAO,EAAE,CAAA;AAC7C,CAAC;AALD,kCAKC;AAED,iEAAiE;AACpD,QAAA,UAAU,GAAG,cAAc,CAAA;AAC3B,QAAA,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC,CAAA;AAC5D,QAAA,WAAW,GAAG,eAAe,CAAA;AAC7B,QAAA,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE;IAChD,IAAI,EAAE,eAAe;CACtB,CAAC,CAAA;AACW,QAAA,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;IAC1C,MAAM,EAAE,cAAc;IACtB,OAAO,EAAE,eAAe;CACzB,CAAC,CAAA;AAEF,qBAAqB;AACrB,uCAA4C;AAAnC,mGAAA,MAAM,OAAA;AAAE,qGAAA,QAAQ,OAAA;AACzB,qCAAgC;AAAvB,+FAAA,IAAI,OAAA;AAOb,+CAAyC;AAAhC,wGAAA,QAAQ,OAAA;AAGjB,oBAAoB;AAEP,QAAA,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;IACvC,IAAI,EAAE,KAAK;IACX,QAAQ;IACR,IAAI,EAAJ,YAAI;IACJ,UAAU;IACV,MAAM,EAAN,cAAM;IACN,cAAc;IACd,UAAU,EAAV,kBAAU;IACV,WAAW;IACX,OAAO,EAAP,eAAO;IACP,eAAe;IACf,WAAW,EAAX,mBAAW;IACX,IAAI,EAAJ,cAAI;IACJ,QAAQ,EAAR,uBAAQ;IACR,MAAM,EAAN,kBAAM;IACN,QAAQ,EAAR,oBAAQ;CACT,CAAC,CAAA;AACF,YAAI,CAAC,IAAI,GAAG,YAAI,CAAA","sourcesContent":["import { escape, unescape } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nimport { Glob } from './glob.js'\nimport { hasMagic } from './has-magic.js'\n\n/**\n * Syncronous form of {@link globStream}. Will read all the matches as fast as\n * you consume them, even all in a single tick if you consume them immediately,\n * but will still respond to backpressure if they're not consumed immediately.\n */\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Minipass<Path, Path>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesUnset\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).streamSync()\n}\n\n/**\n * Return a stream that emits all the strings or `Path` objects and\n * then emits `end` when completed.\n */\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Minipass<Path, Path>\nexport function globStream(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).stream()\n}\n\n/**\n * Synchronous form of {@link glob}\n */\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Path[]\nexport function globSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions\n): Path[] | string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).walkSync()\n}\n\n/**\n * Perform an asynchronous glob search for the pattern(s) specified. Returns\n * [Path](https://isaacs.github.io/path-scurry/classes/PathBase) objects if the\n * {@link withFileTypes} option is set to `true`. See {@link GlobOptions} for\n * full option descriptions.\n */\nasync function glob_(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Promise<Path[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions\n): Promise<Path[] | string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).walk()\n}\n\n/**\n * Return a sync iterator for walking glob pattern matches.\n */\nexport function globIterateSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Generator<Path, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions\n): Generator<Path, void, void> | Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).iterateSync()\n}\n\n/**\n * Return an async iterator for walking glob pattern matches.\n */\nexport function globIterate(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): AsyncGenerator<Path, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions\n): AsyncGenerator<Path, void, void> | AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).iterate()\n}\n\n// aliases: glob.sync.stream() glob.stream.sync() glob.sync() etc\nexport const streamSync = globStreamSync\nexport const stream = Object.assign(globStream, { sync: globStreamSync })\nexport const iterateSync = globIterateSync\nexport const iterate = Object.assign(globIterate, {\n  sync: globIterateSync,\n})\nexport const sync = Object.assign(globSync, {\n  stream: globStreamSync,\n  iterate: globIterateSync,\n})\n\n/* c8 ignore start */\nexport { escape, unescape } from 'minimatch'\nexport { Glob } from './glob.js'\nexport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nexport { hasMagic } from './has-magic.js'\nexport type { IgnoreLike } from './ignore.js'\nexport type { MatchStream } from './walker.js'\n/* c8 ignore stop */\n\nexport const glob = Object.assign(glob_, {\n  glob: glob_,\n  globSync,\n  sync,\n  globStream,\n  stream,\n  globStreamSync,\n  streamSync,\n  globIterate,\n  iterate,\n  globIterateSync,\n  iterateSync,\n  Glob,\n  hasMagic,\n  escape,\n  unescape,\n})\nglob.glob = glob\n"]},"url":null,"sourceURL":null},"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/minimatch/dist/cjs/index.js":{"lineLengths":[13,72,62,2,62,221,70,71,37,43,47,49,63,40,58,21,5,52,2,30,56,45,77,58,39,28,70,2,42,28,48,2,35,69,77,28,72,23,61,69,42,46,40,13,21,28,60,2,49,43,13,21,28,60,2,43,43,61,2,40,40,61,2,35,26,57,2,38,26,62,2,21,63,41,22,54,24,15,14,25,24,2,20,76,36,41,46,32,49,21,32,26,60,63,45,61,34,45,47,93,24,42,51,27,70,33,5,35,80,29,59,48,50,13,38,66,13,10,41,33,53,55,13,32,52,69,13,10,75,71,83,64,83,93,93,22,35,7,2,28,46,19,21,19,30,35,43,2,33,21,17,48,63,60,60,63,39,25,5,51,2,34,52,41,50,68,68,61,66,2,74,72,69,62,83,24,42,48,47,41,44,27,5,16,2,22,40,31,44,74,17,12,8,12,25,13,11,12,10,28,12,12,14,11,14,13,23,11,40,67,32,31,31,60,51,35,83,40,60,9,73,27,28,43,29,27,41,44,33,52,44,52,26,28,22,39,20,5,16,64,24,9,41,41,45,32,13,9,21,5,19,12,37,37,53,62,32,19,9,23,30,19,9,44,27,32,56,28,61,9,47,71,42,70,60,48,10,75,76,74,71,55,49,27,52,60,53,44,34,62,42,54,28,87,17,35,75,17,13,47,11,38,62,60,51,29,55,38,34,34,51,47,45,31,17,13,9,43,5,61,62,61,64,43,27,65,38,56,63,51,46,21,17,13,9,55,37,68,61,62,9,42,63,57,9,14,66,9,25,5,44,42,39,24,63,27,47,24,17,31,45,17,13,25,11,5,54,33,39,49,49,53,31,17,36,81,34,35,21,17,31,27,19,53,11,5,33,36,43,9,33,12,33,47,48,60,39,53,63,33,48,44,43,28,21,17,39,41,60,40,32,17,13,50,23,63,40,65,40,44,28,17,13,31,49,5,45,34,35,53,21,6,68,68,70,57,6,86,39,42,32,6,73,67,37,33,12,33,94,42,28,67,33,53,64,30,21,75,55,35,55,21,45,44,45,38,33,29,36,37,30,37,38,33,21,40,64,40,49,37,42,25,17,51,52,64,43,57,67,37,52,48,47,32,25,21,43,45,64,44,36,21,17,54,27,67,44,69,44,75,59,58,47,43,32,21,17,13,31,25,5,42,58,50,56,6,63,55,38,56,60,107,29,29,39,34,13,9,49,5,44,19,19,24,23,48,34,59,21,21,13,77,35,21,13,77,35,21,13,37,24,63,33,34,33,28,35,21,21,13,37,24,63,33,34,33,28,35,21,21,13,18,29,13,9,70,41,47,5,19,26,19,37,27,29,79,29,27,9,25,55,29,5,51,45,59,55,23,46,37,68,75,30,29,87,41,33,33,34,42,96,47,36,36,37,49,45,64,70,69,59,60,38,36,53,21,41,47,21,17,13,9,68,76,55,37,51,9,56,60,105,40,32,29,38,36,52,33,30,29,13,32,41,56,23,57,30,30,30,24,65,72,41,70,45,18,51,32,31,50,36,35,53,51,49,50,28,32,32,48,66,45,63,42,74,43,43,47,48,73,41,21,32,17,67,33,45,85,73,84,79,41,36,21,26,58,73,48,49,76,79,34,25,63,79,29,21,17,38,83,37,30,38,82,36,36,21,17,36,29,13,38,60,65,20,40,30,54,13,18,32,55,13,21,29,9,60,60,51,58,60,63,60,65,37,49,72,37,64,28,24,9,29,59,61,35,27,9,29,56,64,61,36,52,33,9,14,37,36,9,28,5,19,68,5,20,67,37,20,29,36,27,22,63,66,14,28,42,60,9,53,38,29,45,42,29,39,44,9,49,38,29,41,38,29,35,37,9,54,74,9,50,35,9,78,69,5,14,49,31,59,36,10,64,65,51,29,26,32,31,9,37,42,18,25,28,31,59,42,58,78,57,70,43,20,29,41,42,54,37,17,44,37,44,42,33,15,34,39,39,74,27,17,41,74,73,21,26,40,21,17,46,66,17,53,78,49,17,15,68,10,23,71,75,71,36,56,43,56,24,38,13,62,33,9,20,35,32,9,28,27,5,19,59,69,54,50,43,32,9,59,50,43,9,14,34,9,5,38,45,54,25,27,25,9,25,28,9,35,24,9,37,40,29,40,9,53,38,46,66,67,43,47,29,45,82,41,24,67,33,13,9,46,35,26,60,34,13,62,22,41,32,17,36,13,9,67,38,33,25,9,27,5,26,57,5,1,30,21,35,103,41,112,45,118,20,37,40,46,52,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/minimatch/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import expand from 'brace-expansion'\nimport { assertValidPattern } from './assert-valid-pattern.js'\nimport { AST, ExtglobType } from './ast.js'\nimport { escape } from './escape.js'\nimport { unescape } from './unescape.js'\n\ntype Platform =\n  | 'aix'\n  | 'android'\n  | 'darwin'\n  | 'freebsd'\n  | 'haiku'\n  | 'linux'\n  | 'openbsd'\n  | 'sunos'\n  | 'win32'\n  | 'cygwin'\n  | 'netbsd'\n\nexport interface MinimatchOptions {\n  nobrace?: boolean\n  nocomment?: boolean\n  nonegate?: boolean\n  debug?: boolean\n  noglobstar?: boolean\n  noext?: boolean\n  nonull?: boolean\n  windowsPathsNoEscape?: boolean\n  allowWindowsEscape?: boolean\n  partial?: boolean\n  dot?: boolean\n  nocase?: boolean\n  nocaseMagicOnly?: boolean\n  magicalBraces?: boolean\n  matchBase?: boolean\n  flipNegate?: boolean\n  preserveMultipleSlashes?: boolean\n  optimizationLevel?: number\n  platform?: Platform\n  windowsNoMagicRoot?: boolean\n}\n\nexport const minimatch = (\n  p: string,\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\n// Optimized checking for the most common glob patterns.\nconst starDotExtRE = /^\\*+([^+@!?\\*\\[\\(]*)$/\nconst starDotExtTest = (ext: string) => (f: string) =>\n  !f.startsWith('.') && f.endsWith(ext)\nconst starDotExtTestDot = (ext: string) => (f: string) => f.endsWith(ext)\nconst starDotExtTestNocase = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => !f.startsWith('.') && f.toLowerCase().endsWith(ext)\n}\nconst starDotExtTestNocaseDot = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => f.toLowerCase().endsWith(ext)\n}\nconst starDotStarRE = /^\\*+\\.\\*+$/\nconst starDotStarTest = (f: string) => !f.startsWith('.') && f.includes('.')\nconst starDotStarTestDot = (f: string) =>\n  f !== '.' && f !== '..' && f.includes('.')\nconst dotStarRE = /^\\.\\*+$/\nconst dotStarTest = (f: string) => f !== '.' && f !== '..' && f.startsWith('.')\nconst starRE = /^\\*+$/\nconst starTest = (f: string) => f.length !== 0 && !f.startsWith('.')\nconst starTestDot = (f: string) => f.length !== 0 && f !== '.' && f !== '..'\nconst qmarksRE = /^\\?+([^+@!?\\*\\[\\(]*)?$/\nconst qmarksTestNocase = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestNocaseDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTest = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTestNoExt = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && !f.startsWith('.')\n}\nconst qmarksTestNoExtDot = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && f !== '.' && f !== '..'\n}\n\n/* c8 ignore start */\nconst defaultPlatform: Platform = (\n  typeof process === 'object' && process\n    ? (typeof process.env === 'object' &&\n        process.env &&\n        process.env.__MINIMATCH_TESTING_PLATFORM__) ||\n      process.platform\n    : 'posix'\n) as Platform\ntype Sep = '\\\\' | '/'\nconst path: { [k: string]: { sep: Sep } } = {\n  win32: { sep: '\\\\' },\n  posix: { sep: '/' },\n}\n/* c8 ignore stop */\n\nexport const sep = defaultPlatform === 'win32' ? path.win32.sep : path.posix.sep\nminimatch.sep = sep\n\nexport const GLOBSTAR = Symbol('globstar **')\nminimatch.GLOBSTAR = GLOBSTAR\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nconst twoStarDot = '(?:(?!(?:\\\\/|^)(?:\\\\.{1,2})($|\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nconst twoStarNoDot = '(?:(?!(?:\\\\/|^)\\\\.).)*?'\n\nexport const filter =\n  (pattern: string, options: MinimatchOptions = {}) =>\n  (p: string) =>\n    minimatch(p, pattern, options)\nminimatch.filter = filter\n\nconst ext = (a: MinimatchOptions, b: MinimatchOptions = {}) =>\n  Object.assign({}, a, b)\n\nexport const defaults = (def: MinimatchOptions): typeof minimatch => {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  const orig = minimatch\n\n  const m = (p: string, pattern: string, options: MinimatchOptions = {}) =>\n    orig(p, pattern, ext(def, options))\n\n  return Object.assign(m, {\n    Minimatch: class Minimatch extends orig.Minimatch {\n      constructor(pattern: string, options: MinimatchOptions = {}) {\n        super(pattern, ext(def, options))\n      }\n      static defaults(options: MinimatchOptions) {\n        return orig.defaults(ext(def, options)).Minimatch\n      }\n    },\n\n    AST: class AST extends orig.AST {\n      /* c8 ignore start */\n      constructor(\n        type: ExtglobType | null,\n        parent?: AST,\n        options: MinimatchOptions = {}\n      ) {\n        super(type, parent, ext(def, options))\n      }\n      /* c8 ignore stop */\n\n      static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n        return orig.AST.fromGlob(pattern, ext(def, options))\n      }\n    },\n\n    unescape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.unescape(s, ext(def, options)),\n\n    escape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.escape(s, ext(def, options)),\n\n    filter: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.filter(pattern, ext(def, options)),\n\n    defaults: (options: MinimatchOptions) => orig.defaults(ext(def, options)),\n\n    makeRe: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.makeRe(pattern, ext(def, options)),\n\n    braceExpand: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.braceExpand(pattern, ext(def, options)),\n\n    match: (list: string[], pattern: string, options: MinimatchOptions = {}) =>\n      orig.match(list, pattern, ext(def, options)),\n\n    sep: orig.sep,\n    GLOBSTAR: GLOBSTAR as typeof GLOBSTAR,\n  })\n}\nminimatch.defaults = defaults\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nexport const braceExpand = (\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\nminimatch.braceExpand = braceExpand\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\n\nexport const makeRe = (pattern: string, options: MinimatchOptions = {}) =>\n  new Minimatch(pattern, options).makeRe()\nminimatch.makeRe = makeRe\n\nexport const match = (\n  list: string[],\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  const mm = new Minimatch(pattern, options)\n  list = list.filter(f => mm.match(f))\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\nminimatch.match = match\n\n// replace stuff like \\* with *\nconst globMagic = /[?*]|[+@!]\\(.*?\\)|\\[|\\]/\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\nexport type MMRegExp = RegExp & {\n  _src?: string\n  _glob?: string\n}\n\nexport type ParseReturnFiltered = string | MMRegExp | typeof GLOBSTAR\nexport type ParseReturn = ParseReturnFiltered | false\n\nexport class Minimatch {\n  options: MinimatchOptions\n  set: ParseReturnFiltered[][]\n  pattern: string\n\n  windowsPathsNoEscape: boolean\n  nonegate: boolean\n  negate: boolean\n  comment: boolean\n  empty: boolean\n  preserveMultipleSlashes: boolean\n  partial: boolean\n  globSet: string[]\n  globParts: string[][]\n  nocase: boolean\n\n  isWindows: boolean\n  platform: Platform\n  windowsNoMagicRoot: boolean\n\n  regexp: false | null | MMRegExp\n  constructor(pattern: string, options: MinimatchOptions = {}) {\n    assertValidPattern(pattern)\n\n    options = options || {}\n    this.options = options\n    this.pattern = pattern\n    this.platform = options.platform || defaultPlatform\n    this.isWindows = this.platform === 'win32'\n    this.windowsPathsNoEscape =\n      !!options.windowsPathsNoEscape || options.allowWindowsEscape === false\n    if (this.windowsPathsNoEscape) {\n      this.pattern = this.pattern.replace(/\\\\/g, '/')\n    }\n    this.preserveMultipleSlashes = !!options.preserveMultipleSlashes\n    this.regexp = null\n    this.negate = false\n    this.nonegate = !!options.nonegate\n    this.comment = false\n    this.empty = false\n    this.partial = !!options.partial\n    this.nocase = !!this.options.nocase\n    this.windowsNoMagicRoot =\n      options.windowsNoMagicRoot !== undefined\n        ? options.windowsNoMagicRoot\n        : !!(this.isWindows && this.nocase)\n\n    this.globSet = []\n    this.globParts = []\n    this.set = []\n\n    // make the set of regexps etc.\n    this.make()\n  }\n\n  hasMagic(): boolean {\n    if (this.options.magicalBraces && this.set.length > 1) {\n      return true\n    }\n    for (const pattern of this.set) {\n      for (const part of pattern) {\n        if (typeof part !== 'string') return true\n      }\n    }\n    return false\n  }\n\n  debug(..._: any[]) {}\n\n  make() {\n    const pattern = this.pattern\n    const options = this.options\n\n    // empty patterns and comments match nothing.\n    if (!options.nocomment && pattern.charAt(0) === '#') {\n      this.comment = true\n      return\n    }\n\n    if (!pattern) {\n      this.empty = true\n      return\n    }\n\n    // step 1: figure out negation, etc.\n    this.parseNegate()\n\n    // step 2: expand braces\n    this.globSet = [...new Set(this.braceExpand())]\n\n    if (options.debug) {\n      this.debug = (...args: any[]) => console.error(...args)\n    }\n\n    this.debug(this.pattern, this.globSet)\n\n    // step 3: now we have a set, so turn each one into a series of\n    // path-portion matching patterns.\n    // These will be regexps, except in the case of \"**\", which is\n    // set to the GLOBSTAR object for globstar behavior,\n    // and will not contain any / characters\n    //\n    // First, we preprocess to make the glob pattern sets a bit simpler\n    // and deduped.  There are some perf-killing patterns that can cause\n    // problems with a glob walk, but we can simplify them down a bit.\n    const rawGlobParts = this.globSet.map(s => this.slashSplit(s))\n    this.globParts = this.preprocess(rawGlobParts)\n    this.debug(this.pattern, this.globParts)\n\n    // glob --> regexps\n    let set = this.globParts.map((s, _, __) => {\n      if (this.isWindows && this.windowsNoMagicRoot) {\n        // check if it's a drive or unc path.\n        const isUNC =\n          s[0] === '' &&\n          s[1] === '' &&\n          (s[2] === '?' || !globMagic.test(s[2])) &&\n          !globMagic.test(s[3])\n        const isDrive = /^[a-z]:/i.test(s[0])\n        if (isUNC) {\n          return [...s.slice(0, 4), ...s.slice(4).map(ss => this.parse(ss))]\n        } else if (isDrive) {\n          return [s[0], ...s.slice(1).map(ss => this.parse(ss))]\n        }\n      }\n      return s.map(ss => this.parse(ss))\n    })\n\n    this.debug(this.pattern, set)\n\n    // filter out everything that didn't compile properly.\n    this.set = set.filter(\n      s => s.indexOf(false) === -1\n    ) as ParseReturnFiltered[][]\n\n    // do not treat the ? in UNC paths as magic\n    if (this.isWindows) {\n      for (let i = 0; i < this.set.length; i++) {\n        const p = this.set[i]\n        if (\n          p[0] === '' &&\n          p[1] === '' &&\n          this.globParts[i][2] === '?' &&\n          typeof p[3] === 'string' &&\n          /^[a-z]:$/i.test(p[3])\n        ) {\n          p[2] = '?'\n        }\n      }\n    }\n\n    this.debug(this.pattern, this.set)\n  }\n\n  // various transforms to equivalent pattern sets that are\n  // faster to process in a filesystem walk.  The goal is to\n  // eliminate what we can, and push all ** patterns as far\n  // to the right as possible, even if it increases the number\n  // of patterns that we have to process.\n  preprocess(globParts: string[][]) {\n    // if we're not in globstar mode, then turn all ** into *\n    if (this.options.noglobstar) {\n      for (let i = 0; i < globParts.length; i++) {\n        for (let j = 0; j < globParts[i].length; j++) {\n          if (globParts[i][j] === '**') {\n            globParts[i][j] = '*'\n          }\n        }\n      }\n    }\n\n    const { optimizationLevel = 1 } = this.options\n\n    if (optimizationLevel >= 2) {\n      // aggressive optimization for the purpose of fs walking\n      globParts = this.firstPhasePreProcess(globParts)\n      globParts = this.secondPhasePreProcess(globParts)\n    } else if (optimizationLevel >= 1) {\n      // just basic optimizations to remove some .. parts\n      globParts = this.levelOneOptimize(globParts)\n    } else {\n      globParts = this.adjascentGlobstarOptimize(globParts)\n    }\n\n    return globParts\n  }\n\n  // just get rid of adjascent ** portions\n  adjascentGlobstarOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      let gs: number = -1\n      while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n        let i = gs\n        while (parts[i + 1] === '**') {\n          i++\n        }\n        if (i !== gs) {\n          parts.splice(gs, i - gs)\n        }\n      }\n      return parts\n    })\n  }\n\n  // get rid of adjascent ** and resolve .. portions\n  levelOneOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      parts = parts.reduce((set: string[], part) => {\n        const prev = set[set.length - 1]\n        if (part === '**' && prev === '**') {\n          return set\n        }\n        if (part === '..') {\n          if (prev && prev !== '..' && prev !== '.' && prev !== '**') {\n            set.pop()\n            return set\n          }\n        }\n        set.push(part)\n        return set\n      }, [])\n      return parts.length === 0 ? [''] : parts\n    })\n  }\n\n  levelTwoFileOptimize(parts: string | string[]) {\n    if (!Array.isArray(parts)) {\n      parts = this.slashSplit(parts)\n    }\n    let didSomething: boolean = false\n    do {\n      didSomething = false\n      // <pre>/<e>/<rest> -> <pre>/<rest>\n      if (!this.preserveMultipleSlashes) {\n        for (let i = 1; i < parts.length - 1; i++) {\n          const p = parts[i]\n          // don't squeeze out UNC patterns\n          if (i === 1 && p === '' && parts[0] === '') continue\n          if (p === '.' || p === '') {\n            didSomething = true\n            parts.splice(i, 1)\n            i--\n          }\n        }\n        if (\n          parts[0] === '.' &&\n          parts.length === 2 &&\n          (parts[1] === '.' || parts[1] === '')\n        ) {\n          didSomething = true\n          parts.pop()\n        }\n      }\n\n      // <pre>/<p>/../<rest> -> <pre>/<rest>\n      let dd: number = 0\n      while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n        const p = parts[dd - 1]\n        if (p && p !== '.' && p !== '..' && p !== '**') {\n          didSomething = true\n          parts.splice(dd - 1, 2)\n          dd -= 2\n        }\n      }\n    } while (didSomething)\n    return parts.length === 0 ? [''] : parts\n  }\n\n  // First phase: single-pattern processing\n  // <pre> is 1 or more portions\n  // <rest> is 1 or more portions\n  // <p> is any portion other than ., .., '', or **\n  // <e> is . or ''\n  //\n  // **/.. is *brutal* for filesystem walking performance, because\n  // it effectively resets the recursive walk each time it occurs,\n  // and ** cannot be reduced out by a .. pattern part like a regexp\n  // or most strings (other than .., ., and '') can be.\n  //\n  // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n  // <pre>/<e>/<rest> -> <pre>/<rest>\n  // <pre>/<p>/../<rest> -> <pre>/<rest>\n  // **/**/<rest> -> **/<rest>\n  //\n  // **/*/<rest> -> */**/<rest> <== not valid because ** doesn't follow\n  // this WOULD be allowed if ** did follow symlinks, or * didn't\n  firstPhasePreProcess(globParts: string[][]) {\n    let didSomething = false\n    do {\n      didSomething = false\n      // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n      for (let parts of globParts) {\n        let gs: number = -1\n        while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n          let gss: number = gs\n          while (parts[gss + 1] === '**') {\n            // <pre>/**/**/<rest> -> <pre>/**/<rest>\n            gss++\n          }\n          // eg, if gs is 2 and gss is 4, that means we have 3 **\n          // parts, and can remove 2 of them.\n          if (gss > gs) {\n            parts.splice(gs + 1, gss - gs)\n          }\n\n          let next = parts[gs + 1]\n          const p = parts[gs + 2]\n          const p2 = parts[gs + 3]\n          if (next !== '..') continue\n          if (\n            !p ||\n            p === '.' ||\n            p === '..' ||\n            !p2 ||\n            p2 === '.' ||\n            p2 === '..'\n          ) {\n            continue\n          }\n          didSomething = true\n          // edit parts in place, and push the new one\n          parts.splice(gs, 1)\n          const other = parts.slice(0)\n          other[gs] = '**'\n          globParts.push(other)\n          gs--\n        }\n\n        // <pre>/<e>/<rest> -> <pre>/<rest>\n        if (!this.preserveMultipleSlashes) {\n          for (let i = 1; i < parts.length - 1; i++) {\n            const p = parts[i]\n            // don't squeeze out UNC patterns\n            if (i === 1 && p === '' && parts[0] === '') continue\n            if (p === '.' || p === '') {\n              didSomething = true\n              parts.splice(i, 1)\n              i--\n            }\n          }\n          if (\n            parts[0] === '.' &&\n            parts.length === 2 &&\n            (parts[1] === '.' || parts[1] === '')\n          ) {\n            didSomething = true\n            parts.pop()\n          }\n        }\n\n        // <pre>/<p>/../<rest> -> <pre>/<rest>\n        let dd: number = 0\n        while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n          const p = parts[dd - 1]\n          if (p && p !== '.' && p !== '..' && p !== '**') {\n            didSomething = true\n            const needDot = dd === 1 && parts[dd + 1] === '**'\n            const splin = needDot ? ['.'] : []\n            parts.splice(dd - 1, 2, ...splin)\n            if (parts.length === 0) parts.push('')\n            dd -= 2\n          }\n        }\n      }\n    } while (didSomething)\n\n    return globParts\n  }\n\n  // second phase: multi-pattern dedupes\n  // {<pre>/*/<rest>,<pre>/<p>/<rest>} -> <pre>/*/<rest>\n  // {<pre>/<rest>,<pre>/<rest>} -> <pre>/<rest>\n  // {<pre>/**/<rest>,<pre>/<rest>} -> <pre>/**/<rest>\n  //\n  // {<pre>/**/<rest>,<pre>/**/<p>/<rest>} -> <pre>/**/<rest>\n  // ^-- not valid because ** doens't follow symlinks\n  secondPhasePreProcess(globParts: string[][]): string[][] {\n    for (let i = 0; i < globParts.length - 1; i++) {\n      for (let j = i + 1; j < globParts.length; j++) {\n        const matched = this.partsMatch(\n          globParts[i],\n          globParts[j],\n          !this.preserveMultipleSlashes\n        )\n        if (!matched) continue\n        globParts[i] = matched\n        globParts[j] = []\n      }\n    }\n    return globParts.filter(gs => gs.length)\n  }\n\n  partsMatch(\n    a: string[],\n    b: string[],\n    emptyGSMatch: boolean = false\n  ): false | string[] {\n    let ai = 0\n    let bi = 0\n    let result: string[] = []\n    let which: string = ''\n    while (ai < a.length && bi < b.length) {\n      if (a[ai] === b[bi]) {\n        result.push(which === 'b' ? b[bi] : a[ai])\n        ai++\n        bi++\n      } else if (emptyGSMatch && a[ai] === '**' && b[bi] === a[ai + 1]) {\n        result.push(a[ai])\n        ai++\n      } else if (emptyGSMatch && b[bi] === '**' && a[ai] === b[bi + 1]) {\n        result.push(b[bi])\n        bi++\n      } else if (\n        a[ai] === '*' &&\n        b[bi] &&\n        (this.options.dot || !b[bi].startsWith('.')) &&\n        b[bi] !== '**'\n      ) {\n        if (which === 'b') return false\n        which = 'a'\n        result.push(a[ai])\n        ai++\n        bi++\n      } else if (\n        b[bi] === '*' &&\n        a[ai] &&\n        (this.options.dot || !a[ai].startsWith('.')) &&\n        a[ai] !== '**'\n      ) {\n        if (which === 'a') return false\n        which = 'b'\n        result.push(b[bi])\n        ai++\n        bi++\n      } else {\n        return false\n      }\n    }\n    // if we fall out of the loop, it means they two are identical\n    // as long as their lengths match\n    return a.length === b.length && result\n  }\n\n  parseNegate() {\n    if (this.nonegate) return\n\n    const pattern = this.pattern\n    let negate = false\n    let negateOffset = 0\n\n    for (let i = 0; i < pattern.length && pattern.charAt(i) === '!'; i++) {\n      negate = !negate\n      negateOffset++\n    }\n\n    if (negateOffset) this.pattern = pattern.slice(negateOffset)\n    this.negate = negate\n  }\n\n  // set partial to true to test if, for example,\n  // \"/a/b\" matches the start of \"/*/b/*/d\"\n  // Partial means, if you run out of file before you run\n  // out of pattern, then that's fine, as long as all\n  // the parts match.\n  matchOne(file: string[], pattern: ParseReturn[], partial: boolean = false) {\n    const options = this.options\n\n    // UNC paths like //?/X:/... can match X:/... and vice versa\n    // Drive letters in absolute drive or unc paths are always compared\n    // case-insensitively.\n    if (this.isWindows) {\n      const fileDrive = typeof file[0] === 'string' && /^[a-z]:$/i.test(file[0])\n      const fileUNC =\n        !fileDrive &&\n        file[0] === '' &&\n        file[1] === '' &&\n        file[2] === '?' &&\n        /^[a-z]:$/i.test(file[3])\n\n      const patternDrive =\n        typeof pattern[0] === 'string' && /^[a-z]:$/i.test(pattern[0])\n      const patternUNC =\n        !patternDrive &&\n        pattern[0] === '' &&\n        pattern[1] === '' &&\n        pattern[2] === '?' &&\n        typeof pattern[3] === 'string' &&\n        /^[a-z]:$/i.test(pattern[3])\n\n      const fdi = fileUNC ? 3 : fileDrive ? 0 : undefined\n      const pdi = patternUNC ? 3 : patternDrive ? 0 : undefined\n      if (typeof fdi === 'number' && typeof pdi === 'number') {\n        const [fd, pd]: [string, string] = [file[fdi], pattern[pdi] as string]\n        if (fd.toLowerCase() === pd.toLowerCase()) {\n          pattern[pdi] = fd\n          if (pdi > fdi) {\n            pattern = pattern.slice( pdi)\n          } else if (fdi > pdi) {\n            file = file.slice(fdi)\n          }\n        }\n      }\n    }\n\n    // resolve and reduce . and .. portions in the file as well.\n    // dont' need to do the second phase, because it's only one string[]\n    const { optimizationLevel = 1 } = this.options\n    if (optimizationLevel >= 2) {\n      file = this.levelTwoFileOptimize(file)\n    }\n\n    this.debug('matchOne', this, { file, pattern })\n    this.debug('matchOne', file.length, pattern.length)\n\n    for (\n      var fi = 0, pi = 0, fl = file.length, pl = pattern.length;\n      fi < fl && pi < pl;\n      fi++, pi++\n    ) {\n      this.debug('matchOne loop')\n      var p = pattern[pi]\n      var f = file[fi]\n\n      this.debug(pattern, p, f)\n\n      // should be impossible.\n      // some invalid regexp stuff in the set.\n      /* c8 ignore start */\n      if (p === false) {\n        return false\n      }\n      /* c8 ignore stop */\n\n      if (p === GLOBSTAR) {\n        this.debug('GLOBSTAR', [pattern, p, f])\n\n        // \"**\"\n        // a/**/b/**/c would match the following:\n        // a/b/x/y/z/c\n        // a/x/y/z/b/c\n        // a/b/x/b/x/c\n        // a/b/c\n        // To do this, take the rest of the pattern after\n        // the **, and see if it would match the file remainder.\n        // If so, return success.\n        // If not, the ** \"swallows\" a segment, and try again.\n        // This is recursively awful.\n        //\n        // a/**/b/**/c matching a/b/x/y/z/c\n        // - a matches a\n        // - doublestar\n        //   - matchOne(b/x/y/z/c, b/**/c)\n        //     - b matches b\n        //     - doublestar\n        //       - matchOne(x/y/z/c, c) -> no\n        //       - matchOne(y/z/c, c) -> no\n        //       - matchOne(z/c, c) -> no\n        //       - matchOne(c, c) yes, hit\n        var fr = fi\n        var pr = pi + 1\n        if (pr === pl) {\n          this.debug('** at the end')\n          // a ** at the end will just swallow the rest.\n          // We have found a match.\n          // however, it will not swallow /.x, unless\n          // options.dot is set.\n          // . and .. are *never* matched by **, for explosively\n          // exponential reasons.\n          for (; fi < fl; fi++) {\n            if (\n              file[fi] === '.' ||\n              file[fi] === '..' ||\n              (!options.dot && file[fi].charAt(0) === '.')\n            )\n              return false\n          }\n          return true\n        }\n\n        // ok, let's see if we can swallow whatever we can.\n        while (fr < fl) {\n          var swallowee = file[fr]\n\n          this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n          // XXX remove this slice.  Just pass the start index.\n          if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n            this.debug('globstar found match!', fr, fl, swallowee)\n            // found a match.\n            return true\n          } else {\n            // can't swallow \".\" or \"..\" ever.\n            // can only swallow \".foo\" when explicitly asked.\n            if (\n              swallowee === '.' ||\n              swallowee === '..' ||\n              (!options.dot && swallowee.charAt(0) === '.')\n            ) {\n              this.debug('dot detected!', file, fr, pattern, pr)\n              break\n            }\n\n            // ** swallows a segment, and continue.\n            this.debug('globstar swallow a segment, and continue')\n            fr++\n          }\n        }\n\n        // no match was found.\n        // However, in partial mode, we can't say this is necessarily over.\n        /* c8 ignore start */\n        if (partial) {\n          // ran out of file\n          this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n          if (fr === fl) {\n            return true\n          }\n        }\n        /* c8 ignore stop */\n        return false\n      }\n\n      // something other than **\n      // non-magic patterns just have to match exactly\n      // patterns with magic have been turned into regexps.\n      let hit: boolean\n      if (typeof p === 'string') {\n        hit = f === p\n        this.debug('string match', p, f, hit)\n      } else {\n        hit = p.test(f)\n        this.debug('pattern match', p, f, hit)\n      }\n\n      if (!hit) return false\n    }\n\n    // Note: ending in / means that we'll get a final \"\"\n    // at the end of the pattern.  This can only match a\n    // corresponding \"\" at the end of the file.\n    // If the file ends in /, then it can only match a\n    // a pattern that ends in /, unless the pattern just\n    // doesn't have any more for it. But, a/b/ should *not*\n    // match \"a/b/*\", even though \"\" matches against the\n    // [^/]*? pattern, except in partial mode, where it might\n    // simply not be reached yet.\n    // However, a/b/ should still satisfy a/*\n\n    // now either we fell off the end of the pattern, or we're done.\n    if (fi === fl && pi === pl) {\n      // ran out of pattern and filename at the same time.\n      // an exact hit!\n      return true\n    } else if (fi === fl) {\n      // ran out of file, but still had pattern left.\n      // this is ok if we're doing the match as part of\n      // a glob fs traversal.\n      return partial\n    } else if (pi === pl) {\n      // ran out of pattern, still have file left.\n      // this is only acceptable if we're on the very last\n      // empty segment of a file with a trailing slash.\n      // a/* should match a/b/\n      return fi === fl - 1 && file[fi] === ''\n\n      /* c8 ignore start */\n    } else {\n      // should be unreachable.\n      throw new Error('wtf?')\n    }\n    /* c8 ignore stop */\n  }\n\n  braceExpand() {\n    return braceExpand(this.pattern, this.options)\n  }\n\n  parse(pattern: string): ParseReturn {\n    assertValidPattern(pattern)\n\n    const options = this.options\n\n    // shortcuts\n    if (pattern === '**') return GLOBSTAR\n    if (pattern === '') return ''\n\n    // far and away, the most common glob pattern parts are\n    // *, *.*, and *.<ext>  Add a fast check method for those.\n    let m: RegExpMatchArray | null\n    let fastTest: null | ((f: string) => boolean) = null\n    if ((m = pattern.match(starRE))) {\n      fastTest = options.dot ? starTestDot : starTest\n    } else if ((m = pattern.match(starDotExtRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? starDotExtTestNocaseDot\n            : starDotExtTestNocase\n          : options.dot\n          ? starDotExtTestDot\n          : starDotExtTest\n      )(m[1])\n    } else if ((m = pattern.match(qmarksRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? qmarksTestNocaseDot\n            : qmarksTestNocase\n          : options.dot\n          ? qmarksTestDot\n          : qmarksTest\n      )(m)\n    } else if ((m = pattern.match(starDotStarRE))) {\n      fastTest = options.dot ? starDotStarTestDot : starDotStarTest\n    } else if ((m = pattern.match(dotStarRE))) {\n      fastTest = dotStarTest\n    }\n\n    const re = AST.fromGlob(pattern, this.options).toMMPattern()\n    return fastTest ? Object.assign(re, { test: fastTest }) : re\n  }\n\n  makeRe() {\n    if (this.regexp || this.regexp === false) return this.regexp\n\n    // at this point, this.set is a 2d array of partial\n    // pattern strings, or \"**\".\n    //\n    // It's better to use .match().  This function shouldn't\n    // be used, really, but it's pretty convenient sometimes,\n    // when you just want to work with a regex.\n    const set = this.set\n\n    if (!set.length) {\n      this.regexp = false\n      return this.regexp\n    }\n    const options = this.options\n\n    const twoStar = options.noglobstar\n      ? star\n      : options.dot\n      ? twoStarDot\n      : twoStarNoDot\n    const flags = new Set(options.nocase ? ['i'] : [])\n\n    // regexpify non-globstar patterns\n    // if ** is only item, then we just do one twoStar\n    // if ** is first, and there are more, prepend (\\/|twoStar\\/)? to next\n    // if ** is last, append (\\/twoStar|) to previous\n    // if ** is in the middle, append (\\/|\\/twoStar\\/) to previous\n    // then filter out GLOBSTAR symbols\n    let re = set\n      .map(pattern => {\n        const pp: (string | typeof GLOBSTAR)[] = pattern.map(p => {\n          if (p instanceof RegExp) {\n            for (const f of p.flags.split('')) flags.add(f)\n          }\n          return typeof p === 'string'\n            ? regExpEscape(p)\n            : p === GLOBSTAR\n            ? GLOBSTAR\n            : p._src\n        }) as (string | typeof GLOBSTAR)[]\n        pp.forEach((p, i) => {\n          const next = pp[i + 1]\n          const prev = pp[i - 1]\n          if (p !== GLOBSTAR || prev === GLOBSTAR) {\n            return\n          }\n          if (prev === undefined) {\n            if (next !== undefined && next !== GLOBSTAR) {\n              pp[i + 1] = '(?:\\\\/|' + twoStar + '\\\\/)?' + next\n            } else {\n              pp[i] = twoStar\n            }\n          } else if (next === undefined) {\n            pp[i - 1] = prev + '(?:\\\\/|' + twoStar + ')?'\n          } else if (next !== GLOBSTAR) {\n            pp[i - 1] = prev + '(?:\\\\/|\\\\/' + twoStar + '\\\\/)' + next\n            pp[i + 1] = GLOBSTAR\n          }\n        })\n        return pp.filter(p => p !== GLOBSTAR).join('/')\n      })\n      .join('|')\n\n    // need to wrap in parens if we had more than one thing with |,\n    // otherwise only the first will be anchored to ^ and the last to $\n    const [open, close] = set.length > 1 ? ['(?:', ')'] : ['', '']\n    // must match entire pattern\n    // ending in a * or ** will make it less strict.\n    re = '^' + open + re + close + '$'\n\n    // can match anything, as long as it's not this.\n    if (this.negate) re = '^(?!' + re + ').+$'\n\n    try {\n      this.regexp = new RegExp(re, [...flags].join(''))\n      /* c8 ignore start */\n    } catch (ex) {\n      // should be impossible\n      this.regexp = false\n    }\n    /* c8 ignore stop */\n    return this.regexp\n  }\n\n  slashSplit(p: string) {\n    // if p starts with // on windows, we preserve that\n    // so that UNC paths aren't broken.  Otherwise, any number of\n    // / characters are coalesced into one, unless\n    // preserveMultipleSlashes is set to true.\n    if (this.preserveMultipleSlashes) {\n      return p.split('/')\n    } else if (this.isWindows && /^\\/\\/[^\\/]+/.test(p)) {\n      // add an extra '' for the one we lose\n      return ['', ...p.split(/\\/+/)]\n    } else {\n      return p.split(/\\/+/)\n    }\n  }\n\n  match(f: string, partial = this.partial) {\n    this.debug('match', f, this.pattern)\n    // short-circuit in the case of busted things.\n    // comments, etc.\n    if (this.comment) {\n      return false\n    }\n    if (this.empty) {\n      return f === ''\n    }\n\n    if (f === '/' && partial) {\n      return true\n    }\n\n    const options = this.options\n\n    // windows: need to use /, not \\\n    if (this.isWindows) {\n      f = f.split('\\\\').join('/')\n    }\n\n    // treat the test path as a set of pathparts.\n    const ff = this.slashSplit(f)\n    this.debug(this.pattern, 'split', ff)\n\n    // just ONE of the pattern sets in this.set needs to match\n    // in order for it to be valid.  If negating, then just one\n    // match means that we have failed.\n    // Either way, return on the first hit.\n\n    const set = this.set\n    this.debug(this.pattern, 'set', set)\n\n    // Find the basename of the path by looking for the last non-empty segment\n    let filename: string = ff[ff.length - 1]\n    if (!filename) {\n      for (let i = ff.length - 2; !filename && i >= 0; i--) {\n        filename = ff[i]\n      }\n    }\n\n    for (let i = 0; i < set.length; i++) {\n      const pattern = set[i]\n      let file = ff\n      if (options.matchBase && pattern.length === 1) {\n        file = [filename]\n      }\n      const hit = this.matchOne(file, pattern, partial)\n      if (hit) {\n        if (options.flipNegate) {\n          return true\n        }\n        return !this.negate\n      }\n    }\n\n    // didn't get any hits.  this is success if it's a negative\n    // pattern, failure otherwise.\n    if (options.flipNegate) {\n      return false\n    }\n    return this.negate\n  }\n\n  static defaults(def: MinimatchOptions) {\n    return minimatch.defaults(def).Minimatch\n  }\n}\n/* c8 ignore start */\nexport { AST } from './ast.js'\nexport { escape } from './escape.js'\nexport { unescape } from './unescape.js'\n/* c8 ignore stop */\nminimatch.AST = AST\nminimatch.Minimatch = Minimatch\nminimatch.escape = escape\nminimatch.unescape = unescape\n"]},"url":null,"sourceURL":null},"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/minimatch/dist/cjs/assert-valid-pattern.js":{"lineLengths":[13,62,36,37,41,38,47,5,46,51,5,2,48,48],"data":{"version":3,"file":"assert-valid-pattern.js","sourceRoot":"","sources":["file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/minimatch/src/assert-valid-pattern.ts"],"names":[],"mappings":";;;AAAA,MAAM,kBAAkB,GAAG,IAAI,GAAG,EAAE,CAAA;AAC7B,MAAM,kBAAkB,GAA2B,CACxD,OAAY,EACe,EAAE;IAC7B,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;QAC/B,MAAM,IAAI,SAAS,CAAC,iBAAiB,CAAC,CAAA;KACvC;IAED,IAAI,OAAO,CAAC,MAAM,GAAG,kBAAkB,EAAE;QACvC,MAAM,IAAI,SAAS,CAAC,qBAAqB,CAAC,CAAA;KAC3C;AACH,CAAC,CAAA;AAVY,QAAA,kBAAkB,sBAU9B","sourcesContent":["const MAX_PATTERN_LENGTH = 1024 * 64\nexport const assertValidPattern: (pattern: any) => void = (\n  pattern: any\n): asserts pattern is string => {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/minimatch/dist/cjs/ast.js":{"lineLengths":[13,30,62,21,65,47,49,42,65,64,42,71,53,29,71,69,69,44,58,38,46,74,32,21,32,26,74,38,33,73,59,11,9,10,14,19,16,12,17,10,24,13,14,54,43,22,45,25,42,17,34,30,62,76,65,52,34,74,5,20,29,41,34,28,38,38,25,37,47,9,80,30,5,31,16,41,34,25,79,9,14,36,83,9,5,17,29,32,56,29,24,28,48,24,32,14,40,31,25,81,22,31,24,89,50,45,55,76,25,44,50,21,17,23,31,13,9,20,5,20,32,25,25,33,85,54,13,32,32,9,5,14,38,84,63,41,28,27,35,74,25,9,19,5,15,32,24,58,37,25,36,24,81,31,53,35,58,29,13,9,20,5,13,32,24,39,24,35,25,23,41,50,29,65,28,44,5,18,37,28,12,40,5,19,45,38,24,9,17,5,42,29,28,28,29,32,65,24,25,36,42,75,42,45,41,29,29,17,30,47,53,44,25,21,80,40,21,29,29,17,37,35,35,37,29,29,17,78,34,29,48,56,34,29,17,25,13,26,21,9,48,31,24,38,25,21,32,38,71,38,41,37,25,25,13,26,43,49,40,21,17,76,36,17,25,25,13,33,31,31,33,25,25,13,60,31,25,45,31,52,25,13,28,31,25,33,42,25,13,28,60,41,17,31,25,41,25,13,21,9,29,74,41,24,34,46,17,5,44,54,48,19,5,72,21,19,40,29,32,44,28,37,66,71,75,46,36,29,36,49,59,24,24,9,77,60,21,24,11,5,73,73,77,74,73,76,72,62,6,43,32,60,43,50,14,32,16,6,71,28,53,34,66,43,50,14,52,21,6,78,79,79,19,6,76,64,69,32,66,49,56,6,75,68,6,74,41,6,78,79,6,22,51,48,75,6,81,78,74,42,6,77,72,46,6,31,74,73,75,30,52,32,29,25,59,35,27,70,64,49,60,51,26,14,26,27,33,57,83,67,84,67,100,42,52,78,44,43,79,58,74,80,76,81,83,68,86,92,21,17,13,73,25,31,41,45,34,13,44,20,22,49,52,28,14,9,73,73,44,64,31,62,44,75,79,39,38,30,29,39,83,9,43,72,16,40,38,32,9,29,56,9,62,23,50,77,9,14,43,67,26,81,30,27,35,25,39,30,61,33,65,38,50,41,9,16,18,46,48,24,10,5,25,26,23,59,33,40,64,13,32,77,68,47,22,10,66,23,5,56,29,20,26,47,37,27,33,58,25,13,29,44,33,17,22,36,17,25,13,28,106,31,30,47,38,49,29,17,13,28,44,38,20,31,32,25,13,28,28,32,25,13,34,9,74,5,1,18,31],"data":{"version":3,"file":"ast.js","sourceRoot":"","sources":["file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/minimatch/src/ast.ts"],"names":[],"mappings":"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","sourcesContent":["// parse a single path portion\n\nimport { parseClass } from './brace-expressions.js'\nimport { MinimatchOptions, MMRegExp } from './index.js'\nimport { unescape } from './unescape.js'\n\n// classes [] are handled by the parseClass method\n// for positive extglobs, we sub-parse the contents, and combine,\n// with the appropriate regexp close.\n// for negative extglobs, we sub-parse the contents, but then\n// have to include the rest of the pattern, then the parent, etc.,\n// as the thing that cannot be because RegExp negative lookaheads\n// are different from globs.\n//\n// So for example:\n// a@(i|w!(x|y)z|j)b => ^a(i|w((!?(x|y)zb).*)z|j)b$\n//   1   2 3   4 5 6      1   2    3   46      5 6\n//\n// Assembling the extglob requires not just the negated patterns themselves,\n// but also anything following the negative patterns up to the boundary\n// of the current pattern, plus anything following in the parent pattern.\n//\n//\n// So, first, we parse the string into an AST of extglobs, without turning\n// anything into regexps yet.\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y']}, 'z'], ['j']]}, 'b']\n//\n// Then, for all the negative extglobs, we append whatever comes after in\n// each parent as their tail\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y'], 'z', 'b'}, 'z'], ['j']]}, 'b']\n//\n// Lastly, we turn each of these pieces into a regexp, and join\n//\n//                                 v----- .* because there's more following,\n//                                 v    v  otherwise, .+ because it must be\n//                                 v    v  *something* there.\n// ['^a', {@ ['i', 'w(?:(!?(?:x|y).*zb$).*)z', 'j' ]}, 'b$']\n//   copy what follows into here--^^^^^\n// ['^a', '(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)', 'b$']\n// ['^a(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)b$']\n\nexport type ExtglobType = '!' | '?' | '+' | '*' | '@'\nconst types = new Set<ExtglobType>(['!', '?', '+', '*', '@'])\nconst isExtglobType = (c: string): c is ExtglobType =>\n  types.has(c as ExtglobType)\n\n// Patterns that get prepended to bind to the start of either the\n// entire string, or just a single path portion, to prevent dots\n// and/or traversal patterns, when needed.\n// Exts don't need the ^ or / bit, because the root binds that already.\nconst startNoTraversal = '(?!(?:^|/)\\\\.\\\\.?(?:$|/))'\nconst startNoDot = '(?!\\\\.)'\n\n// characters that indicate a start of pattern needs the \"no dots\" bit,\n// because a dot *might* be matched. ( is not in the list, because in\n// the case of a child extglob, it will handle the prevention itself.\nconst addPatternStart = new Set(['[', '.'])\n// cases where traversal is A-OK, no dot prevention needed\nconst justDots = new Set(['..', '.'])\nconst reSpecials = new Set('().*{}+?[]^$\\\\!')\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// any single thing other than /\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n// use + when we need to ensure that *something* matches, because the * is\n// the only thing in the path portion.\nconst starNoEmpty = qmark + '+?'\n\n// remove the \\ chars that we added if we end up doing a nonmagic compare\n// const deslash = (s: string) => s.replace(/\\\\(.)/g, '$1')\n\nexport class AST {\n  type: ExtglobType | null\n  readonly #root: AST\n\n  #hasMagic?: boolean\n  #uflag: boolean = false\n  #parts: (string | AST)[] = []\n  readonly #parent?: AST\n  readonly #parentIndex: number\n  #negs: AST[]\n  #filledNegs: boolean = false\n  #options: MinimatchOptions\n  #toString?: string\n  // set to true if it's an extglob with no children\n  // (which really means one child of '')\n  #emptyExt: boolean = false\n\n  constructor(\n    type: ExtglobType | null,\n    parent?: AST,\n    options: MinimatchOptions = {}\n  ) {\n    this.type = type\n    // extglobs are inherently magical\n    if (type) this.#hasMagic = true\n    this.#parent = parent\n    this.#root = this.#parent ? this.#parent.#root : this\n    this.#options = this.#root === this ? options : this.#root.#options\n    this.#negs = this.#root === this ? [] : this.#root.#negs\n    if (type === '!' && !this.#root.#filledNegs) this.#negs.push(this)\n    this.#parentIndex = this.#parent ? this.#parent.#parts.length : 0\n  }\n\n  get hasMagic(): boolean | undefined {\n    /* c8 ignore start */\n    if (this.#hasMagic !== undefined) return this.#hasMagic\n    /* c8 ignore stop */\n    for (const p of this.#parts) {\n      if (typeof p === 'string') continue\n      if (p.type || p.hasMagic) return (this.#hasMagic = true)\n    }\n    // note: will be undefined until we generate the regexp src and find out\n    return this.#hasMagic\n  }\n\n  // reconstructs the pattern\n  toString(): string {\n    if (this.#toString !== undefined) return this.#toString\n    if (!this.type) {\n      return (this.#toString = this.#parts.map(p => String(p)).join(''))\n    } else {\n      return (this.#toString =\n        this.type + '(' + this.#parts.map(p => String(p)).join('|') + ')')\n    }\n  }\n\n  #fillNegs() {\n    /* c8 ignore start */\n    if (this !== this.#root) throw new Error('should only call on root')\n    if (this.#filledNegs) return this\n    /* c8 ignore stop */\n\n    // call toString() once to fill this out\n    this.toString()\n    this.#filledNegs = true\n    let n: AST | undefined\n    while ((n = this.#negs.pop())) {\n      if (n.type !== '!') continue\n      // walk up the tree, appending everthing that comes AFTER parentIndex\n      let p: AST | undefined = n\n      let pp = p.#parent\n      while (pp) {\n        for (\n          let i = p.#parentIndex + 1;\n          !pp.type && i < pp.#parts.length;\n          i++\n        ) {\n          for (const part of n.#parts) {\n            /* c8 ignore start */\n            if (typeof part === 'string') {\n              throw new Error('string part in extglob AST??')\n            }\n            /* c8 ignore stop */\n            part.copyIn(pp.#parts[i])\n          }\n        }\n        p = pp\n        pp = p.#parent\n      }\n    }\n    return this\n  }\n\n  push(...parts: (string | AST)[]) {\n    for (const p of parts) {\n      if (p === '') continue\n      /* c8 ignore start */\n      if (typeof p !== 'string' && !(p instanceof AST && p.#parent === this)) {\n        throw new Error('invalid part: ' + p)\n      }\n      /* c8 ignore stop */\n      this.#parts.push(p)\n    }\n  }\n\n  toJSON() {\n    const ret: any[] =\n      this.type === null\n        ? this.#parts.slice().map(p => (typeof p === 'string' ? p : p.toJSON()))\n        : [this.type, ...this.#parts.map(p => (p as AST).toJSON())]\n    if (this.isStart() && !this.type) ret.unshift([])\n    if (\n      this.isEnd() &&\n      (this === this.#root ||\n        (this.#root.#filledNegs && this.#parent?.type === '!'))\n    ) {\n      ret.push({})\n    }\n    return ret\n  }\n\n  isStart(): boolean {\n    if (this.#root === this) return true\n    // if (this.type) return !!this.#parent?.isStart()\n    if (!this.#parent?.isStart()) return false\n    if (this.#parentIndex === 0) return true\n    // if everything AHEAD of this is a negation, then it's still the \"start\"\n    const p = this.#parent\n    for (let i = 0; i < this.#parentIndex; i++) {\n      const pp = p.#parts[i]\n      if (!(pp instanceof AST && pp.type === '!')) {\n        return false\n      }\n    }\n    return true\n  }\n\n  isEnd(): boolean {\n    if (this.#root === this) return true\n    if (this.#parent?.type === '!') return true\n    if (!this.#parent?.isEnd()) return false\n    if (!this.type) return this.#parent?.isEnd()\n    // if not root, it'll always have a parent\n    /* c8 ignore start */\n    const pl = this.#parent ? this.#parent.#parts.length : 0\n    /* c8 ignore stop */\n    return this.#parentIndex === pl - 1\n  }\n\n  copyIn(part: AST | string) {\n    if (typeof part === 'string') this.push(part)\n    else this.push(part.clone(this))\n  }\n\n  clone(parent: AST) {\n    const c = new AST(this.type, parent)\n    for (const p of this.#parts) {\n      c.copyIn(p)\n    }\n    return c\n  }\n\n  static #parseAST(\n    str: string,\n    ast: AST,\n    pos: number,\n    opt: MinimatchOptions\n  ): number {\n    let escaping = false\n    let inBrace = false\n    let braceStart = -1\n    let braceNeg = false\n    if (ast.type === null) {\n      // outside of a extglob, append until we find a start\n      let i = pos\n      let acc = ''\n      while (i < str.length) {\n        const c = str.charAt(i++)\n        // still accumulate escapes at this point, but we do ignore\n        // starts that are escaped\n        if (escaping || c === '\\\\') {\n          escaping = !escaping\n          acc += c\n          continue\n        }\n\n        if (inBrace) {\n          if (i === braceStart + 1) {\n            if (c === '^' || c === '!') {\n              braceNeg = true\n            }\n          } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n            inBrace = false\n          }\n          acc += c\n          continue\n        } else if (c === '[') {\n          inBrace = true\n          braceStart = i\n          braceNeg = false\n          acc += c\n          continue\n        }\n\n        if (!opt.noext && isExtglobType(c) && str.charAt(i) === '(') {\n          ast.push(acc)\n          acc = ''\n          const ext = new AST(c, ast)\n          i = AST.#parseAST(str, ext, i, opt)\n          ast.push(ext)\n          continue\n        }\n        acc += c\n      }\n      ast.push(acc)\n      return i\n    }\n\n    // some kind of extglob, pos is at the (\n    // find the next | or )\n    let i = pos + 1\n    let part = new AST(null, ast)\n    const parts: AST[] = []\n    let acc = ''\n    while (i < str.length) {\n      const c = str.charAt(i++)\n      // still accumulate escapes at this point, but we do ignore\n      // starts that are escaped\n      if (escaping || c === '\\\\') {\n        escaping = !escaping\n        acc += c\n        continue\n      }\n\n      if (inBrace) {\n        if (i === braceStart + 1) {\n          if (c === '^' || c === '!') {\n            braceNeg = true\n          }\n        } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n          inBrace = false\n        }\n        acc += c\n        continue\n      } else if (c === '[') {\n        inBrace = true\n        braceStart = i\n        braceNeg = false\n        acc += c\n        continue\n      }\n\n      if (isExtglobType(c) && str.charAt(i) === '(') {\n        part.push(acc)\n        acc = ''\n        const ext = new AST(c, part)\n        part.push(ext)\n        i = AST.#parseAST(str, ext, i, opt)\n        continue\n      }\n      if (c === '|') {\n        part.push(acc)\n        acc = ''\n        parts.push(part)\n        part = new AST(null, ast)\n        continue\n      }\n      if (c === ')') {\n        if (acc === '' && ast.#parts.length === 0) {\n          ast.#emptyExt = true\n        }\n        part.push(acc)\n        acc = ''\n        ast.push(...parts, part)\n        return i\n      }\n      acc += c\n    }\n\n    // unfinished extglob\n    // if we got here, it was a malformed extglob! not an extglob, but\n    // maybe something else in there.\n    ast.type = null\n    ast.#hasMagic = undefined\n    ast.#parts = [str.substring(pos - 1)]\n    return i\n  }\n\n  static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n    const ast = new AST(null, undefined, options)\n    AST.#parseAST(pattern, ast, 0, options)\n    return ast\n  }\n\n  // returns the regular expression if there's magic, or the unescaped\n  // string if not.\n  toMMPattern(): MMRegExp | string {\n    // should only be called on root\n    /* c8 ignore start */\n    if (this !== this.#root) return this.#root.toMMPattern()\n    /* c8 ignore stop */\n    const glob = this.toString()\n    const [re, body, hasMagic, uflag] = this.toRegExpSource()\n    // if we're in nocase mode, and not nocaseMagicOnly, then we do\n    // still need a regular expression if we have to case-insensitively\n    // match capital/lowercase characters.\n    const anyMagic =\n      hasMagic ||\n      this.#hasMagic ||\n      (this.#options.nocase &&\n        !this.#options.nocaseMagicOnly &&\n        glob.toUpperCase() !== glob.toLowerCase())\n    if (!anyMagic) {\n      return body\n    }\n\n    const flags = (this.#options.nocase ? 'i' : '') + (uflag ? 'u' : '')\n    return Object.assign(new RegExp(`^${re}$`, flags), {\n      _src: re,\n      _glob: glob,\n    })\n  }\n\n  // returns the string match, the regexp source, whether there's magic\n  // in the regexp (so a regular expression is required) and whether or\n  // not the uflag is needed for the regular expression (for posix classes)\n  // TODO: instead of injecting the start/end at this point, just return\n  // the BODY of the regexp, along with the start/end portions suitable\n  // for binding the start/end in either a joined full-path makeRe context\n  // (where we bind to (^|/), or a standalone matchPart context (where\n  // we bind to ^, and not /).  Otherwise slashes get duped!\n  //\n  // In part-matching mode, the start is:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: ^(?!\\.\\.?$)\n  // - if dots allowed or not possible: ^\n  // - if dots possible and not allowed: ^(?!\\.)\n  // end is:\n  // - if not isEnd(): nothing\n  // - else: $\n  //\n  // In full-path matching mode, we put the slash at the START of the\n  // pattern, so start is:\n  // - if first pattern: same as part-matching mode\n  // - if not isStart(): nothing\n  // - if traversal possible, but not allowed: /(?!\\.\\.?(?:$|/))\n  // - if dots allowed or not possible: /\n  // - if dots possible and not allowed: /(?!\\.)\n  // end is:\n  // - if last pattern, same as part-matching mode\n  // - else nothing\n  //\n  // Always put the (?:$|/) on negated tails, though, because that has to be\n  // there to bind the end of the negated pattern portion, and it's easier to\n  // just stick it in now rather than try to inject it later in the middle of\n  // the pattern.\n  //\n  // We can just always return the same end, and leave it up to the caller\n  // to know whether it's going to be used joined or in parts.\n  // And, if the start is adjusted slightly, can do the same there:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: (?:/|^)(?!\\.\\.?$)\n  // - if dots allowed or not possible: (?:/|^)\n  // - if dots possible and not allowed: (?:/|^)(?!\\.)\n  //\n  // But it's better to have a simpler binding without a conditional, for\n  // performance, so probably better to return both start options.\n  //\n  // Then the caller just ignores the end if it's not the first pattern,\n  // and the start always gets applied.\n  //\n  // But that's always going to be $ if it's the ending pattern, or nothing,\n  // so the caller can just attach $ at the end of the pattern when building.\n  //\n  // So the todo is:\n  // - better detect what kind of start is needed\n  // - return both flavors of starting pattern\n  // - attach $ at the end of the pattern when creating the actual RegExp\n  //\n  // Ah, but wait, no, that all only applies to the root when the first pattern\n  // is not an extglob. If the first pattern IS an extglob, then we need all\n  // that dot prevention biz to live in the extglob portions, because eg\n  // +(*|.x*) can match .xy but not .yx.\n  //\n  // So, return the two flavors if it's #root and the first child is not an\n  // AST, otherwise leave it to the child AST to handle it, and there,\n  // use the (?:^|/) style of start binding.\n  //\n  // Even simplified further:\n  // - Since the start for a join is eg /(?!\\.) and the start for a part\n  // is ^(?!\\.), we can just prepend (?!\\.) to the pattern (either root\n  // or start or whatever) and prepend ^ or / at the Regexp construction.\n  toRegExpSource(\n    allowDot?: boolean\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    const dot = allowDot ?? !!this.#options.dot\n    if (this.#root === this) this.#fillNegs()\n    if (!this.type) {\n      const noEmpty = this.isStart() && this.isEnd()\n      const src = this.#parts\n        .map(p => {\n          const [re, _, hasMagic, uflag] =\n            typeof p === 'string'\n              ? AST.#parseGlob(p, this.#hasMagic, noEmpty)\n              : p.toRegExpSource(allowDot)\n          this.#hasMagic = this.#hasMagic || hasMagic\n          this.#uflag = this.#uflag || uflag\n          return re\n        })\n        .join('')\n\n      let start = ''\n      if (this.isStart()) {\n        if (typeof this.#parts[0] === 'string') {\n          // this is the string that will match the start of the pattern,\n          // so we need to protect against dots and such.\n\n          // '.' and '..' cannot match unless the pattern is that exactly,\n          // even if it starts with . or dot:true is set.\n          const dotTravAllowed =\n            this.#parts.length === 1 && justDots.has(this.#parts[0])\n          if (!dotTravAllowed) {\n            const aps = addPatternStart\n            // check if we have a possibility of matching . or ..,\n            // and prevent that.\n            const needNoTrav =\n              // dots are allowed, and the pattern starts with [ or .\n              (dot && aps.has(src.charAt(0))) ||\n              // the pattern starts with \\., and then [ or .\n              (src.startsWith('\\\\.') && aps.has(src.charAt(2))) ||\n              // the pattern starts with \\.\\., and then [ or .\n              (src.startsWith('\\\\.\\\\.') && aps.has(src.charAt(4)))\n            // no need to prevent dots if it can't match a dot, or if a\n            // sub-pattern will be preventing it anyway.\n            const needNoDot = !dot && !allowDot && aps.has(src.charAt(0))\n\n            start = needNoTrav ? startNoTraversal : needNoDot ? startNoDot : ''\n          }\n        }\n      }\n\n      // append the \"end of path portion\" pattern to negation tails\n      let end = ''\n      if (\n        this.isEnd() &&\n        this.#root.#filledNegs &&\n        this.#parent?.type === '!'\n      ) {\n        end = '(?:$|\\\\/)'\n      }\n      const final = start + src + end\n      return [\n        final,\n        unescape(src),\n        (this.#hasMagic = !!this.#hasMagic),\n        this.#uflag,\n      ]\n    }\n\n    // We need to calculate the body *twice* if it's a repeat pattern\n    // at the start, once in nodot mode, then again in dot mode, so a\n    // pattern like *(?) can match 'x.y'\n\n    const repeated = this.type === '*' || this.type === '+'\n    // some kind of extglob\n    const start = this.type === '!' ? '(?:(?!(?:' : '(?:'\n    let body = this.#partsToRegExp(dot)\n\n    if (this.isStart() && this.isEnd() && !body && this.type !== '!') {\n      // invalid extglob, has to at least be *something* present, if it's\n      // the entire path portion.\n      const s = this.toString()\n      this.#parts = [s]\n      this.type = null\n      this.#hasMagic = undefined\n      return [s, unescape(this.toString()), false, false]\n    }\n\n    // XXX abstract out this map method\n    let bodyDotAllowed =\n      !repeated || allowDot || dot || !startNoDot\n        ? ''\n        : this.#partsToRegExp(true)\n    if (bodyDotAllowed === body) {\n      bodyDotAllowed = ''\n    }\n    if (bodyDotAllowed) {\n      body = `(?:${body})(?:${bodyDotAllowed})*?`\n    }\n\n    // an empty !() is exactly equivalent to a starNoEmpty\n    let final = ''\n    if (this.type === '!' && this.#emptyExt) {\n      final = (this.isStart() && !dot ? startNoDot : '') + starNoEmpty\n    } else {\n      const close =\n        this.type === '!'\n          ? // !() must match something,but !(x) can match ''\n            '))' +\n            (this.isStart() && !dot && !allowDot ? startNoDot : '') +\n            star +\n            ')'\n          : this.type === '@'\n          ? ')'\n          : this.type === '?'\n          ? ')?'\n          : this.type === '+' && bodyDotAllowed\n          ? ')'\n          : this.type === '*' && bodyDotAllowed\n          ? `)?`\n          : `)${this.type}`\n      final = start + body + close\n    }\n    return [\n      final,\n      unescape(body),\n      (this.#hasMagic = !!this.#hasMagic),\n      this.#uflag,\n    ]\n  }\n\n  #partsToRegExp(dot: boolean) {\n    return this.#parts\n      .map(p => {\n        // extglob ASTs should only contain parent ASTs\n        /* c8 ignore start */\n        if (typeof p === 'string') {\n          throw new Error('string type in extglob ast??')\n        }\n        /* c8 ignore stop */\n        // can ignore hasMagic, because extglobs are already always magic\n        const [re, _, _hasMagic, uflag] = p.toRegExpSource(dot)\n        this.#uflag = this.#uflag || uflag\n        return re\n      })\n      .filter(p => !(this.isStart() && this.isEnd()) || !!p)\n      .join('|')\n  }\n\n  static #parseGlob(\n    glob: string,\n    hasMagic: boolean | undefined,\n    noEmpty: boolean = false\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    let escaping = false\n    let re = ''\n    let uflag = false\n    for (let i = 0; i < glob.length; i++) {\n      const c = glob.charAt(i)\n      if (escaping) {\n        escaping = false\n        re += (reSpecials.has(c) ? '\\\\' : '') + c\n        continue\n      }\n      if (c === '\\\\') {\n        if (i === glob.length - 1) {\n          re += '\\\\\\\\'\n        } else {\n          escaping = true\n        }\n        continue\n      }\n      if (c === '[') {\n        const [src, needUflag, consumed, magic] = parseClass(glob, i)\n        if (consumed) {\n          re += src\n          uflag = uflag || needUflag\n          i += consumed - 1\n          hasMagic = hasMagic || magic\n          continue\n        }\n      }\n      if (c === '*') {\n        if (noEmpty && glob === '*') re += starNoEmpty\n        else re += star\n        hasMagic = true\n        continue\n      }\n      if (c === '?') {\n        re += qmark\n        hasMagic = true\n        continue\n      }\n      re += regExpEscape(c)\n    }\n    return [re, unescape(glob), !!hasMagic, uflag]\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/minimatch/dist/cjs/brace-expressions.js":{"lineLengths":[13,72,40,62,28,62,22,48,41,50,38,35,35,46,35,34,34,49,35,54,39,2,63,19,58,37,74,60,51,63,66,67,41,65,29,40,25,25,35,53,5,24,22,20,20,25,22,25,23,21,24,36,33,56,26,16,21,9,49,27,18,9,24,25,28,32,20,25,13,70,9,37,72,79,46,67,37,70,21,36,28,40,24,42,39,35,17,13,9,56,25,25,66,31,33,76,13,40,44,13,28,16,21,9,45,70,43,46,19,21,9,42,27,19,21,9,60,36,12,5,21,62,55,37,5,68,70,41,54,5,77,74,77,74,28,30,35,18,75,61,5,77,73,45,43,23,21,20,45,2,32,45],"data":{"version":3,"file":"brace-expressions.js","sourceRoot":"","sources":["file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/minimatch/src/brace-expressions.ts"],"names":[],"mappings":"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","sourcesContent":["// translate the various posix character classes into unicode properties\n// this works across all unicode locales\n\n// { <posix class>: [<translation>, /u flag required, negated]\nconst posixClasses: { [k: string]: [e: string, u: boolean, n?: boolean] } = {\n  '[:alnum:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}', true],\n  '[:alpha:]': ['\\\\p{L}\\\\p{Nl}', true],\n  '[:ascii:]': ['\\\\x' + '00-\\\\x' + '7f', false],\n  '[:blank:]': ['\\\\p{Zs}\\\\t', true],\n  '[:cntrl:]': ['\\\\p{Cc}', true],\n  '[:digit:]': ['\\\\p{Nd}', true],\n  '[:graph:]': ['\\\\p{Z}\\\\p{C}', true, true],\n  '[:lower:]': ['\\\\p{Ll}', true],\n  '[:print:]': ['\\\\p{C}', true],\n  '[:punct:]': ['\\\\p{P}', true],\n  '[:space:]': ['\\\\p{Z}\\\\t\\\\r\\\\n\\\\v\\\\f', true],\n  '[:upper:]': ['\\\\p{Lu}', true],\n  '[:word:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}\\\\p{Pc}', true],\n  '[:xdigit:]': ['A-Fa-f0-9', false],\n}\n\n// only need to escape a few things inside of brace expressions\n// escapes: [ \\ ] -\nconst braceEscape = (s: string) => s.replace(/[[\\]\\\\-]/g, '\\\\$&')\n// escape all regexp magic characters\nconst regexpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// everything has already been escaped, we just have to join\nconst rangesToString = (ranges: string[]): string => ranges.join('')\n\nexport type ParseClassResult = [\n  src: string,\n  uFlag: boolean,\n  consumed: number,\n  hasMagic: boolean\n]\n\n// takes a glob string at a posix brace expression, and returns\n// an equivalent regular expression source, and boolean indicating\n// whether the /u flag needs to be applied, and the number of chars\n// consumed to parse the character class.\n// This also removes out of order ranges, and returns ($.) if the\n// entire class just no good.\nexport const parseClass = (\n  glob: string,\n  position: number\n): ParseClassResult => {\n  const pos = position\n  /* c8 ignore start */\n  if (glob.charAt(pos) !== '[') {\n    throw new Error('not in a brace expression')\n  }\n  /* c8 ignore stop */\n  const ranges: string[] = []\n  const negs: string[] = []\n\n  let i = pos + 1\n  let sawStart = false\n  let uflag = false\n  let escaping = false\n  let negate = false\n  let endPos = pos\n  let rangeStart = ''\n  WHILE: while (i < glob.length) {\n    const c = glob.charAt(i)\n    if ((c === '!' || c === '^') && i === pos + 1) {\n      negate = true\n      i++\n      continue\n    }\n\n    if (c === ']' && sawStart && !escaping) {\n      endPos = i + 1\n      break\n    }\n\n    sawStart = true\n    if (c === '\\\\') {\n      if (!escaping) {\n        escaping = true\n        i++\n        continue\n      }\n      // escaped \\ char, fall through and treat like normal char\n    }\n    if (c === '[' && !escaping) {\n      // either a posix class, a collation equivalent, or just a [\n      for (const [cls, [unip, u, neg]] of Object.entries(posixClasses)) {\n        if (glob.startsWith(cls, i)) {\n          // invalid, [a-[] is fine, but not [a-[:alpha]]\n          if (rangeStart) {\n            return ['$.', false, glob.length - pos, true]\n          }\n          i += cls.length\n          if (neg) negs.push(unip)\n          else ranges.push(unip)\n          uflag = uflag || u\n          continue WHILE\n        }\n      }\n    }\n\n    // now it's just a normal character, effectively\n    escaping = false\n    if (rangeStart) {\n      // throw this range away if it's not valid, but others\n      // can still match.\n      if (c > rangeStart) {\n        ranges.push(braceEscape(rangeStart) + '-' + braceEscape(c))\n      } else if (c === rangeStart) {\n        ranges.push(braceEscape(c))\n      }\n      rangeStart = ''\n      i++\n      continue\n    }\n\n    // now might be the start of a range.\n    // can be either c-d or c-] or c<more...>] or c] at this point\n    if (glob.startsWith('-]', i + 1)) {\n      ranges.push(braceEscape(c + '-'))\n      i += 2\n      continue\n    }\n    if (glob.startsWith('-', i + 1)) {\n      rangeStart = c\n      i += 2\n      continue\n    }\n\n    // not the start of a range, just a single character\n    ranges.push(braceEscape(c))\n    i++\n  }\n\n  if (endPos < i) {\n    // didn't see the end of the class, not a valid class,\n    // but might still be valid as a literal match.\n    return ['', false, 0, false]\n  }\n\n  // if we got no ranges and no negates, then we have a range that\n  // cannot possibly match anything, and that poisons the whole glob\n  if (!ranges.length && !negs.length) {\n    return ['$.', false, glob.length - pos, true]\n  }\n\n  // if we got one positive range, and it's a single character, then that's\n  // not actually a magic pattern, it's just that one literal character.\n  // we should not treat that as \"magic\", we should just return the literal\n  // character. [_] is a perfectly valid way to escape glob magic chars.\n  if (\n    negs.length === 0 &&\n    ranges.length === 1 &&\n    /^\\\\?.$/.test(ranges[0]) &&\n    !negate\n  ) {\n    const r = ranges[0].length === 2 ? ranges[0].slice(-1) : ranges[0]\n    return [regexpEscape(r), false, endPos - pos, false]\n  }\n\n  const sranges = '[' + (negate ? '^' : '') + rangesToString(ranges) + ']'\n  const snegs = '[' + (negate ? '' : '^') + rangesToString(negs) + ']'\n  const comb =\n    ranges.length && negs.length\n      ? '(' + sranges + '|' + snegs + ')'\n      : ranges.length\n      ? sranges\n      : snegs\n\n  return [comb, uflag, endPos - pos, true]\n}\n"]},"url":null,"sourceURL":null},"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/minimatch/dist/cjs/unescape.js":{"lineLengths":[13,62,26,3,64,2,72,77,72,66,2,70,33,2,77,16,3,65,31,43,85,2,28,36],"data":{"version":3,"file":"unescape.js","sourceRoot":"","sources":["file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/minimatch/src/unescape.ts"],"names":[],"mappings":";;;AACA;;;;;;;;;;;;;GAaG;AACI,MAAM,QAAQ,GAAG,CACtB,CAAS,EACT,EACE,oBAAoB,GAAG,KAAK,MACsB,EAAE,EACtD,EAAE;IACF,OAAO,oBAAoB;QACzB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC;QACnC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,2BAA2B,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAA;AAChF,CAAC,CAAA;AATY,QAAA,QAAQ,YASpB","sourcesContent":["import { MinimatchOptions } from './index.js'\n/**\n * Un-escape a string that has been escaped with {@link escape}.\n *\n * If the {@link windowsPathsNoEscape} option is used, then square-brace\n * escapes are removed, but not backslash escapes.  For example, it will turn\n * the string `'[*]'` into `*`, but it will not turn `'\\\\*'` into `'*'`,\n * becuase `\\` is a path separator in `windowsPathsNoEscape` mode.\n *\n * When `windowsPathsNoEscape` is not set, then both brace escapes and\n * backslash escapes are removed.\n *\n * Slashes (and backslashes in `windowsPathsNoEscape` mode) cannot be escaped\n * or unescaped.\n */\nexport const unescape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  return windowsPathsNoEscape\n    ? s.replace(/\\[([^\\/\\\\])\\]/g, '$1')\n    : s.replace(/((?!\\\\).|^)\\[([^\\/\\\\])\\]/g, '$1$2').replace(/\\\\([^\\/])/g, '$1')\n}\n"]},"url":null,"sourceURL":null},"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/minimatch/dist/cjs/escape.js":{"lineLengths":[13,62,24,3,49,2,73,75,74,75,73,3,63,60,64,58,31,41,44,2,24,34],"data":{"version":3,"file":"escape.js","sourceRoot":"","sources":["file:///home/gcadoret/www/lcov-reporter/node_modules/glob/node_modules/minimatch/src/escape.ts"],"names":[],"mappings":";;;AACA;;;;;;;;GAQG;AACI,MAAM,MAAM,GAAG,CACpB,CAAS,EACT,EACE,oBAAoB,GAAG,KAAK,MACsB,EAAE,EACtD,EAAE;IACF,wDAAwD;IACxD,4DAA4D;IAC5D,sDAAsD;IACtD,OAAO,oBAAoB;QACzB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC;QACjC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,MAAM,CAAC,CAAA;AACvC,CAAC,CAAA;AAZY,QAAA,MAAM,UAYlB","sourcesContent":["import { MinimatchOptions } from './index.js'\n/**\n * Escape all magic characters in a glob pattern.\n *\n * If the {@link windowsPathsNoEscape | GlobOptions.windowsPathsNoEscape}\n * option is used, then characters are escaped by wrapping in `[]`, because\n * a magic character wrapped in a character class can only be satisfied by\n * that exact character.  In this mode, `\\` is _not_ escaped, because it is\n * not interpreted as a magic character, but instead as a path separator.\n */\nexport const escape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  // don't need to escape +@! because we escape the parens\n  // that make those magic, and escaping ! as [!] isn't valid,\n  // because [!]] is a valid glob class meaning not ']'.\n  return windowsPathsNoEscape\n    ? s.replace(/[?*()[\\]]/g, '[$&]')\n    : s.replace(/[?*()[\\]\\\\]/g, '\\\\$&')\n}\n"]},"url":null,"sourceURL":null},"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/dist/cjs/src/glob.js":{"lineLengths":[13,62,22,41,45,29,45,43,44,48,54,14,40,22,14,3,54,3,12,13,8,9,8,16,11,11,18,9,14,13,12,11,10,10,15,12,13,13,11,9,11,25,18,7,47,7,9,7,60,7,13,7,65,6,61,6,62,71,37,6,71,13,7,32,29,18,57,28,50,34,36,30,46,34,32,24,26,9,77,58,9,34,30,50,38,34,40,38,44,42,23,73,32,34,64,74,9,42,32,9,35,42,50,40,62,9,29,34,71,13,76,9,31,57,57,26,38,44,53,84,13,9,14,52,47,44,52,35,55,51,48,36,28,15,9,41,70,66,69,42,88,21,47,20,26,38,34,32,28,28,30,27,33,36,60,37,10,77,62,34,40,23,21,50,81,11,5,18,74,73,79,46,16,82,29,52,61,31,40,36,23,10,5,16,16,75,29,52,61,31,40,36,26,10,5,14,75,25,48,57,27,36,32,20,5,18,75,25,48,57,27,36,32,24,5,7,64,33,7,19,52,5,25,34,5,7,71,33,7,15,53,5,30,30,5,1,20,32],"data":{"version":3,"file":"glob.js","sourceRoot":"","sources":["file:///home/gcadoret/www/lcov-reporter/node_modules/glob/src/glob.ts"],"names":[],"mappings":"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","sourcesContent":["import { Minimatch, MinimatchOptions } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport {\n  FSOption,\n  Path,\n  PathScurry,\n  PathScurryDarwin,\n  PathScurryPosix,\n  PathScurryWin32,\n} from 'path-scurry'\nimport { fileURLToPath } from 'url'\nimport { IgnoreLike } from './ignore.js'\nimport { Pattern } from './pattern.js'\nimport { GlobStream, GlobWalker } from './walker.js'\n\nexport type MatchSet = Minimatch['set']\nexport type GlobParts = Exclude<Minimatch['globParts'], undefined>\n\n// if no process global, just call it linux.\n// so we default to case-sensitive, / separators\nconst defaultPlatform: NodeJS.Platform =\n  typeof process === 'object' &&\n  process &&\n  typeof process.platform === 'string'\n    ? process.platform\n    : 'linux'\n\n/**\n * A `GlobOptions` object may be provided to any of the exported methods, and\n * must be provided to the `Glob` constructor.\n *\n * All options are optional, boolean, and false by default, unless otherwise\n * noted.\n *\n * All resolved options are added to the Glob object as properties.\n *\n * If you are running many `glob` operations, you can pass a Glob object as the\n * `options` argument to a subsequent operation to share the previously loaded\n * cache.\n */\nexport interface GlobOptions {\n  /**\n   * Set to `true` to always receive absolute paths for\n   * matched files. Set to `false` to always return relative paths.\n   *\n   * When this option is not set, absolute paths are returned for patterns\n   * that are absolute, and otherwise paths are returned that are relative\n   * to the `cwd` setting.\n   *\n   * This does _not_ make an extra system call to get\n   * the realpath, it only does string path resolution.\n   *\n   * Conflicts with {@link withFileTypes}\n   */\n  absolute?: boolean\n\n  /**\n   * Set to false to enable {@link windowsPathsNoEscape}\n   *\n   * @deprecated\n   */\n  allowWindowsEscape?: boolean\n\n  /**\n   * The current working directory in which to search. Defaults to\n   * `process.cwd()`.\n   *\n   * May be eiher a string path or a `file://` URL object or string.\n   */\n  cwd?: string | URL\n\n  /**\n   * Include `.dot` files in normal matches and `globstar`\n   * matches. Note that an explicit dot in a portion of the pattern\n   * will always match dot files.\n   */\n  dot?: boolean\n\n  /**\n   * Prepend all relative path strings with `./` (or `.\\` on Windows).\n   *\n   * Without this option, returned relative paths are \"bare\", so instead of\n   * returning `'./foo/bar'`, they are returned as `'foo/bar'`.\n   *\n   * Relative patterns starting with `'../'` are not prepended with `./`, even\n   * if this option is set.\n   */\n  dotRelative?: boolean\n\n  /**\n   * Follow symlinked directories when expanding `**`\n   * patterns. This can result in a lot of duplicate references in\n   * the presence of cyclic links, and make performance quite bad.\n   *\n   * By default, a `**` in a pattern will follow 1 symbolic link if\n   * it is not the first item in the pattern, or none if it is the\n   * first item in the pattern, following the same behavior as Bash.\n   */\n  follow?: boolean\n\n  /**\n   * string or string[], or an object with `ignore` and `ignoreChildren`\n   * methods.\n   *\n   * If a string or string[] is provided, then this is treated as a glob\n   * pattern or array of glob patterns to exclude from matches. To ignore all\n   * children within a directory, as well as the entry itself, append `'/**'`\n   * to the ignore pattern.\n   *\n   * **Note** `ignore` patterns are _always_ in `dot:true` mode, regardless of\n   * any other settings.\n   *\n   * If an object is provided that has `ignored(path)` and/or\n   * `childrenIgnored(path)` methods, then these methods will be called to\n   * determine whether any Path is a match or if its children should be\n   * traversed, respectively.\n   */\n  ignore?: string | string[] | IgnoreLike\n\n  /**\n   * Treat brace expansion like `{a,b}` as a \"magic\" pattern. Has no\n   * effect if {@link nobrace} is set.\n   *\n   * Only has effect on the {@link hasMagic} function.\n   */\n  magicalBraces?: boolean\n\n  /**\n   * Add a `/` character to directory matches. Note that this requires\n   * additional stat calls in some cases.\n   */\n  mark?: boolean\n\n  /**\n   * Perform a basename-only match if the pattern does not contain any slash\n   * characters. That is, `*.js` would be treated as equivalent to\n   * `**\\/*.js`, matching all js files in all directories.\n   */\n  matchBase?: boolean\n\n  /**\n   * Limit the directory traversal to a given depth below the cwd.\n   * Note that this does NOT prevent traversal to sibling folders,\n   * root patterns, and so on. It only limits the maximum folder depth\n   * that the walk will descend, relative to the cwd.\n   */\n  maxDepth?: number\n\n  /**\n   * Do not expand `{a,b}` and `{1..3}` brace sets.\n   */\n  nobrace?: boolean\n\n  /**\n   * Perform a case-insensitive match. This defaults to `true` on macOS and\n   * Windows systems, and `false` on all others.\n   *\n   * **Note** `nocase` should only be explicitly set when it is\n   * known that the filesystem's case sensitivity differs from the\n   * platform default. If set `true` on case-sensitive file\n   * systems, or `false` on case-insensitive file systems, then the\n   * walk may return more or less results than expected.\n   */\n  nocase?: boolean\n\n  /**\n   * Do not match directories, only files. (Note: to match\n   * _only_ directories, put a `/` at the end of the pattern.)\n   */\n  nodir?: boolean\n\n  /**\n   * Do not match \"extglob\" patterns such as `+(a|b)`.\n   */\n  noext?: boolean\n\n  /**\n   * Do not match `**` against multiple filenames. (Ie, treat it as a normal\n   * `*` instead.)\n   *\n   * Conflicts with {@link matchBase}\n   */\n  noglobstar?: boolean\n\n  /**\n   * Defaults to value of `process.platform` if available, or `'linux'` if\n   * not. Setting `platform:'win32'` on non-Windows systems may cause strange\n   * behavior.\n   */\n  platform?: NodeJS.Platform\n\n  /**\n   * Set to true to call `fs.realpath` on all of the\n   * results. In the case of an entry that cannot be resolved, the\n   * entry is omitted. This incurs a slight performance penalty, of\n   * course, because of the added system calls.\n   */\n  realpath?: boolean\n\n  /**\n   *\n   * A string path resolved against the `cwd` option, which\n   * is used as the starting point for absolute patterns that start\n   * with `/`, (but not drive letters or UNC paths on Windows).\n   *\n   * Note that this _doesn't_ necessarily limit the walk to the\n   * `root` directory, and doesn't affect the cwd starting point for\n   * non-absolute patterns. A pattern containing `..` will still be\n   * able to traverse out of the root directory, if it is not an\n   * actual root directory on the filesystem, and any non-absolute\n   * patterns will be matched in the `cwd`. For example, the\n   * pattern `/../*` with `{root:'/some/path'}` will return all\n   * files in `/some`, not all files in `/some/path`. The pattern\n   * `*` with `{root:'/some/path'}` will return all the entries in\n   * the cwd, not the entries in `/some/path`.\n   *\n   * To start absolute and non-absolute patterns in the same\n   * path, you can use `{root:''}`. However, be aware that on\n   * Windows systems, a pattern like `x:/*` or `//host/share/*` will\n   * _always_ start in the `x:/` or `//host/share` directory,\n   * regardless of the `root` setting.\n   */\n  root?: string\n\n  /**\n   * A [PathScurry](http://npm.im/path-scurry) object used\n   * to traverse the file system. If the `nocase` option is set\n   * explicitly, then any provided `scurry` object must match this\n   * setting.\n   */\n  scurry?: PathScurry\n\n  /**\n   * Call `lstat()` on all entries, whether required or not to determine\n   * if it's a valid match. When used with {@link withFileTypes}, this means\n   * that matches will include data such as modified time, permissions, and\n   * so on.  Note that this will incur a performance cost due to the added\n   * system calls.\n   */\n  stat?: boolean\n\n  /**\n   * An AbortSignal which will cancel the Glob walk when\n   * triggered.\n   */\n  signal?: AbortSignal\n\n  /**\n   * Use `\\\\` as a path separator _only_, and\n   *  _never_ as an escape character. If set, all `\\\\` characters are\n   *  replaced with `/` in the pattern.\n   *\n   *  Note that this makes it **impossible** to match against paths\n   *  containing literal glob pattern characters, but allows matching\n   *  with patterns constructed using `path.join()` and\n   *  `path.resolve()` on Windows platforms, mimicking the (buggy!)\n   *  behavior of Glob v7 and before on Windows. Please use with\n   *  caution, and be mindful of [the caveat below about Windows\n   *  paths](#windows). (For legacy reasons, this is also set if\n   *  `allowWindowsEscape` is set to the exact value `false`.)\n   */\n  windowsPathsNoEscape?: boolean\n\n  /**\n   * Return [PathScurry](http://npm.im/path-scurry)\n   * `Path` objects instead of strings. These are similar to a\n   * NodeJS `Dirent` object, but with additional methods and\n   * properties.\n   *\n   * Conflicts with {@link absolute}\n   */\n  withFileTypes?: boolean\n\n  /**\n   * An fs implementation to override some or all of the defaults.  See\n   * http://npm.im/path-scurry for details about what can be overridden.\n   */\n  fs?: FSOption\n\n  /**\n   * Just passed along to Minimatch.  Note that this makes all pattern\n   * matching operations slower and *extremely* noisy.\n   */\n  debug?: boolean\n\n  /**\n   * Return `/` delimited paths, even on Windows.\n   *\n   * On posix systems, this has no effect.  But, on Windows, it means that\n   * paths will be `/` delimited, and absolute paths will be their full\n   * resolved UNC forms, eg instead of `'C:\\\\foo\\\\bar'`, it would return\n   * `'//?/C:/foo/bar'`\n   */\n  posix?: boolean\n}\n\nexport type GlobOptionsWithFileTypesTrue = GlobOptions & {\n  withFileTypes: true\n  // string options not relevant if returning Path objects.\n  absolute?: undefined\n  mark?: undefined\n  posix?: undefined\n}\n\nexport type GlobOptionsWithFileTypesFalse = GlobOptions & {\n  withFileTypes?: false\n}\n\nexport type GlobOptionsWithFileTypesUnset = GlobOptions & {\n  withFileTypes?: undefined\n}\n\nexport type Result<Opts> = Opts extends GlobOptionsWithFileTypesTrue\n  ? Path\n  : Opts extends GlobOptionsWithFileTypesFalse\n  ? string\n  : Opts extends GlobOptionsWithFileTypesUnset\n  ? string\n  : string | Path\nexport type Results<Opts> = Result<Opts>[]\n\nexport type FileTypes<Opts> = Opts extends GlobOptionsWithFileTypesTrue\n  ? true\n  : Opts extends GlobOptionsWithFileTypesFalse\n  ? false\n  : Opts extends GlobOptionsWithFileTypesUnset\n  ? false\n  : boolean\n\n/**\n * An object that can perform glob pattern traversals.\n */\nexport class Glob<Opts extends GlobOptions> implements GlobOptions {\n  absolute?: boolean\n  cwd: string\n  root?: string\n  dot: boolean\n  dotRelative: boolean\n  follow: boolean\n  ignore?: string | string[] | IgnoreLike\n  magicalBraces: boolean\n  mark?: boolean\n  matchBase: boolean\n  maxDepth: number\n  nobrace: boolean\n  nocase: boolean\n  nodir: boolean\n  noext: boolean\n  noglobstar: boolean\n  pattern: string[]\n  platform: NodeJS.Platform\n  realpath: boolean\n  scurry: PathScurry\n  stat: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape: boolean\n  withFileTypes: FileTypes<Opts>\n\n  /**\n   * The options provided to the constructor.\n   */\n  opts: Opts\n\n  /**\n   * An array of parsed immutable {@link Pattern} objects.\n   */\n  patterns: Pattern[]\n\n  /**\n   * All options are stored as properties on the `Glob` object.\n   *\n   * See {@link GlobOptions} for full options descriptions.\n   *\n   * Note that a previous `Glob` object can be passed as the\n   * `GlobOptions` to another `Glob` instantiation to re-use settings\n   * and caches with a new pattern.\n   *\n   * Traversal functions can be called multiple times to run the walk\n   * again.\n   */\n  constructor(pattern: string | string[], opts: Opts) {\n    /* c8 ignore start */\n    if (!opts) throw new TypeError('glob options required')\n    /* c8 ignore stop */\n    this.withFileTypes = !!opts.withFileTypes as FileTypes<Opts>\n    this.signal = opts.signal\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.dotRelative = !!opts.dotRelative\n    this.nodir = !!opts.nodir\n    this.mark = !!opts.mark\n    if (!opts.cwd) {\n      this.cwd = ''\n    } else if (opts.cwd instanceof URL || opts.cwd.startsWith('file://')) {\n      opts.cwd = fileURLToPath(opts.cwd)\n    }\n    this.cwd = opts.cwd || ''\n    this.root = opts.root\n    this.magicalBraces = !!opts.magicalBraces\n    this.nobrace = !!opts.nobrace\n    this.noext = !!opts.noext\n    this.realpath = !!opts.realpath\n    this.absolute = opts.absolute\n\n    this.noglobstar = !!opts.noglobstar\n    this.matchBase = !!opts.matchBase\n    this.maxDepth =\n      typeof opts.maxDepth === 'number' ? opts.maxDepth : Infinity\n    this.stat = !!opts.stat\n    this.ignore = opts.ignore\n\n    if (this.withFileTypes && this.absolute !== undefined) {\n      throw new Error('cannot set absolute and withFileTypes:true')\n    }\n\n    if (typeof pattern === 'string') {\n      pattern = [pattern]\n    }\n\n    this.windowsPathsNoEscape =\n      !!opts.windowsPathsNoEscape ||\n      (opts as GlobOptions).allowWindowsEscape === false\n\n    if (this.windowsPathsNoEscape) {\n      pattern = pattern.map(p => p.replace(/\\\\/g, '/'))\n    }\n\n    if (this.matchBase) {\n      if (opts.noglobstar) {\n        throw new TypeError('base matching requires globstar')\n      }\n      pattern = pattern.map(p => (p.includes('/') ? p : `./**/${p}`))\n    }\n\n    this.pattern = pattern\n\n    this.platform = opts.platform || defaultPlatform\n    this.opts = { ...opts, platform: this.platform }\n    if (opts.scurry) {\n      this.scurry = opts.scurry\n      if (\n        opts.nocase !== undefined &&\n        opts.nocase !== opts.scurry.nocase\n      ) {\n        throw new Error('nocase option contradicts provided scurry option')\n      }\n    } else {\n      const Scurry =\n        opts.platform === 'win32'\n          ? PathScurryWin32\n          : opts.platform === 'darwin'\n          ? PathScurryDarwin\n          : opts.platform\n          ? PathScurryPosix\n          : PathScurry\n      this.scurry = new Scurry(this.cwd, {\n        nocase: opts.nocase,\n        fs: opts.fs,\n      })\n    }\n    this.nocase = this.scurry.nocase\n\n    // If you do nocase:true on a case-sensitive file system, then\n    // we need to use regexps instead of strings for non-magic\n    // path portions, because statting `aBc` won't return results\n    // for the file `AbC` for example.\n    const nocaseMagicOnly =\n      this.platform === 'darwin' || this.platform === 'win32'\n\n    const mmo: MinimatchOptions = {\n      // default nocase based on platform\n      ...opts,\n      dot: this.dot,\n      matchBase: this.matchBase,\n      nobrace: this.nobrace,\n      nocase: this.nocase,\n      nocaseMagicOnly,\n      nocomment: true,\n      noext: this.noext,\n      nonegate: true,\n      optimizationLevel: 2,\n      platform: this.platform,\n      windowsPathsNoEscape: this.windowsPathsNoEscape,\n      debug: !!this.opts.debug,\n    }\n\n    const mms = this.pattern.map(p => new Minimatch(p, mmo))\n    const [matchSet, globParts] = mms.reduce(\n      (set: [MatchSet, GlobParts], m) => {\n        set[0].push(...m.set)\n        set[1].push(...m.globParts)\n        return set\n      },\n      [[], []]\n    )\n    this.patterns = matchSet.map((set, i) => {\n      return new Pattern(set, globParts[i], 0, this.platform)\n    })\n  }\n\n  /**\n   * Returns a Promise that resolves to the results array.\n   */\n  async walk(): Promise<Results<Opts>>\n  async walk(): Promise<(string | Path)[]> {\n    // Walkers always return array of Path objects, so we just have to\n    // coerce them into the right shape.  It will have already called\n    // realpath() if the option was set to do so, so we know that's cached.\n    // start out knowing the cwd, at least\n    return [\n      ...(await new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity\n            ? this.maxDepth + this.scurry.cwd.depth()\n            : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n      }).walk()),\n    ]\n  }\n\n  /**\n   * synchronous {@link Glob.walk}\n   */\n  walkSync(): Results<Opts>\n  walkSync(): (string | Path)[] {\n    return [\n      ...new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity\n            ? this.maxDepth + this.scurry.cwd.depth()\n            : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n      }).walkSync(),\n    ]\n  }\n\n  /**\n   * Stream results asynchronously.\n   */\n  stream(): Minipass<Result<Opts>, Result<Opts>>\n  stream(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity\n          ? this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n    }).stream()\n  }\n\n  /**\n   * Stream results synchronously.\n   */\n  streamSync(): Minipass<Result<Opts>, Result<Opts>>\n  streamSync(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity\n          ? this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n    }).streamSync()\n  }\n\n  /**\n   * Default sync iteration function. Returns a Generator that\n   * iterates over the results.\n   */\n  iterateSync(): Generator<Result<Opts>, void, void> {\n    return this.streamSync()[Symbol.iterator]()\n  }\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  /**\n   * Default async iteration function. Returns an AsyncGenerator that\n   * iterates over the results.\n   */\n  iterate(): AsyncGenerator<Result<Opts>, void, void> {\n    return this.stream()[Symbol.asyncIterator]()\n  }\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///home/gcadoret/www/lcov-reporter/node_modules/path-scurry/dist/cjs/index.js":{"lineLengths":[13,97,33,53,88,68,5,39,29,33,17,4,96,72,21,21,3,66,42,20,141,36,18,2,62,253,41,31,29,45,27,46,57,46,42,39,19,30,26,34,36,17,15,32,36,38,38,6,2,58,95,15,7,21,20,19,34,41,10,6,39,48,95,47,27,57,21,21,21,21,21,21,22,20,27,27,64,26,33,24,66,19,57,64,19,74,29,24,38,24,48,22,35,11,21,15,28,19,35,23,35,27,34,32,36,35,38,31,33,26,36,10,17,34,29,13,2,39,32,42,10,17,41,35,13,2,3,65,12,3,49,19,28,5,1,36,72,79,73,79,78,77,75,76,2,78,70,3,41,12,3,50,38,15,20,32,47,11,5,1,38,47,3,48,78,2,78,74,75,19,2,75,75,16,3,16,7,32,6,73,74,80,74,45,7,9,7,53,6,16,7,9,7,59,6,16,7,10,7,79,6,16,7,11,7,71,16,7,11,36,8,19,9,15,25,5,10,16,26,5,11,17,27,5,9,15,25,5,9,15,25,5,10,16,26,5,13,19,29,5,9,15,25,5,10,16,26,5,12,18,28,5,13,19,29,5,13,19,29,5,13,19,29,5,17,23,33,5,11,17,27,5,11,17,27,5,11,17,27,5,15,21,31,5,15,11,14,19,14,19,10,14,16,14,7,69,73,73,72,59,7,16,48,5,7,79,67,6,16,7,76,25,75,37,29,27,33,34,39,39,49,34,26,39,9,14,45,9,5,7,58,6,65,7,13,38,31,25,37,55,5,7,16,7,21,30,5,7,81,7,19,20,24,9,50,52,50,31,60,43,22,5,29,21,38,30,9,17,5,7,77,80,79,14,6,16,7,16,48,21,26,9,63,43,38,24,5,7,69,6,78,14,6,75,61,6,36,6,16,7,27,50,24,9,32,39,9,25,41,32,39,34,35,40,25,13,9,71,67,34,46,39,43,24,57,20,25,21,11,33,35,9,78,79,30,22,5,7,76,68,7,16,43,34,9,31,30,17,48,9,32,62,5,7,69,44,73,57,7,21,29,35,46,39,31,30,17,64,9,37,57,5,7,57,7,16,43,34,9,31,30,17,48,9,32,59,37,5,7,70,6,77,21,7,21,46,39,29,59,27,58,39,58,13,18,49,13,9,30,39,71,43,5,7,38,6,80,76,45,7,17,47,5,18,35,5,15,31,23,32,29,31,28,43,40,39,36,54,51,54,51,75,50,52,28,5,7,34,7,14,45,5,7,31,7,19,45,5,7,38,7,25,45,5,7,34,7,21,45,5,7,31,7,14,45,5,7,28,7,16,46,5,7,35,7,22,46,5,7,72,27,6,74,47,7,19,60,5,7,75,51,6,80,74,48,7,22,32,5,7,75,56,6,80,74,48,7,22,30,5,7,76,58,6,75,74,67,7,21,41,55,5,7,77,57,6,76,55,7,19,29,24,25,25,49,39,56,39,33,5,7,77,61,7,21,47,5,7,80,74,71,7,16,39,5,7,80,50,6,75,77,56,6,73,16,7,16,27,46,53,5,7,77,6,80,39,6,79,7,22,40,21,26,9,34,29,9,29,72,27,29,9,28,13,75,57,29,55,13,9,20,40,29,9,5,7,44,7,20,40,21,26,9,34,29,9,29,72,27,29,9,28,13,64,57,29,55,13,9,20,40,29,9,5,31,45,37,60,70,38,9,5,19,37,32,19,58,35,5,27,56,41,33,35,28,9,5,24,34,28,5,63,20,65,66,66,46,29,33,19,28,27,62,54,33,30,33,35,5,29,60,53,32,9,37,31,9,14,44,9,5,27,70,29,33,57,34,29,9,37,32,31,9,5,30,29,27,30,26,69,54,77,29,32,9,25,72,62,29,48,39,9,28,5,28,55,44,5,31,61,34,68,40,67,35,9,25,24,21,5,37,56,32,36,41,36,45,25,13,62,9,5,42,25,59,58,63,25,28,69,71,38,39,24,16,35,25,9,24,17,5,7,78,18,6,78,71,74,6,79,81,16,6,75,15,7,19,42,17,80,28,13,24,41,13,9,5,7,41,7,17,42,17,69,28,13,24,41,13,9,5,20,157,28,32,36,40,32,30,28,32,24,24,24,26,28,32,28,26,26,24,35,51,71,67,34,9,5,22,31,32,40,46,37,46,5,7,79,6,79,19,6,75,15,6,76,76,63,81,76,74,7,39,33,27,29,16,51,19,9,41,35,62,27,28,16,50,19,9,57,35,38,19,9,39,52,54,41,78,21,43,41,13,18,68,28,42,55,17,47,13,75,19,11,5,26,7,46,6,79,19,6,75,15,7,21,33,22,9,41,35,59,9,52,54,41,41,45,9,14,33,36,32,77,17,75,40,21,55,17,47,13,24,43,41,13,51,22,9,55,5,7,43,7,19,33,22,9,41,35,59,9,52,54,41,13,60,36,17,51,13,43,9,20,39,37,9,55,5,18,34,25,39,75,29,70,25,9,28,20,5,34,49,39,30,47,5,7,63,22,6,74,6,79,41,7,22,27,34,62,29,13,73,55,9,19,36,9,5,7,35,7,20,27,34,62,29,13,62,55,9,19,36,9,5,7,66,41,6,16,7,24,28,19,36,20,21,31,27,44,44,25,26,9,44,19,50,36,41,25,9,5,1,28,3,35,2,79,43,3,34,7,45,7,15,7,42,7,25,7,79,67,6,16,7,76,63,5,7,16,7,47,105,5,7,16,7,25,45,5,7,16,7,23,54,42,29,9,70,67,51,53,13,9,47,81,5,7,16,7,50,67,77,33,27,26,33,45,36,5,1,30,3,40,2,36,3,34,7,41,7,19,7,44,7,14,7,79,67,6,16,7,76,63,5,7,16,7,25,47,5,7,16,7,24,25,5,7,16,7,47,105,5,1,30,3,78,40,2,78,77,36,3,22,7,75,7,9,7,78,7,13,7,68,7,10,7,83,7,8,18,23,14,7,51,6,68,7,11,8,7,54,6,76,6,16,7,118,36,62,48,9,61,55,46,41,52,48,53,62,73,70,46,24,9,29,35,86,9,28,29,43,46,29,35,37,32,29,35,28,37,64,65,68,15,28,9,24,5,7,59,7,28,39,42,9,28,5,7,75,53,6,16,7,21,30,5,7,60,6,49,6,78,71,17,7,23,71,72,19,53,31,32,25,36,37,22,13,9,49,35,26,9,54,42,22,5,7,71,72,62,6,49,6,78,71,17,7,28,71,72,19,53,31,32,25,36,37,22,13,9,54,35,26,9,59,47,22,5,7,79,7,32,40,44,9,32,5,7,73,61,7,37,40,44,9,37,5,7,65,7,32,40,44,9,26,5,7,64,7,31,40,44,9,50,5,44,28,8,40,44,9,48,25,29,9,39,34,22,9,14,44,58,9,5,42,28,8,40,44,9,48,25,29,9,46,34,22,9,33,39,9,14,56,9,5,7,70,42,6,78,71,74,6,79,81,16,6,75,15,7,35,40,44,9,29,5,7,47,7,33,40,44,9,33,5,58,29,8,40,44,9,48,48,29,9,41,49,5,56,29,8,40,44,9,48,48,29,9,39,49,5,58,29,8,40,44,9,48,48,29,9,41,49,5,56,29,8,40,44,9,48,48,29,9,39,49,5,45,40,44,9,48,25,29,9,83,27,39,67,9,31,35,26,44,37,25,34,17,36,41,25,32,36,38,29,21,18,42,47,71,21,55,36,72,97,21,26,61,42,25,30,35,25,21,17,36,10,28,42,31,37,23,35,36,29,15,11,5,43,40,44,9,48,25,29,9,83,27,39,67,9,38,33,46,38,43,67,17,26,41,60,33,38,38,17,53,32,17,13,9,23,5,7,30,6,47,6,75,80,76,7,30,30,5,45,76,81,81,40,44,9,48,28,29,9,67,5,7,63,6,51,7,25,34,5,47,40,44,9,48,25,29,9,83,39,59,9,38,33,46,38,43,59,17,26,41,60,33,38,38,17,53,32,17,13,9,5,41,40,44,9,48,25,29,9,83,70,39,68,9,31,30,27,31,31,29,42,27,41,38,27,17,29,30,74,41,27,57,40,50,44,50,53,47,47,82,29,25,46,93,35,25,21,46,58,83,46,29,25,21,33,46,58,61,42,25,21,53,55,21,37,34,21,18,36,32,47,29,13,10,18,23,5,45,40,44,9,48,25,29,9,83,70,31,39,68,9,30,27,31,31,29,42,27,41,38,27,17,29,30,50,42,47,79,42,25,21,17,29,42,30,45,64,37,42,42,21,57,38,21,17,13,43,47,10,18,23,5,28,32,76,35,5,1,40,3,51,2,75,38,3,46,7,44,7,15,49,39,60,29,49,35,9,5,7,16,7,24,80,73,58,58,5,7,16,7,17,117,5,7,66,7,19,86,5,1,42,3,81,2,76,2,43,3,46,7,44,7,14,49,40,59,29,5,7,16,7,25,19,5,7,16,7,17,117,5,7,66,7,19,33,5,1,42,3,68,2,72,11,2,43,3,48,49,39,40,5,1,44,3,68,2,73,3,68,3,74,2,74,65,3,49,21,35,26,26,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///home/gcadoret/www/lcov-reporter/node_modules/path-scurry/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { LRUCache } from 'lru-cache'\nimport { posix, win32 } from 'path'\n\nimport { fileURLToPath } from 'url'\n\nimport * as actualFS from 'fs'\nimport {\n  lstatSync,\n  readdir as readdirCB,\n  readdirSync,\n  readlinkSync,\n  realpathSync as rps,\n} from 'fs'\nconst realpathSync = rps.native\n// TODO: test perf of fs/promises realpath vs realpathCB,\n// since the promises one uses realpath.native\nimport { lstat, readdir, readlink, realpath } from 'fs/promises'\n\nimport type { Dirent, Stats } from 'fs'\nimport { Minipass } from 'minipass'\n\n/**\n * An object that will be used to override the default `fs`\n * methods.  Any methods that are not overridden will use Node's\n * built-in implementations.\n *\n * - lstatSync\n * - readdir (callback `withFileTypes` Dirent variant, used for\n *   readdirCB and most walks)\n * - readdirSync\n * - readlinkSync\n * - realpathSync\n * - promises: Object containing the following async methods:\n *   - lstat\n *   - readdir (Dirent variant only)\n *   - readlink\n *   - realpath\n */\nexport interface FSOption {\n  lstatSync?: (path: string) => Stats\n  readdir?: (\n    path: string,\n    options: { withFileTypes: true },\n    cb: (er: NodeJS.ErrnoException | null, entries?: Dirent[]) => any\n  ) => void\n  readdirSync?: (\n    path: string,\n    options: { withFileTypes: true }\n  ) => Dirent[]\n  readlinkSync?: (path: string) => string\n  realpathSync?: (path: string) => string\n  promises?: {\n    lstat?: (path: string) => Promise<Stats>\n    readdir?: (\n      path: string,\n      options: { withFileTypes: true }\n    ) => Promise<Dirent[]>\n    readlink?: (path: string) => Promise<string>\n    realpath?: (path: string) => Promise<string>\n    [k: string]: any\n  }\n  [k: string]: any\n}\n\ninterface FSValue {\n  lstatSync: (path: string) => Stats\n  readdir: (\n    path: string,\n    options: { withFileTypes: true },\n    cb: (er: NodeJS.ErrnoException | null, entries?: Dirent[]) => any\n  ) => void\n  readdirSync: (path: string, options: { withFileTypes: true }) => Dirent[]\n  readlinkSync: (path: string) => string\n  realpathSync: (path: string) => string\n  promises: {\n    lstat: (path: string) => Promise<Stats>\n    readdir: (\n      path: string,\n      options: { withFileTypes: true }\n    ) => Promise<Dirent[]>\n    readlink: (path: string) => Promise<string>\n    realpath: (path: string) => Promise<string>\n    [k: string]: any\n  }\n  [k: string]: any\n}\n\nconst defaultFS: FSValue = {\n  lstatSync,\n  readdir: readdirCB,\n  readdirSync,\n  readlinkSync,\n  realpathSync,\n  promises: {\n    lstat,\n    readdir,\n    readlink,\n    realpath,\n  },\n}\n\n// if they just gave us require('fs') then use our default\nconst fsFromOption = (fsOption?: FSOption): FSValue =>\n  !fsOption || fsOption === defaultFS || fsOption === actualFS\n    ? defaultFS\n    : {\n        ...defaultFS,\n        ...fsOption,\n        promises: {\n          ...defaultFS.promises,\n          ...(fsOption.promises || {}),\n        },\n      }\n\n// turn something like //?/c:/ into c:\\\nconst uncDriveRegexp = /^\\\\\\\\\\?\\\\([a-z]:)\\\\?$/i\nconst uncToDrive = (rootPath: string): string =>\n  rootPath.replace(/\\//g, '\\\\').replace(uncDriveRegexp, '$1\\\\')\n\n// windows paths are separated by either / or \\\nconst eitherSep = /[\\\\\\/]/\n\nconst UNKNOWN = 0 // may not even exist, for all we know\nconst IFIFO = 0b0001\nconst IFCHR = 0b0010\nconst IFDIR = 0b0100\nconst IFBLK = 0b0110\nconst IFREG = 0b1000\nconst IFLNK = 0b1010\nconst IFSOCK = 0b1100\nconst IFMT = 0b1111\n\nexport type Type =\n  | 'Unknown'\n  | 'FIFO'\n  | 'CharacterDevice'\n  | 'Directory'\n  | 'BlockDevice'\n  | 'File'\n  | 'SymbolicLink'\n  | 'Socket'\n\n// mask to unset low 4 bits\nconst IFMT_UNKNOWN = ~IFMT\n\n// set after successfully calling readdir() and getting entries.\nconst READDIR_CALLED = 0b0000_0001_0000\n// set after a successful lstat()\nconst LSTAT_CALLED = 0b0000_0010_0000\n// set if an entry (or one of its parents) is definitely not a dir\nconst ENOTDIR = 0b0000_0100_0000\n// set if an entry (or one of its parents) does not exist\n// (can also be set on lstat errors like EACCES or ENAMETOOLONG)\nconst ENOENT = 0b0000_1000_0000\n// cannot have child entries -- also verify &IFMT is either IFDIR or IFLNK\n// set if we fail to readlink\nconst ENOREADLINK = 0b0001_0000_0000\n// set if we know realpath() will fail\nconst ENOREALPATH = 0b0010_0000_0000\n\nconst ENOCHILD = ENOTDIR | ENOENT | ENOREALPATH\nconst TYPEMASK = 0b0011_1111_1111\n\nconst entToType = (s: Dirent | Stats) =>\n  s.isFile()\n    ? IFREG\n    : s.isDirectory()\n    ? IFDIR\n    : s.isSymbolicLink()\n    ? IFLNK\n    : s.isCharacterDevice()\n    ? IFCHR\n    : s.isBlockDevice()\n    ? IFBLK\n    : s.isSocket()\n    ? IFSOCK\n    : s.isFIFO()\n    ? IFIFO\n    : UNKNOWN\n\n// normalize unicode path names\nconst normalizeCache = new Map<string, string>()\nconst normalize = (s: string) => {\n  const c = normalizeCache.get(s)\n  if (c) return c\n  const n = s.normalize('NFKD')\n  normalizeCache.set(s, n)\n  return n\n}\n\nconst normalizeNocaseCache = new Map<string, string>()\nconst normalizeNocase = (s: string) => {\n  const c = normalizeNocaseCache.get(s)\n  if (c) return c\n  const n = normalize(s.toLowerCase())\n  normalizeNocaseCache.set(s, n)\n  return n\n}\n\n/**\n * Options that may be provided to the Path constructor\n */\nexport interface PathOpts {\n  fullpath?: string\n  relative?: string\n  relativePosix?: string\n  parent?: PathBase\n  /**\n   * See {@link FSOption}\n   */\n  fs?: FSOption\n}\n\n/**\n * An LRUCache for storing resolved path strings or Path objects.\n * @internal\n */\nexport class ResolveCache extends LRUCache<string, string> {\n  constructor() {\n    super({ max: 256 })\n  }\n}\n\n// In order to prevent blowing out the js heap by allocating hundreds of\n// thousands of Path entries when walking extremely large trees, the \"children\"\n// in this tree are represented by storing an array of Path entries in an\n// LRUCache, indexed by the parent.  At any time, Path.children() may return an\n// empty array, indicating that it doesn't know about any of its children, and\n// thus has to rebuild that cache.  This is fine, it just means that we don't\n// benefit as much from having the cached entries, but huge directory walks\n// don't blow out the stack, and smaller ones are still as fast as possible.\n//\n//It does impose some complexity when building up the readdir data, because we\n//need to pass a reference to the children array that we started with.\n\n/**\n * an LRUCache for storing child entries.\n * @internal\n */\nexport class ChildrenCache extends LRUCache<PathBase, Children> {\n  constructor(maxSize: number = 16 * 1024) {\n    super({\n      maxSize,\n      // parent + children\n      sizeCalculation: a => a.length + 1,\n    })\n  }\n}\n\n/**\n * Array of Path objects, plus a marker indicating the first provisional entry\n *\n * @internal\n */\nexport type Children = PathBase[] & { provisional: number }\n\nconst setAsCwd = Symbol('PathScurry setAsCwd')\n\n/**\n * Path objects are sort of like a super-powered\n * {@link https://nodejs.org/docs/latest/api/fs.html#class-fsdirent fs.Dirent}\n *\n * Each one represents a single filesystem entry on disk, which may or may not\n * exist. It includes methods for reading various types of information via\n * lstat, readlink, and readdir, and caches all information to the greatest\n * degree possible.\n *\n * Note that fs operations that would normally throw will instead return an\n * \"empty\" value. This is in order to prevent excessive overhead from error\n * stack traces.\n */\nexport abstract class PathBase implements Dirent {\n  /**\n   * the basename of this path\n   *\n   * **Important**: *always* test the path name against any test string\n   * usingthe {@link isNamed} method, and not by directly comparing this\n   * string. Otherwise, unicode path strings that the system sees as identical\n   * will not be properly treated as the same path, leading to incorrect\n   * behavior and possible security issues.\n   */\n  name: string\n  /**\n   * the Path entry corresponding to the path root.\n   *\n   * @internal\n   */\n  root: PathBase\n  /**\n   * All roots found within the current PathScurry family\n   *\n   * @internal\n   */\n  roots: { [k: string]: PathBase }\n  /**\n   * a reference to the parent path, or undefined in the case of root entries\n   *\n   * @internal\n   */\n  parent?: PathBase\n  /**\n   * boolean indicating whether paths are compared case-insensitively\n   * @internal\n   */\n  nocase: boolean\n\n  /**\n   * the string or regexp used to split paths. On posix, it is `'/'`, and on\n   * windows it is a RegExp matching either `'/'` or `'\\\\'`\n   */\n  abstract splitSep: string | RegExp\n  /**\n   * The path separator string to use when joining paths\n   */\n  abstract sep: string\n\n  // potential default fs override\n  #fs: FSValue\n\n  // Stats fields\n  #dev?: number\n  get dev() {\n    return this.#dev\n  }\n  #mode?: number\n  get mode() {\n    return this.#mode\n  }\n  #nlink?: number\n  get nlink() {\n    return this.#nlink\n  }\n  #uid?: number\n  get uid() {\n    return this.#uid\n  }\n  #gid?: number\n  get gid() {\n    return this.#gid\n  }\n  #rdev?: number\n  get rdev() {\n    return this.#rdev\n  }\n  #blksize?: number\n  get blksize() {\n    return this.#blksize\n  }\n  #ino?: number\n  get ino() {\n    return this.#ino\n  }\n  #size?: number\n  get size() {\n    return this.#size\n  }\n  #blocks?: number\n  get blocks() {\n    return this.#blocks\n  }\n  #atimeMs?: number\n  get atimeMs() {\n    return this.#atimeMs\n  }\n  #mtimeMs?: number\n  get mtimeMs() {\n    return this.#mtimeMs\n  }\n  #ctimeMs?: number\n  get ctimeMs() {\n    return this.#ctimeMs\n  }\n  #birthtimeMs?: number\n  get birthtimeMs() {\n    return this.#birthtimeMs\n  }\n  #atime?: Date\n  get atime() {\n    return this.#atime\n  }\n  #mtime?: Date\n  get mtime() {\n    return this.#mtime\n  }\n  #ctime?: Date\n  get ctime() {\n    return this.#ctime\n  }\n  #birthtime?: Date\n  get birthtime() {\n    return this.#birthtime\n  }\n\n  #matchName: string\n  #depth?: number\n  #fullpath?: string\n  #fullpathPosix?: string\n  #relative?: string\n  #relativePosix?: string\n  #type: number\n  #children: ChildrenCache\n  #linkTarget?: PathBase\n  #realpath?: PathBase\n\n  /**\n   * This property is for compatibility with the Dirent class as of\n   * Node v20, where Dirent['path'] refers to the path of the directory\n   * that was passed to readdir.  So, somewhat counterintuitively, this\n   * property refers to the *parent* path, not the path object itself.\n   * For root entries, it's the path to the entry itself.\n   */\n  get path(): string {\n    return (this.parent || this).fullpath()\n  }\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts\n  ) {\n    this.name = name\n    this.#matchName = nocase ? normalizeNocase(name) : normalize(name)\n    this.#type = type & TYPEMASK\n    this.nocase = nocase\n    this.roots = roots\n    this.root = root || this\n    this.#children = children\n    this.#fullpath = opts.fullpath\n    this.#relative = opts.relative\n    this.#relativePosix = opts.relativePosix\n    this.parent = opts.parent\n    if (this.parent) {\n      this.#fs = this.parent.#fs\n    } else {\n      this.#fs = fsFromOption(opts.fs)\n    }\n  }\n\n  /**\n   * Returns the depth of the Path object from its root.\n   *\n   * For example, a path at `/foo/bar` would have a depth of 2.\n   */\n  depth(): number {\n    if (this.#depth !== undefined) return this.#depth\n    if (!this.parent) return (this.#depth = 0)\n    return (this.#depth = this.parent.depth() + 1)\n  }\n\n  /**\n   * @internal\n   */\n  abstract getRootString(path: string): string\n  /**\n   * @internal\n   */\n  abstract getRoot(rootPath: string): PathBase\n  /**\n   * @internal\n   */\n  abstract newChild(name: string, type?: number, opts?: PathOpts): PathBase\n\n  /**\n   * @internal\n   */\n  childrenCache() {\n    return this.#children\n  }\n\n  /**\n   * Get the Path object referenced by the string path, resolved from this Path\n   */\n  resolve(path?: string): PathBase {\n    if (!path) {\n      return this\n    }\n    const rootPath = this.getRootString(path)\n    const dir = path.substring(rootPath.length)\n    const dirParts = dir.split(this.splitSep)\n    const result: PathBase = rootPath\n      ? this.getRoot(rootPath).#resolveParts(dirParts)\n      : this.#resolveParts(dirParts)\n    return result\n  }\n\n  #resolveParts(dirParts: string[]) {\n    let p: PathBase = this\n    for (const part of dirParts) {\n      p = p.child(part)\n    }\n    return p\n  }\n\n  /**\n   * Returns the cached children Path objects, if still available.  If they\n   * have fallen out of the cache, then returns an empty array, and resets the\n   * READDIR_CALLED bit, so that future calls to readdir() will require an fs\n   * lookup.\n   *\n   * @internal\n   */\n  children(): Children {\n    const cached = this.#children.get(this)\n    if (cached) {\n      return cached\n    }\n    const children: Children = Object.assign([], { provisional: 0 })\n    this.#children.set(this, children)\n    this.#type &= ~READDIR_CALLED\n    return children\n  }\n\n  /**\n   * Resolves a path portion and returns or creates the child Path.\n   *\n   * Returns `this` if pathPart is `''` or `'.'`, or `parent` if pathPart is\n   * `'..'`.\n   *\n   * This should not be called directly.  If `pathPart` contains any path\n   * separators, it will lead to unsafe undefined behavior.\n   *\n   * Use `Path.resolve()` instead.\n   *\n   * @internal\n   */\n  child(pathPart: string, opts?: PathOpts): PathBase {\n    if (pathPart === '' || pathPart === '.') {\n      return this\n    }\n    if (pathPart === '..') {\n      return this.parent || this\n    }\n\n    // find the child\n    const children = this.children()\n    const name = this.nocase\n      ? normalizeNocase(pathPart)\n      : normalize(pathPart)\n    for (const p of children) {\n      if (p.#matchName === name) {\n        return p\n      }\n    }\n\n    // didn't find it, create provisional child, since it might not\n    // actually exist.  If we know the parent isn't a dir, then\n    // in fact it CAN'T exist.\n    const s = this.parent ? this.sep : ''\n    const fullpath = this.#fullpath\n      ? this.#fullpath + s + pathPart\n      : undefined\n    const pchild = this.newChild(pathPart, UNKNOWN, {\n      ...opts,\n      parent: this,\n      fullpath,\n    })\n\n    if (!this.canReaddir()) {\n      pchild.#type |= ENOENT\n    }\n\n    // don't have to update provisional, because if we have real children,\n    // then provisional is set to children.length, otherwise a lower number\n    children.push(pchild)\n    return pchild\n  }\n\n  /**\n   * The relative path from the cwd. If it does not share an ancestor with\n   * the cwd, then this ends up being equivalent to the fullpath()\n   */\n  relative(): string {\n    if (this.#relative !== undefined) {\n      return this.#relative\n    }\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#relative = this.name)\n    }\n    const pv = p.relative()\n    return pv + (!pv || !p.parent ? '' : this.sep) + name\n  }\n\n  /**\n   * The relative path from the cwd, using / as the path separator.\n   * If it does not share an ancestor with\n   * the cwd, then this ends up being equivalent to the fullpathPosix()\n   * On posix systems, this is identical to relative().\n   */\n  relativePosix(): string {\n    if (this.sep === '/') return this.relative()\n    if (this.#relativePosix !== undefined) return this.#relativePosix\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#relativePosix = this.fullpathPosix())\n    }\n    const pv = p.relativePosix()\n    return pv + (!pv || !p.parent ? '' : '/') + name\n  }\n\n  /**\n   * The fully resolved path string for this Path entry\n   */\n  fullpath(): string {\n    if (this.#fullpath !== undefined) {\n      return this.#fullpath\n    }\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#fullpath = this.name)\n    }\n    const pv = p.fullpath()\n    const fp = pv + (!p.parent ? '' : this.sep) + name\n    return (this.#fullpath = fp)\n  }\n\n  /**\n   * On platforms other than windows, this is identical to fullpath.\n   *\n   * On windows, this is overridden to return the forward-slash form of the\n   * full UNC path.\n   */\n  fullpathPosix(): string {\n    if (this.#fullpathPosix !== undefined) return this.#fullpathPosix\n    if (this.sep === '/') return (this.#fullpathPosix = this.fullpath())\n    if (!this.parent) {\n      const p = this.fullpath().replace(/\\\\/g, '/')\n      if (/^[a-z]:\\//i.test(p)) {\n        return (this.#fullpathPosix = `//?/${p}`)\n      } else {\n        return (this.#fullpathPosix = p)\n      }\n    }\n    const p = this.parent\n    const pfpp = p.fullpathPosix()\n    const fpp = pfpp + (!pfpp || !p.parent ? '' : '/') + this.name\n    return (this.#fullpathPosix = fpp)\n  }\n\n  /**\n   * Is the Path of an unknown type?\n   *\n   * Note that we might know *something* about it if there has been a previous\n   * filesystem operation, for example that it does not exist, or is not a\n   * link, or whether it has child entries.\n   */\n  isUnknown(): boolean {\n    return (this.#type & IFMT) === UNKNOWN\n  }\n\n  isType(type: Type): boolean {\n    return this[`is${type}`]()\n  }\n\n  getType(): Type {\n    return this.isUnknown()\n      ? 'Unknown'\n      : this.isDirectory()\n      ? 'Directory'\n      : this.isFile()\n      ? 'File'\n      : this.isSymbolicLink()\n      ? 'SymbolicLink'\n      : this.isFIFO()\n      ? 'FIFO'\n      : this.isCharacterDevice()\n      ? 'CharacterDevice'\n      : this.isBlockDevice()\n      ? 'BlockDevice'\n      : /* c8 ignore start */ this.isSocket()\n      ? 'Socket'\n      : 'Unknown'\n    /* c8 ignore stop */\n  }\n\n  /**\n   * Is the Path a regular file?\n   */\n  isFile(): boolean {\n    return (this.#type & IFMT) === IFREG\n  }\n\n  /**\n   * Is the Path a directory?\n   */\n  isDirectory(): boolean {\n    return (this.#type & IFMT) === IFDIR\n  }\n\n  /**\n   * Is the path a character device?\n   */\n  isCharacterDevice(): boolean {\n    return (this.#type & IFMT) === IFCHR\n  }\n\n  /**\n   * Is the path a block device?\n   */\n  isBlockDevice(): boolean {\n    return (this.#type & IFMT) === IFBLK\n  }\n\n  /**\n   * Is the path a FIFO pipe?\n   */\n  isFIFO(): boolean {\n    return (this.#type & IFMT) === IFIFO\n  }\n\n  /**\n   * Is the path a socket?\n   */\n  isSocket(): boolean {\n    return (this.#type & IFMT) === IFSOCK\n  }\n\n  /**\n   * Is the path a symbolic link?\n   */\n  isSymbolicLink(): boolean {\n    return (this.#type & IFLNK) === IFLNK\n  }\n\n  /**\n   * Return the entry if it has been subject of a successful lstat, or\n   * undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* simply\n   * mean that we haven't called lstat on it.\n   */\n  lstatCached(): PathBase | undefined {\n    return this.#type & LSTAT_CALLED ? this : undefined\n  }\n\n  /**\n   * Return the cached link target if the entry has been the subject of a\n   * successful readlink, or undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * readlink() has been called at some point.\n   */\n  readlinkCached(): PathBase | undefined {\n    return this.#linkTarget\n  }\n\n  /**\n   * Returns the cached realpath target if the entry has been the subject\n   * of a successful realpath, or undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * realpath() has been called at some point.\n   */\n  realpathCached(): PathBase | undefined {\n    return this.#realpath\n  }\n\n  /**\n   * Returns the cached child Path entries array if the entry has been the\n   * subject of a successful readdir(), or [] otherwise.\n   *\n   * Does not read the filesystem, so an empty array *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * readdir() has been called recently enough to still be valid.\n   */\n  readdirCached(): PathBase[] {\n    const children = this.children()\n    return children.slice(0, children.provisional)\n  }\n\n  /**\n   * Return true if it's worth trying to readlink.  Ie, we don't (yet) have\n   * any indication that readlink will definitely fail.\n   *\n   * Returns false if the path is known to not be a symlink, if a previous\n   * readlink failed, or if the entry does not exist.\n   */\n  canReadlink(): boolean {\n    if (this.#linkTarget) return true\n    if (!this.parent) return false\n    // cases where it cannot possibly succeed\n    const ifmt = this.#type & IFMT\n    return !(\n      (ifmt !== UNKNOWN && ifmt !== IFLNK) ||\n      this.#type & ENOREADLINK ||\n      this.#type & ENOENT\n    )\n  }\n\n  /**\n   * Return true if readdir has previously been successfully called on this\n   * path, indicating that cachedReaddir() is likely valid.\n   */\n  calledReaddir(): boolean {\n    return !!(this.#type & READDIR_CALLED)\n  }\n\n  /**\n   * Returns true if the path is known to not exist. That is, a previous lstat\n   * or readdir failed to verify its existence when that would have been\n   * expected, or a parent entry was marked either enoent or enotdir.\n   */\n  isENOENT(): boolean {\n    return !!(this.#type & ENOENT)\n  }\n\n  /**\n   * Return true if the path is a match for the given path name.  This handles\n   * case sensitivity and unicode normalization.\n   *\n   * Note: even on case-sensitive systems, it is **not** safe to test the\n   * equality of the `.name` property to determine whether a given pathname\n   * matches, due to unicode normalization mismatches.\n   *\n   * Always use this method instead of testing the `path.name` property\n   * directly.\n   */\n  isNamed(n: string): boolean {\n    return !this.nocase\n      ? this.#matchName === normalize(n)\n      : this.#matchName === normalizeNocase(n)\n  }\n\n  /**\n   * Return the Path object corresponding to the target of a symbolic link.\n   *\n   * If the Path is not a symbolic link, or if the readlink call fails for any\n   * reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   */\n  async readlink(): Promise<PathBase | undefined> {\n    const target = this.#linkTarget\n    if (target) {\n      return target\n    }\n    if (!this.canReadlink()) {\n      return undefined\n    }\n    /* c8 ignore start */\n    // already covered by the canReadlink test, here for ts grumples\n    if (!this.parent) {\n      return undefined\n    }\n    /* c8 ignore stop */\n    try {\n      const read = await this.#fs.promises.readlink(this.fullpath())\n      const linkTarget = this.parent.resolve(read)\n      if (linkTarget) {\n        return (this.#linkTarget = linkTarget)\n      }\n    } catch (er) {\n      this.#readlinkFail((er as NodeJS.ErrnoException).code)\n      return undefined\n    }\n  }\n\n  /**\n   * Synchronous {@link PathBase.readlink}\n   */\n  readlinkSync(): PathBase | undefined {\n    const target = this.#linkTarget\n    if (target) {\n      return target\n    }\n    if (!this.canReadlink()) {\n      return undefined\n    }\n    /* c8 ignore start */\n    // already covered by the canReadlink test, here for ts grumples\n    if (!this.parent) {\n      return undefined\n    }\n    /* c8 ignore stop */\n    try {\n      const read = this.#fs.readlinkSync(this.fullpath())\n      const linkTarget = this.parent.resolve(read)\n      if (linkTarget) {\n        return (this.#linkTarget = linkTarget)\n      }\n    } catch (er) {\n      this.#readlinkFail((er as NodeJS.ErrnoException).code)\n      return undefined\n    }\n  }\n\n  #readdirSuccess(children: Children) {\n    // succeeded, mark readdir called bit\n    this.#type |= READDIR_CALLED\n    // mark all remaining provisional children as ENOENT\n    for (let p = children.provisional; p < children.length; p++) {\n      children[p].#markENOENT()\n    }\n  }\n\n  #markENOENT() {\n    // mark as UNKNOWN and ENOENT\n    if (this.#type & ENOENT) return\n    this.#type = (this.#type | ENOENT) & IFMT_UNKNOWN\n    this.#markChildrenENOENT()\n  }\n\n  #markChildrenENOENT() {\n    // all children are provisional and do not exist\n    const children = this.children()\n    children.provisional = 0\n    for (const p of children) {\n      p.#markENOENT()\n    }\n  }\n\n  #markENOREALPATH() {\n    this.#type |= ENOREALPATH\n    this.#markENOTDIR()\n  }\n\n  // save the information when we know the entry is not a dir\n  #markENOTDIR() {\n    // entry is not a directory, so any children can't exist.\n    // this *should* be impossible, since any children created\n    // after it's been marked ENOTDIR should be marked ENOENT,\n    // so it won't even get to this point.\n    /* c8 ignore start */\n    if (this.#type & ENOTDIR) return\n    /* c8 ignore stop */\n    let t = this.#type\n    // this could happen if we stat a dir, then delete it,\n    // then try to read it or one of its children.\n    if ((t & IFMT) === IFDIR) t &= IFMT_UNKNOWN\n    this.#type = t | ENOTDIR\n    this.#markChildrenENOENT()\n  }\n\n  #readdirFail(code: string = '') {\n    // markENOTDIR and markENOENT also set provisional=0\n    if (code === 'ENOTDIR' || code === 'EPERM') {\n      this.#markENOTDIR()\n    } else if (code === 'ENOENT') {\n      this.#markENOENT()\n    } else {\n      this.children().provisional = 0\n    }\n  }\n\n  #lstatFail(code: string = '') {\n    // Windows just raises ENOENT in this case, disable for win CI\n    /* c8 ignore start */\n    if (code === 'ENOTDIR') {\n      // already know it has a parent by this point\n      const p = this.parent as PathBase\n      p.#markENOTDIR()\n    } else if (code === 'ENOENT') {\n      /* c8 ignore stop */\n      this.#markENOENT()\n    }\n  }\n\n  #readlinkFail(code: string = '') {\n    let ter = this.#type\n    ter |= ENOREADLINK\n    if (code === 'ENOENT') ter |= ENOENT\n    // windows gets a weird error when you try to readlink a file\n    if (code === 'EINVAL' || code === 'UNKNOWN') {\n      // exists, but not a symlink, we don't know WHAT it is, so remove\n      // all IFMT bits.\n      ter &= IFMT_UNKNOWN\n    }\n    this.#type = ter\n    // windows just gets ENOENT in this case.  We do cover the case,\n    // just disabled because it's impossible on Windows CI\n    /* c8 ignore start */\n    if (code === 'ENOTDIR' && this.parent) {\n      this.parent.#markENOTDIR()\n    }\n    /* c8 ignore stop */\n  }\n\n  #readdirAddChild(e: Dirent, c: Children) {\n    return (\n      this.#readdirMaybePromoteChild(e, c) ||\n      this.#readdirAddNewChild(e, c)\n    )\n  }\n\n  #readdirAddNewChild(e: Dirent, c: Children): PathBase {\n    // alloc new entry at head, so it's never provisional\n    const type = entToType(e)\n    const child = this.newChild(e.name, type, { parent: this })\n    const ifmt = child.#type & IFMT\n    if (ifmt !== IFDIR && ifmt !== IFLNK && ifmt !== UNKNOWN) {\n      child.#type |= ENOTDIR\n    }\n    c.unshift(child)\n    c.provisional++\n    return child\n  }\n\n  #readdirMaybePromoteChild(e: Dirent, c: Children): PathBase | undefined {\n    for (let p = c.provisional; p < c.length; p++) {\n      const pchild = c[p]\n      const name = this.nocase\n        ? normalizeNocase(e.name)\n        : normalize(e.name)\n      if (name !== pchild.#matchName) {\n        continue\n      }\n\n      return this.#readdirPromoteChild(e, pchild, p, c)\n    }\n  }\n\n  #readdirPromoteChild(\n    e: Dirent,\n    p: PathBase,\n    index: number,\n    c: Children\n  ): PathBase {\n    const v = p.name\n    // retain any other flags, but set ifmt from dirent\n    p.#type = (p.#type & IFMT_UNKNOWN) | entToType(e)\n    // case sensitivity fixing when we learn the true name.\n    if (v !== e.name) p.name = e.name\n\n    // just advance provisional index (potentially off the list),\n    // otherwise we have to splice/pop it out and re-insert at head\n    if (index !== c.provisional) {\n      if (index === c.length - 1) c.pop()\n      else c.splice(index, 1)\n      c.unshift(p)\n    }\n    c.provisional++\n    return p\n  }\n\n  /**\n   * Call lstat() on this Path, and update all known information that can be\n   * determined.\n   *\n   * Note that unlike `fs.lstat()`, the returned value does not contain some\n   * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n   * information is required, you will need to call `fs.lstat` yourself.\n   *\n   * If the Path refers to a nonexistent file, or if the lstat call fails for\n   * any reason, `undefined` is returned.  Otherwise the updated Path object is\n   * returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async lstat(): Promise<PathBase | undefined> {\n    if ((this.#type & ENOENT) === 0) {\n      try {\n        this.#applyStat(await this.#fs.promises.lstat(this.fullpath()))\n        return this\n      } catch (er) {\n        this.#lstatFail((er as NodeJS.ErrnoException).code)\n      }\n    }\n  }\n\n  /**\n   * synchronous {@link PathBase.lstat}\n   */\n  lstatSync(): PathBase | undefined {\n    if ((this.#type & ENOENT) === 0) {\n      try {\n        this.#applyStat(this.#fs.lstatSync(this.fullpath()))\n        return this\n      } catch (er) {\n        this.#lstatFail((er as NodeJS.ErrnoException).code)\n      }\n    }\n  }\n\n  #applyStat(st: Stats) {\n    const {\n      atime,\n      atimeMs,\n      birthtime,\n      birthtimeMs,\n      blksize,\n      blocks,\n      ctime,\n      ctimeMs,\n      dev,\n      gid,\n      ino,\n      mode,\n      mtime,\n      mtimeMs,\n      nlink,\n      rdev,\n      size,\n      uid,\n    } = st\n    this.#atime = atime\n    this.#atimeMs = atimeMs\n    this.#birthtime = birthtime\n    this.#birthtimeMs = birthtimeMs\n    this.#blksize = blksize\n    this.#blocks = blocks\n    this.#ctime = ctime\n    this.#ctimeMs = ctimeMs\n    this.#dev = dev\n    this.#gid = gid\n    this.#ino = ino\n    this.#mode = mode\n    this.#mtime = mtime\n    this.#mtimeMs = mtimeMs\n    this.#nlink = nlink\n    this.#rdev = rdev\n    this.#size = size\n    this.#uid = uid\n    const ifmt = entToType(st)\n    // retain any other flags, but set the ifmt\n    this.#type = (this.#type & IFMT_UNKNOWN) | ifmt | LSTAT_CALLED\n    if (ifmt !== UNKNOWN && ifmt !== IFDIR && ifmt !== IFLNK) {\n      this.#type |= ENOTDIR\n    }\n  }\n\n  #onReaddirCB: ((\n    er: NodeJS.ErrnoException | null,\n    entries: Path[]\n  ) => any)[] = []\n  #readdirCBInFlight: boolean = false\n  #callOnReaddirCB(children: Path[]) {\n    this.#readdirCBInFlight = false\n    const cbs = this.#onReaddirCB.slice()\n    this.#onReaddirCB.length = 0\n    cbs.forEach(cb => cb(null, children))\n  }\n\n  /**\n   * Standard node-style callback interface to get list of directory entries.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   *\n   * @param cb The callback called with (er, entries).  Note that the `er`\n   * param is somewhat extraneous, as all readdir() errors are handled and\n   * simply result in an empty set of entries being returned.\n   * @param allowZalgo Boolean indicating that immediately known results should\n   * *not* be deferred with `queueMicrotask`. Defaults to `false`. Release\n   * zalgo at your peril, the dark pony lord is devious and unforgiving.\n   */\n  readdirCB(\n    cb: (er: NodeJS.ErrnoException | null, entries: PathBase[]) => any,\n    allowZalgo: boolean = false\n  ): void {\n    if (!this.canReaddir()) {\n      if (allowZalgo) cb(null, [])\n      else queueMicrotask(() => cb(null, []))\n      return\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      const c = children.slice(0, children.provisional)\n      if (allowZalgo) cb(null, c)\n      else queueMicrotask(() => cb(null, c))\n      return\n    }\n\n    // don't have to worry about zalgo at this point.\n    this.#onReaddirCB.push(cb)\n    if (this.#readdirCBInFlight) {\n      return\n    }\n    this.#readdirCBInFlight = true\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    this.#fs.readdir(fullpath, { withFileTypes: true }, (er, entries) => {\n      if (er) {\n        this.#readdirFail((er as NodeJS.ErrnoException).code)\n        children.provisional = 0\n      } else {\n        // if we didn't get an error, we always get entries.\n        //@ts-ignore\n        for (const e of entries) {\n          this.#readdirAddChild(e, children)\n        }\n        this.#readdirSuccess(children)\n      }\n      this.#callOnReaddirCB(children.slice(0, children.provisional))\n      return\n    })\n  }\n\n  #asyncReaddirInFlight?: Promise<void>\n\n  /**\n   * Return an array of known child entries.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async readdir(): Promise<PathBase[]> {\n    if (!this.canReaddir()) {\n      return []\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      return children.slice(0, children.provisional)\n    }\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    if (this.#asyncReaddirInFlight) {\n      await this.#asyncReaddirInFlight\n    } else {\n      /* c8 ignore start */\n      let resolve: () => void = () => {}\n      /* c8 ignore stop */\n      this.#asyncReaddirInFlight = new Promise<void>(\n        res => (resolve = res)\n      )\n      try {\n        for (const e of await this.#fs.promises.readdir(fullpath, {\n          withFileTypes: true,\n        })) {\n          this.#readdirAddChild(e, children)\n        }\n        this.#readdirSuccess(children)\n      } catch (er) {\n        this.#readdirFail((er as NodeJS.ErrnoException).code)\n        children.provisional = 0\n      }\n      this.#asyncReaddirInFlight = undefined\n      resolve()\n    }\n    return children.slice(0, children.provisional)\n  }\n\n  /**\n   * synchronous {@link PathBase.readdir}\n   */\n  readdirSync(): PathBase[] {\n    if (!this.canReaddir()) {\n      return []\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      return children.slice(0, children.provisional)\n    }\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    try {\n      for (const e of this.#fs.readdirSync(fullpath, {\n        withFileTypes: true,\n      })) {\n        this.#readdirAddChild(e, children)\n      }\n      this.#readdirSuccess(children)\n    } catch (er) {\n      this.#readdirFail((er as NodeJS.ErrnoException).code)\n      children.provisional = 0\n    }\n    return children.slice(0, children.provisional)\n  }\n\n  canReaddir() {\n    if (this.#type & ENOCHILD) return false\n    const ifmt = IFMT & this.#type\n    // we always set ENOTDIR when setting IFMT, so should be impossible\n    /* c8 ignore start */\n    if (!(ifmt === UNKNOWN || ifmt === IFDIR || ifmt === IFLNK)) {\n      return false\n    }\n    /* c8 ignore stop */\n    return true\n  }\n\n  shouldWalk(\n    dirs: Set<PathBase | undefined>,\n    walkFilter?: (e: PathBase) => boolean\n  ): boolean {\n    return (\n      (this.#type & IFDIR) === IFDIR &&\n      !(this.#type & ENOCHILD) &&\n      !dirs.has(this) &&\n      (!walkFilter || walkFilter(this))\n    )\n  }\n\n  /**\n   * Return the Path object corresponding to path as resolved\n   * by realpath(3).\n   *\n   * If the realpath call fails for any reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   * On success, returns a Path object.\n   */\n  async realpath(): Promise<PathBase | undefined> {\n    if (this.#realpath) return this.#realpath\n    if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type) return undefined\n    try {\n      const rp = await this.#fs.promises.realpath(this.fullpath())\n      return (this.#realpath = this.resolve(rp))\n    } catch (_) {\n      this.#markENOREALPATH()\n    }\n  }\n\n  /**\n   * Synchronous {@link realpath}\n   */\n  realpathSync(): PathBase | undefined {\n    if (this.#realpath) return this.#realpath\n    if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type) return undefined\n    try {\n      const rp = this.#fs.realpathSync(this.fullpath())\n      return (this.#realpath = this.resolve(rp))\n    } catch (_) {\n      this.#markENOREALPATH()\n    }\n  }\n\n  /**\n   * Internal method to mark this Path object as the scurry cwd,\n   * called by {@link PathScurry#chdir}\n   *\n   * @internal\n   */\n  [setAsCwd](oldCwd: PathBase): void {\n    if (oldCwd === this) return\n\n    const changed = new Set<PathBase>([])\n    let rp = []\n    let p: PathBase = this\n    while (p && p.parent) {\n      changed.add(p)\n      p.#relative = rp.join(this.sep)\n      p.#relativePosix = rp.join('/')\n      p = p.parent\n      rp.push('..')\n    }\n    // now un-memoize parents of old cwd\n    p = oldCwd\n    while (p && p.parent && !changed.has(p)) {\n      p.#relative = undefined\n      p.#relativePosix = undefined\n      p = p.parent\n    }\n  }\n}\n\n/**\n * Path class used on win32 systems\n *\n * Uses `'\\\\'` as the path separator for returned paths, either `'\\\\'` or `'/'`\n * as the path separator for parsing paths.\n */\nexport class PathWin32 extends PathBase {\n  /**\n   * Separator for generating path strings.\n   */\n  sep: '\\\\' = '\\\\'\n  /**\n   * Separator for parsing path strings.\n   */\n  splitSep: RegExp = eitherSep\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts\n  ) {\n    super(name, type, root, roots, nocase, children, opts)\n  }\n\n  /**\n   * @internal\n   */\n  newChild(name: string, type: number = UNKNOWN, opts: PathOpts = {}) {\n    return new PathWin32(\n      name,\n      type,\n      this.root,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      opts\n    )\n  }\n\n  /**\n   * @internal\n   */\n  getRootString(path: string): string {\n    return win32.parse(path).root\n  }\n\n  /**\n   * @internal\n   */\n  getRoot(rootPath: string): PathBase {\n    rootPath = uncToDrive(rootPath.toUpperCase())\n    if (rootPath === this.root.name) {\n      return this.root\n    }\n    // ok, not that one, check if it matches another we know about\n    for (const [compare, root] of Object.entries(this.roots)) {\n      if (this.sameRoot(rootPath, compare)) {\n        return (this.roots[rootPath] = root)\n      }\n    }\n    // otherwise, have to create a new one.\n    return (this.roots[rootPath] = new PathScurryWin32(\n      rootPath,\n      this\n    ).root)\n  }\n\n  /**\n   * @internal\n   */\n  sameRoot(rootPath: string, compare: string = this.root.name): boolean {\n    // windows can (rarely) have case-sensitive filesystem, but\n    // UNC and drive letters are always case-insensitive, and canonically\n    // represented uppercase.\n    rootPath = rootPath\n      .toUpperCase()\n      .replace(/\\//g, '\\\\')\n      .replace(uncDriveRegexp, '$1\\\\')\n    return rootPath === compare\n  }\n}\n\n/**\n * Path class used on all posix systems.\n *\n * Uses `'/'` as the path separator.\n */\nexport class PathPosix extends PathBase {\n  /**\n   * separator for parsing path strings\n   */\n  splitSep: '/' = '/'\n  /**\n   * separator for generating path strings\n   */\n  sep: '/' = '/'\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts\n  ) {\n    super(name, type, root, roots, nocase, children, opts)\n  }\n\n  /**\n   * @internal\n   */\n  getRootString(path: string): string {\n    return path.startsWith('/') ? '/' : ''\n  }\n\n  /**\n   * @internal\n   */\n  getRoot(_rootPath: string): PathBase {\n    return this.root\n  }\n\n  /**\n   * @internal\n   */\n  newChild(name: string, type: number = UNKNOWN, opts: PathOpts = {}) {\n    return new PathPosix(\n      name,\n      type,\n      this.root,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      opts\n    )\n  }\n}\n\n/**\n * Options that may be provided to the PathScurry constructor\n */\nexport interface PathScurryOpts {\n  /**\n   * perform case-insensitive path matching. Default based on platform\n   * subclass.\n   */\n  nocase?: boolean\n  /**\n   * Number of Path entries to keep in the cache of Path child references.\n   *\n   * Setting this higher than 65536 will dramatically increase the data\n   * consumption and construction time overhead of each PathScurry.\n   *\n   * Setting this value to 256 or lower will significantly reduce the data\n   * consumption and construction time overhead, but may also reduce resolve()\n   * and readdir() performance on large filesystems.\n   *\n   * Default `16384`.\n   */\n  childrenCacheSize?: number\n  /**\n   * An object that overrides the built-in functions from the fs and\n   * fs/promises modules.\n   *\n   * See {@link FSOption}\n   */\n  fs?: FSOption\n}\n\n/**\n * The base class for all PathScurry classes, providing the interface for path\n * resolution and filesystem operations.\n *\n * Typically, you should *not* instantiate this class directly, but rather one\n * of the platform-specific classes, or the exported {@link PathScurry} which\n * defaults to the current platform.\n */\nexport abstract class PathScurryBase {\n  /**\n   * The root Path entry for the current working directory of this Scurry\n   */\n  root: PathBase\n  /**\n   * The string path for the root of this Scurry's current working directory\n   */\n  rootPath: string\n  /**\n   * A collection of all roots encountered, referenced by rootPath\n   */\n  roots: { [k: string]: PathBase }\n  /**\n   * The Path entry corresponding to this PathScurry's current working directory.\n   */\n  cwd: PathBase\n  #resolveCache: ResolveCache\n  #resolvePosixCache: ResolveCache\n  #children: ChildrenCache\n  /**\n   * Perform path comparisons case-insensitively.\n   *\n   * Defaults true on Darwin and Windows systems, false elsewhere.\n   */\n  nocase: boolean\n\n  /**\n   * The path separator used for parsing paths\n   *\n   * `'/'` on Posix systems, either `'/'` or `'\\\\'` on Windows\n   */\n  abstract sep: string | RegExp\n\n  #fs: FSValue\n\n  /**\n   * This class should not be instantiated directly.\n   *\n   * Use PathScurryWin32, PathScurryDarwin, PathScurryPosix, or PathScurry\n   *\n   * @internal\n   */\n  constructor(\n    cwd: URL | string = process.cwd(),\n    pathImpl: typeof win32 | typeof posix,\n    sep: string | RegExp,\n    {\n      nocase,\n      childrenCacheSize = 16 * 1024,\n      fs = defaultFS,\n    }: PathScurryOpts = {}\n  ) {\n    this.#fs = fsFromOption(fs)\n    if (cwd instanceof URL || cwd.startsWith('file://')) {\n      cwd = fileURLToPath(cwd)\n    }\n    // resolve and split root, and then add to the store.\n    // this is the only time we call path.resolve()\n    const cwdPath = pathImpl.resolve(cwd)\n    this.roots = Object.create(null)\n    this.rootPath = this.parseRootPath(cwdPath)\n    this.#resolveCache = new ResolveCache()\n    this.#resolvePosixCache = new ResolveCache()\n    this.#children = new ChildrenCache(childrenCacheSize)\n\n    const split = cwdPath.substring(this.rootPath.length).split(sep)\n    // resolve('/') leaves '', splits to [''], we don't want that.\n    if (split.length === 1 && !split[0]) {\n      split.pop()\n    }\n    /* c8 ignore start */\n    if (nocase === undefined) {\n      throw new TypeError(\n        'must provide nocase setting to PathScurryBase ctor'\n      )\n    }\n    /* c8 ignore stop */\n    this.nocase = nocase\n    this.root = this.newRoot(this.#fs)\n    this.roots[this.rootPath] = this.root\n    let prev: PathBase = this.root\n    let len = split.length - 1\n    const joinSep = pathImpl.sep\n    let abs = this.rootPath\n    let sawFirst = false\n    for (const part of split) {\n      const l = len--\n      prev = prev.child(part, {\n        relative: new Array(l).fill('..').join(joinSep),\n        relativePosix: new Array(l).fill('..').join('/'),\n        fullpath: (abs += (sawFirst ? '' : joinSep) + part),\n      })\n      sawFirst = true\n    }\n    this.cwd = prev\n  }\n\n  /**\n   * Get the depth of a provided path, string, or the cwd\n   */\n  depth(path: Path | string = this.cwd): number {\n    if (typeof path === 'string') {\n      path = this.cwd.resolve(path)\n    }\n    return path.depth()\n  }\n\n  /**\n   * Parse the root portion of a path string\n   *\n   * @internal\n   */\n  abstract parseRootPath(dir: string): string\n  /**\n   * create a new Path to use as root during construction.\n   *\n   * @internal\n   */\n  abstract newRoot(fs: FSValue): PathBase\n  /**\n   * Determine whether a given path string is absolute\n   */\n  abstract isAbsolute(p: string): boolean\n\n  /**\n   * Return the cache of child entries.  Exposed so subclasses can create\n   * child Path objects in a platform-specific way.\n   *\n   * @internal\n   */\n  childrenCache() {\n    return this.#children\n  }\n\n  /**\n   * Resolve one or more path strings to a resolved string\n   *\n   * Same interface as require('path').resolve.\n   *\n   * Much faster than path.resolve() when called multiple times for the same\n   * path, because the resolved Path objects are cached.  Much slower\n   * otherwise.\n   */\n  resolve(...paths: string[]): string {\n    // first figure out the minimum number of paths we have to test\n    // we always start at cwd, but any absolutes will bump the start\n    let r = ''\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const p = paths[i]\n      if (!p || p === '.') continue\n      r = r ? `${p}/${r}` : p\n      if (this.isAbsolute(p)) {\n        break\n      }\n    }\n    const cached = this.#resolveCache.get(r)\n    if (cached !== undefined) {\n      return cached\n    }\n    const result = this.cwd.resolve(r).fullpath()\n    this.#resolveCache.set(r, result)\n    return result\n  }\n\n  /**\n   * Resolve one or more path strings to a resolved string, returning\n   * the posix path.  Identical to .resolve() on posix systems, but on\n   * windows will return a forward-slash separated UNC path.\n   *\n   * Same interface as require('path').resolve.\n   *\n   * Much faster than path.resolve() when called multiple times for the same\n   * path, because the resolved Path objects are cached.  Much slower\n   * otherwise.\n   */\n  resolvePosix(...paths: string[]): string {\n    // first figure out the minimum number of paths we have to test\n    // we always start at cwd, but any absolutes will bump the start\n    let r = ''\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const p = paths[i]\n      if (!p || p === '.') continue\n      r = r ? `${p}/${r}` : p\n      if (this.isAbsolute(p)) {\n        break\n      }\n    }\n    const cached = this.#resolvePosixCache.get(r)\n    if (cached !== undefined) {\n      return cached\n    }\n    const result = this.cwd.resolve(r).fullpathPosix()\n    this.#resolvePosixCache.set(r, result)\n    return result\n  }\n\n  /**\n   * find the relative path from the cwd to the supplied path string or entry\n   */\n  relative(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.relative()\n  }\n\n  /**\n   * find the relative path from the cwd to the supplied path string or\n   * entry, using / as the path delimiter, even on Windows.\n   */\n  relativePosix(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.relativePosix()\n  }\n\n  /**\n   * Return the basename for the provided string or Path object\n   */\n  basename(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.name\n  }\n\n  /**\n   * Return the dirname for the provided string or Path object\n   */\n  dirname(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return (entry.parent || entry).fullpath()\n  }\n\n  /**\n   * Return an array of known child entries.\n   *\n   * First argument may be either a string, or a Path object.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   *\n   * Unlike `fs.readdir()`, the `withFileTypes` option defaults to `true`. Set\n   * `{ withFileTypes: false }` to return strings.\n   */\n\n  readdir(): Promise<PathBase[]>\n  readdir(opts: { withFileTypes: true }): Promise<PathBase[]>\n  readdir(opts: { withFileTypes: false }): Promise<string[]>\n  readdir(opts: { withFileTypes: boolean }): Promise<PathBase[] | string[]>\n  readdir(entry: PathBase | string): Promise<PathBase[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: true }\n  ): Promise<PathBase[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: false }\n  ): Promise<string[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: boolean }\n  ): Promise<PathBase[] | string[]>\n  async readdir(\n    entry: PathBase | string | { withFileTypes: boolean } = this.cwd,\n    opts: { withFileTypes: boolean } = {\n      withFileTypes: true,\n    }\n  ): Promise<PathBase[] | string[]> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const { withFileTypes } = opts\n    if (!entry.canReaddir()) {\n      return []\n    } else {\n      const p = await entry.readdir()\n      return withFileTypes ? p : p.map(e => e.name)\n    }\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.readdir}\n   */\n  readdirSync(): PathBase[]\n  readdirSync(opts: { withFileTypes: true }): PathBase[]\n  readdirSync(opts: { withFileTypes: false }): string[]\n  readdirSync(opts: { withFileTypes: boolean }): PathBase[] | string[]\n  readdirSync(entry: PathBase | string): PathBase[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: true }\n  ): PathBase[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: false }\n  ): string[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: boolean }\n  ): PathBase[] | string[]\n  readdirSync(\n    entry: PathBase | string | { withFileTypes: boolean } = this.cwd,\n    opts: { withFileTypes: boolean } = {\n      withFileTypes: true,\n    }\n  ): PathBase[] | string[] {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const { withFileTypes = true } = opts\n    if (!entry.canReaddir()) {\n      return []\n    } else if (withFileTypes) {\n      return entry.readdirSync()\n    } else {\n      return entry.readdirSync().map(e => e.name)\n    }\n  }\n\n  /**\n   * Call lstat() on the string or Path object, and update all known\n   * information that can be determined.\n   *\n   * Note that unlike `fs.lstat()`, the returned value does not contain some\n   * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n   * information is required, you will need to call `fs.lstat` yourself.\n   *\n   * If the Path refers to a nonexistent file, or if the lstat call fails for\n   * any reason, `undefined` is returned.  Otherwise the updated Path object is\n   * returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async lstat(\n    entry: string | PathBase = this.cwd\n  ): Promise<PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.lstat()\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.lstat}\n   */\n  lstatSync(entry: string | PathBase = this.cwd): PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.lstatSync()\n  }\n\n  /**\n   * Return the Path object or string path corresponding to the target of a\n   * symbolic link.\n   *\n   * If the path is not a symbolic link, or if the readlink call fails for any\n   * reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   *\n   * `{withFileTypes}` option defaults to `false`.\n   *\n   * On success, returns a Path object if `withFileTypes` option is true,\n   * otherwise a string.\n   */\n  readlink(): Promise<string | undefined>\n  readlink(opt: { withFileTypes: false }): Promise<string | undefined>\n  readlink(opt: { withFileTypes: true }): Promise<PathBase | undefined>\n  readlink(opt: {\n    withFileTypes: boolean\n  }): Promise<PathBase | string | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false }\n  ): Promise<string | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt: { withFileTypes: true }\n  ): Promise<PathBase | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean }\n  ): Promise<string | PathBase | undefined>\n  async readlink(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    }\n  ): Promise<string | PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = await entry.readlink()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.readlink}\n   */\n  readlinkSync(): string | undefined\n  readlinkSync(opt: { withFileTypes: false }): string | undefined\n  readlinkSync(opt: { withFileTypes: true }): PathBase | undefined\n  readlinkSync(opt: {\n    withFileTypes: boolean\n  }): PathBase | string | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false }\n  ): string | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: true }\n  ): PathBase | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean }\n  ): string | PathBase | undefined\n  readlinkSync(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    }\n  ): string | PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = entry.readlinkSync()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * Return the Path object or string path corresponding to path as resolved\n   * by realpath(3).\n   *\n   * If the realpath call fails for any reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   *\n   * `{withFileTypes}` option defaults to `false`.\n   *\n   * On success, returns a Path object if `withFileTypes` option is true,\n   * otherwise a string.\n   */\n  realpath(): Promise<string | undefined>\n  realpath(opt: { withFileTypes: false }): Promise<string | undefined>\n  realpath(opt: { withFileTypes: true }): Promise<PathBase | undefined>\n  realpath(opt: {\n    withFileTypes: boolean\n  }): Promise<PathBase | string | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false }\n  ): Promise<string | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt: { withFileTypes: true }\n  ): Promise<PathBase | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean }\n  ): Promise<string | PathBase | undefined>\n  async realpath(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    }\n  ): Promise<string | PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = await entry.realpath()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  realpathSync(): string | undefined\n  realpathSync(opt: { withFileTypes: false }): string | undefined\n  realpathSync(opt: { withFileTypes: true }): PathBase | undefined\n  realpathSync(opt: {\n    withFileTypes: boolean\n  }): PathBase | string | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false }\n  ): string | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: true }\n  ): PathBase | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean }\n  ): string | PathBase | undefined\n  realpathSync(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    }\n  ): string | PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = entry.realpathSync()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * Asynchronously walk the directory tree, returning an array of\n   * all path strings or Path objects found.\n   *\n   * Note that this will be extremely memory-hungry on large filesystems.\n   * In such cases, it may be better to use the stream or async iterator\n   * walk implementation.\n   */\n  walk(): Promise<PathBase[]>\n  walk(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Promise<PathBase[]>\n  walk(opts: WalkOptionsWithFileTypesFalse): Promise<string[]>\n  walk(opts: WalkOptions): Promise<string[] | PathBase[]>\n  walk(entry: string | PathBase): Promise<PathBase[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Promise<PathBase[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): Promise<string[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): Promise<PathBase[] | string[]>\n  async walk(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {}\n  ): Promise<PathBase[] | string[]> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results: (string | PathBase)[] = []\n    if (!filter || filter(entry)) {\n      results.push(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>()\n    const walk = (\n      dir: PathBase,\n      cb: (er?: NodeJS.ErrnoException) => void\n    ) => {\n      dirs.add(dir)\n      dir.readdirCB((er, entries) => {\n        /* c8 ignore start */\n        if (er) {\n          return cb(er)\n        }\n        /* c8 ignore stop */\n        let len = entries.length\n        if (!len) return cb()\n        const next = () => {\n          if (--len === 0) {\n            cb()\n          }\n        }\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            results.push(withFileTypes ? e : e.fullpath())\n          }\n          if (follow && e.isSymbolicLink()) {\n            e.realpath()\n              .then(r => (r?.isUnknown() ? r.lstat() : r))\n              .then(r =>\n                r?.shouldWalk(dirs, walkFilter) ? walk(r, next) : next()\n              )\n          } else {\n            if (e.shouldWalk(dirs, walkFilter)) {\n              walk(e, next)\n            } else {\n              next()\n            }\n          }\n        }\n      }, true) // zalgooooooo\n    }\n\n    const start = entry\n    return new Promise<PathBase[] | string[]>((res, rej) => {\n      walk(start, er => {\n        /* c8 ignore start */\n        if (er) return rej(er)\n        /* c8 ignore stop */\n        res(results as PathBase[] | string[])\n      })\n    })\n  }\n\n  /**\n   * Synchronously walk the directory tree, returning an array of\n   * all path strings or Path objects found.\n   *\n   * Note that this will be extremely memory-hungry on large filesystems.\n   * In such cases, it may be better to use the stream or async iterator\n   * walk implementation.\n   */\n  walkSync(): PathBase[]\n  walkSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): PathBase[]\n  walkSync(opts: WalkOptionsWithFileTypesFalse): string[]\n  walkSync(opts: WalkOptions): string[] | PathBase[]\n  walkSync(entry: string | PathBase): PathBase[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue\n  ): PathBase[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): string[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): PathBase[] | string[]\n  walkSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {}\n  ): PathBase[] | string[] {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results: (string | PathBase)[] = []\n    if (!filter || filter(entry)) {\n      results.push(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>([entry])\n    for (const dir of dirs) {\n      const entries = dir.readdirSync()\n      for (const e of entries) {\n        if (!filter || filter(e)) {\n          results.push(withFileTypes ? e : e.fullpath())\n        }\n        let r: PathBase | undefined = e\n        if (e.isSymbolicLink()) {\n          if (!(follow && (r = e.realpathSync()))) continue\n          if (r.isUnknown()) r.lstatSync()\n        }\n        if (r.shouldWalk(dirs, walkFilter)) {\n          dirs.add(r)\n        }\n      }\n    }\n    return results as string[] | PathBase[]\n  }\n\n  /**\n   * Support for `for await`\n   *\n   * Alias for {@link PathScurryBase.iterate}\n   *\n   * Note: As of Node 19, this is very slow, compared to other methods of\n   * walking.  Consider using {@link PathScurryBase.stream} if memory overhead\n   * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n   */\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n\n  /**\n   * Async generator form of {@link PathScurryBase.walk}\n   *\n   * Note: As of Node 19, this is very slow, compared to other methods of\n   * walking, especially if most/all of the directory tree has been previously\n   * walked.  Consider using {@link PathScurryBase.stream} if memory overhead\n   * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n   */\n  iterate(): AsyncGenerator<PathBase, void, void>\n  iterate(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): AsyncGenerator<PathBase, void, void>\n  iterate(\n    opts: WalkOptionsWithFileTypesFalse\n  ): AsyncGenerator<string, void, void>\n  iterate(opts: WalkOptions): AsyncGenerator<string | PathBase, void, void>\n  iterate(entry: string | PathBase): AsyncGenerator<PathBase, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): AsyncGenerator<PathBase, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): AsyncGenerator<string, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): AsyncGenerator<PathBase | string, void, void>\n  iterate(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    options: WalkOptions = {}\n  ): AsyncGenerator<PathBase | string, void, void> {\n    // iterating async over the stream is significantly more performant,\n    // especially in the warm-cache scenario, because it buffers up directory\n    // entries in the background instead of waiting for a yield for each one.\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      options = entry\n      entry = this.cwd\n    }\n    return this.stream(entry, options)[Symbol.asyncIterator]()\n  }\n\n  /**\n   * Iterating over a PathScurry performs a synchronous walk.\n   *\n   * Alias for {@link PathScurryBase.iterateSync}\n   */\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  iterateSync(): Generator<PathBase, void, void>\n  iterateSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Generator<PathBase, void, void>\n  iterateSync(\n    opts: WalkOptionsWithFileTypesFalse\n  ): Generator<string, void, void>\n  iterateSync(opts: WalkOptions): Generator<string | PathBase, void, void>\n  iterateSync(entry: string | PathBase): Generator<PathBase, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Generator<PathBase, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): Generator<string, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): Generator<PathBase | string, void, void>\n  *iterateSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {}\n  ): Generator<PathBase | string, void, void> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    if (!filter || filter(entry)) {\n      yield withFileTypes ? entry : entry.fullpath()\n    }\n    const dirs = new Set<PathBase>([entry])\n    for (const dir of dirs) {\n      const entries = dir.readdirSync()\n      for (const e of entries) {\n        if (!filter || filter(e)) {\n          yield withFileTypes ? e : e.fullpath()\n        }\n        let r: PathBase | undefined = e\n        if (e.isSymbolicLink()) {\n          if (!(follow && (r = e.realpathSync()))) continue\n          if (r.isUnknown()) r.lstatSync()\n        }\n        if (r.shouldWalk(dirs, walkFilter)) {\n          dirs.add(r)\n        }\n      }\n    }\n  }\n\n  /**\n   * Stream form of {@link PathScurryBase.walk}\n   *\n   * Returns a Minipass stream that emits {@link PathBase} objects by default,\n   * or strings if `{ withFileTypes: false }` is set in the options.\n   */\n  stream(): Minipass<PathBase>\n  stream(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Minipass<PathBase>\n  stream(opts: WalkOptionsWithFileTypesFalse): Minipass<string>\n  stream(opts: WalkOptions): Minipass<string | PathBase>\n  stream(entry: string | PathBase): Minipass<PathBase>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue\n  ): Minipass<PathBase>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): Minipass<string>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): Minipass<string> | Minipass<PathBase>\n  stream(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {}\n  ): Minipass<string> | Minipass<PathBase> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results = new Minipass<string | PathBase>({ objectMode: true })\n    if (!filter || filter(entry)) {\n      results.write(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>()\n    const queue: PathBase[] = [entry]\n    let processing = 0\n    const process = () => {\n      let paused = false\n      while (!paused) {\n        const dir = queue.shift()\n        if (!dir) {\n          if (processing === 0) results.end()\n          return\n        }\n\n        processing++\n        dirs.add(dir)\n\n        const onReaddir = (\n          er: null | NodeJS.ErrnoException,\n          entries: PathBase[],\n          didRealpaths: boolean = false\n        ) => {\n          /* c8 ignore start */\n          if (er) return results.emit('error', er)\n          /* c8 ignore stop */\n          if (follow && !didRealpaths) {\n            const promises: Promise<PathBase | undefined>[] = []\n            for (const e of entries) {\n              if (e.isSymbolicLink()) {\n                promises.push(\n                  e\n                    .realpath()\n                    .then((r: PathBase | undefined) =>\n                      r?.isUnknown() ? r.lstat() : r\n                    )\n                )\n              }\n            }\n            if (promises.length) {\n              Promise.all(promises).then(() =>\n                onReaddir(null, entries, true)\n              )\n              return\n            }\n          }\n\n          for (const e of entries) {\n            if (e && (!filter || filter(e))) {\n              if (!results.write(withFileTypes ? e : e.fullpath())) {\n                paused = true\n              }\n            }\n          }\n\n          processing--\n          for (const e of entries) {\n            const r = e.realpathCached() || e\n            if (r.shouldWalk(dirs, walkFilter)) {\n              queue.push(r)\n            }\n          }\n          if (paused && !results.flowing) {\n            results.once('drain', process)\n          } else if (!sync) {\n            process()\n          }\n        }\n\n        // zalgo containment\n        let sync = true\n        dir.readdirCB(onReaddir, true)\n        sync = false\n      }\n    }\n    process()\n    return results as Minipass<string> | Minipass<PathBase>\n  }\n\n  /**\n   * Synchronous form of {@link PathScurryBase.stream}\n   *\n   * Returns a Minipass stream that emits {@link PathBase} objects by default,\n   * or strings if `{ withFileTypes: false }` is set in the options.\n   *\n   * Will complete the walk in a single tick if the stream is consumed fully.\n   * Otherwise, will pause as needed for stream backpressure.\n   */\n  streamSync(): Minipass<PathBase>\n  streamSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Minipass<PathBase>\n  streamSync(opts: WalkOptionsWithFileTypesFalse): Minipass<string>\n  streamSync(opts: WalkOptions): Minipass<string | PathBase>\n  streamSync(entry: string | PathBase): Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue\n  ): Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): Minipass<string>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): Minipass<string> | Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {}\n  ): Minipass<string> | Minipass<PathBase> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results = new Minipass<string | PathBase>({ objectMode: true })\n    const dirs = new Set<PathBase>()\n    if (!filter || filter(entry)) {\n      results.write(withFileTypes ? entry : entry.fullpath())\n    }\n    const queue: PathBase[] = [entry]\n    let processing = 0\n    const process = () => {\n      let paused = false\n      while (!paused) {\n        const dir = queue.shift()\n        if (!dir) {\n          if (processing === 0) results.end()\n          return\n        }\n        processing++\n        dirs.add(dir)\n\n        const entries = dir.readdirSync()\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            if (!results.write(withFileTypes ? e : e.fullpath())) {\n              paused = true\n            }\n          }\n        }\n        processing--\n        for (const e of entries) {\n          let r: PathBase | undefined = e\n          if (e.isSymbolicLink()) {\n            if (!(follow && (r = e.realpathSync()))) continue\n            if (r.isUnknown()) r.lstatSync()\n          }\n          if (r.shouldWalk(dirs, walkFilter)) {\n            queue.push(r)\n          }\n        }\n      }\n      if (paused && !results.flowing) results.once('drain', process)\n    }\n    process()\n    return results as Minipass<string> | Minipass<PathBase>\n  }\n\n  chdir(path: string | Path = this.cwd) {\n    const oldCwd = this.cwd\n    this.cwd = typeof path === 'string' ? this.cwd.resolve(path) : path\n    this.cwd[setAsCwd](oldCwd)\n  }\n}\n\n/**\n * Options provided to all walk methods.\n */\nexport interface WalkOptions {\n  /**\n   * Return results as {@link PathBase} objects rather than strings.\n   * When set to false, results are fully resolved paths, as returned by\n   * {@link PathBase.fullpath}.\n   * @default true\n   */\n  withFileTypes?: boolean\n\n  /**\n   *  Attempt to read directory entries from symbolic links. Otherwise, only\n   *  actual directories are traversed. Regardless of this setting, a given\n   *  target path will only ever be walked once, meaning that a symbolic link\n   *  to a previously traversed directory will never be followed.\n   *\n   *  Setting this imposes a slight performance penalty, because `readlink`\n   *  must be called on all symbolic links encountered, in order to avoid\n   *  infinite cycles.\n   * @default false\n   */\n  follow?: boolean\n\n  /**\n   * Only return entries where the provided function returns true.\n   *\n   * This will not prevent directories from being traversed, even if they do\n   * not pass the filter, though it will prevent directories themselves from\n   * being included in the result set.  See {@link walkFilter}\n   *\n   * Asynchronous functions are not supported here.\n   *\n   * By default, if no filter is provided, all entries and traversed\n   * directories are included.\n   */\n  filter?: (entry: PathBase) => boolean\n\n  /**\n   * Only traverse directories (and in the case of {@link follow} being set to\n   * true, symbolic links to directories) if the provided function returns\n   * true.\n   *\n   * This will not prevent directories from being included in the result set,\n   * even if they do not pass the supplied filter function.  See {@link filter}\n   * to do that.\n   *\n   * Asynchronous functions are not supported here.\n   */\n  walkFilter?: (entry: PathBase) => boolean\n}\n\nexport type WalkOptionsWithFileTypesUnset = WalkOptions & {\n  withFileTypes?: undefined\n}\nexport type WalkOptionsWithFileTypesTrue = WalkOptions & {\n  withFileTypes: true\n}\nexport type WalkOptionsWithFileTypesFalse = WalkOptions & {\n  withFileTypes: false\n}\n\n/**\n * Windows implementation of {@link PathScurryBase}\n *\n * Defaults to case insensitve, uses `'\\\\'` to generate path strings.  Uses\n * {@link PathWin32} for Path objects.\n */\nexport class PathScurryWin32 extends PathScurryBase {\n  /**\n   * separator for generating path strings\n   */\n  sep: '\\\\' = '\\\\'\n\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {}\n  ) {\n    const { nocase = true } = opts\n    super(cwd, win32, '\\\\', { ...opts, nocase })\n    this.nocase = nocase\n    for (let p: PathBase | undefined = this.cwd; p; p = p.parent) {\n      p.nocase = this.nocase\n    }\n  }\n\n  /**\n   * @internal\n   */\n  parseRootPath(dir: string): string {\n    // if the path starts with a single separator, it's not a UNC, and we'll\n    // just get separator as the root, and driveFromUNC will return \\\n    // In that case, mount \\ on the root from the cwd.\n    return win32.parse(dir).root.toUpperCase()\n  }\n\n  /**\n   * @internal\n   */\n  newRoot(fs: FSValue) {\n    return new PathWin32(\n      this.rootPath,\n      IFDIR,\n      undefined,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      { fs }\n    )\n  }\n\n  /**\n   * Return true if the provided path string is an absolute path\n   */\n  isAbsolute(p: string): boolean {\n    return (\n      p.startsWith('/') || p.startsWith('\\\\') || /^[a-z]:(\\/|\\\\)/i.test(p)\n    )\n  }\n}\n\n/**\n * {@link PathScurryBase} implementation for all posix systems other than Darwin.\n *\n * Defaults to case-sensitive matching, uses `'/'` to generate path strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nexport class PathScurryPosix extends PathScurryBase {\n  /**\n   * separator for generating path strings\n   */\n  sep: '/' = '/'\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {}\n  ) {\n    const { nocase = false } = opts\n    super(cwd, posix, '/', { ...opts, nocase })\n    this.nocase = nocase\n  }\n\n  /**\n   * @internal\n   */\n  parseRootPath(_dir: string): string {\n    return '/'\n  }\n\n  /**\n   * @internal\n   */\n  newRoot(fs: FSValue) {\n    return new PathPosix(\n      this.rootPath,\n      IFDIR,\n      undefined,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      { fs }\n    )\n  }\n\n  /**\n   * Return true if the provided path string is an absolute path\n   */\n  isAbsolute(p: string): boolean {\n    return p.startsWith('/')\n  }\n}\n\n/**\n * {@link PathScurryBase} implementation for Darwin (macOS) systems.\n *\n * Defaults to case-insensitive matching, uses `'/'` for generating path\n * strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nexport class PathScurryDarwin extends PathScurryPosix {\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {}\n  ) {\n    const { nocase = true } = opts\n    super(cwd, { ...opts, nocase })\n  }\n}\n\n/**\n * Default {@link PathBase} implementation for the current platform.\n *\n * {@link PathWin32} on Windows systems, {@link PathPosix} on all others.\n */\nexport const Path = process.platform === 'win32' ? PathWin32 : PathPosix\nexport type Path = PathBase | InstanceType<typeof Path>\n\n/**\n * Default {@link PathScurryBase} implementation for the current platform.\n *\n * {@link PathScurryWin32} on Windows systems, {@link PathScurryDarwin} on\n * Darwin (macOS) systems, {@link PathScurryPosix} on all others.\n */\nexport const PathScurry:\n  | typeof PathScurryWin32\n  | typeof PathScurryDarwin\n  | typeof PathScurryPosix =\n  process.platform === 'win32'\n    ? PathScurryWin32\n    : process.platform === 'darwin'\n    ? PathScurryDarwin\n    : PathScurryPosix\nexport type PathScurry = PathScurryBase | InstanceType<typeof PathScurry>\n"]},"url":null,"sourceURL":null},"file:///home/gcadoret/www/lcov-reporter/node_modules/path-scurry/node_modules/lru-cache/dist/cjs/index.js":{"lineLengths":[13,3,19,3,62,26,47,18,41,17,11,25,21,74,21,46,45,50,53,2,36,32,21,32,16,28,16,22,15,24,33,35,9,6,16,32,23,29,9,26,23,36,23,24,40,24,39,24,52,27,13,42,9,6,82,34,36,19,39,78,67,71,75,81,81,133,6,1,20,47,28,73,21,40,70,71,71,72,55,27,56,44,10,27,20,32,25,36,29,48,31,27,20,31,23,20,21,5,1,13,9,11,26,33,24,42,21,22,35,42,36,17,5,31,29,35,75,9,28,37,24,5,13,37,5,11,40,5,1,3,61,2,64,72,70,77,25,3,16,75,76,40,9,13,13,18,17,7,39,7,8,7,49,7,18,7,48,7,17,7,50,7,19,7,50,7,19,7,46,7,15,7,50,7,19,7,47,7,16,7,48,7,17,7,51,7,20,7,60,7,29,7,54,7,23,7,58,7,27,7,62,7,31,7,52,7,21,26,10,20,12,13,13,10,10,10,10,10,14,11,12,10,16,20,21,7,61,65,65,6,45,6,16,7,37,16,25,30,26,28,30,32,32,26,26,24,31,14,24,31,14,26,22,62,108,56,54,56,50,10,5,34,7,51,7,15,25,5,7,55,7,19,29,5,7,64,7,26,36,5,7,58,7,16,26,5,7,59,7,23,33,5,7,55,7,19,29,5,7,60,7,24,34,5,26,348,42,76,9,58,25,57,9,24,32,58,47,35,55,106,13,61,75,13,9,40,48,79,9,40,45,33,55,55,40,40,23,23,39,23,33,44,36,9,49,46,32,9,14,43,39,9,43,53,47,41,67,71,63,51,57,38,38,47,91,17,13,47,92,13,43,9,39,55,47,47,28,58,31,20,43,28,23,38,83,13,42,9,51,71,84,9,65,47,35,33,86,62,74,13,9,5,7,58,7,26,52,5,30,46,48,26,30,64,50,30,49,44,47,58,21,28,57,37,30,30,17,36,13,10,40,63,10,46,30,40,44,33,37,51,47,48,13,10,66,39,26,30,33,41,30,80,49,37,30,30,17,36,13,21,10,39,48,38,25,13,36,40,43,32,13,56,29,10,34,40,38,71,10,5,55,31,27,28,24,27,31,47,33,28,41,49,29,10,62,55,66,45,25,13,34,38,64,82,21,49,42,104,21,17,22,91,82,48,17,13,24,10,54,32,32,61,56,38,17,13,49,25,40,66,13,10,5,32,40,55,38,100,9,17,6,54,25,45,45,26,17,54,28,17,39,26,17,22,38,17,13,9,5,55,25,45,45,26,17,54,28,17,39,26,17,22,38,17,13,9,5,26,38,62,5,7,56,63,7,16,42,49,49,61,59,13,9,5,7,56,6,56,63,7,17,43,49,49,61,59,13,9,5,7,57,63,7,13,42,39,34,61,24,13,9,5,7,53,6,57,63,7,14,43,39,34,61,24,13,9,5,7,59,63,7,15,42,39,34,61,39,13,9,5,7,55,6,59,63,7,16,43,39,34,61,39,13,9,5,7,65,31,7,25,30,5,7,76,71,7,31,42,39,52,40,20,36,25,52,62,13,9,5,7,74,66,69,42,7,31,42,39,52,40,20,36,25,58,9,5,7,74,78,7,32,43,39,52,40,20,36,25,58,9,5,7,70,23,7,18,28,63,35,46,31,13,9,23,5,7,75,29,7,12,23,62,41,39,52,40,20,57,25,36,45,42,73,76,57,59,13,30,44,13,38,9,19,5,7,76,73,48,7,15,21,41,30,75,77,77,31,18,76,53,47,13,46,9,5,7,32,6,73,30,7,32,30,27,24,9,140,60,84,53,53,60,25,36,51,13,66,27,24,9,71,34,23,37,28,41,38,46,44,38,37,37,39,43,43,31,25,51,23,35,32,9,14,21,36,48,31,78,74,63,61,47,57,25,52,64,25,21,17,43,43,58,21,48,65,21,17,44,55,41,29,43,78,53,33,47,51,17,13,30,38,13,9,39,42,9,25,31,52,13,23,47,9,73,38,21,42,46,13,9,20,5,7,65,37,7,11,13,32,54,34,51,51,56,21,17,45,31,17,13,9,17,58,42,25,46,50,17,13,9,5,18,32,38,38,65,60,9,61,35,47,13,40,54,13,9,35,67,19,44,44,34,9,31,40,34,9,14,42,9,31,21,20,5,7,75,76,20,6,38,58,7,29,76,42,34,43,45,55,29,13,40,37,47,17,29,39,51,17,28,13,30,37,47,13,9,26,32,9,21,5,7,75,13,6,55,54,7,31,61,42,34,52,43,80,75,9,5,50,73,41,21,9,28,35,65,74,30,11,27,30,20,20,10,48,42,76,33,46,55,65,36,64,17,22,56,17,13,58,51,13,81,25,45,38,50,71,21,26,39,21,17,22,39,59,54,17,13,21,10,28,33,52,47,13,33,10,35,42,80,87,76,25,45,85,86,79,26,35,17,46,72,72,71,73,67,17,13,29,78,56,17,47,13,44,25,13,10,37,61,48,73,13,58,58,43,55,48,53,35,69,57,47,21,17,15,10,27,50,50,37,34,36,34,11,34,45,73,40,9,14,38,9,18,5,27,34,25,20,22,35,55,47,5,39,16,22,122,22,144,34,288,36,23,37,32,27,31,35,23,15,9,25,23,27,31,16,27,17,28,24,37,39,35,29,19,19,10,40,34,23,38,72,38,9,14,47,43,45,81,29,46,30,52,17,75,13,79,76,49,44,27,41,40,37,47,17,27,51,25,13,77,33,72,66,52,25,61,40,48,13,74,9,5,7,74,19,6,62,7,29,153,42,34,47,60,23,47,39,27,41,67,32,46,39,21,45,52,58,17,22,33,37,67,52,21,79,17,13,18,27,39,80,81,82,84,53,31,54,17,40,37,47,17,29,13,9,26,32,9,5,20,26,26,5,24,41,44,15,69,50,29,29,23,35,39,47,13,18,68,13,45,31,9,5,7,38,60,7,15,28,31,46,38,31,39,33,17,22,48,51,53,72,21,73,47,60,25,52,67,25,21,43,53,53,47,55,21,52,55,21,26,74,74,21,33,43,17,13,9,62,38,21,42,46,13,9,23,5,7,58,7,13,67,43,45,64,13,18,47,39,52,17,44,59,17,13,9,29,38,38,41,31,33,9,26,32,9,23,23,30,33,23,54,38,21,42,46,13,9,5,1,28,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///home/gcadoret/www/lcov-reporter/node_modules/path-scurry/node_modules/lru-cache/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @module LRUCache\n */\n\n// module-private names and types\ntype Perf = { now: () => number }\nconst perf: Perf =\n  typeof performance === 'object' &&\n  performance &&\n  typeof performance.now === 'function'\n    ? performance\n    : Date\n\nconst warned = new Set<string>()\n\n// either a function or a class\ntype ForC = ((...a: any[]) => any) | { new (...a: any[]): any }\n\n/* c8 ignore start */\nconst PROCESS = (\n  typeof process === 'object' && !!process ? process : {}\n) as { [k: string]: any }\n/* c8 ignore start */\n\nconst emitWarning = (\n  msg: string,\n  type: string,\n  code: string,\n  fn: ForC\n) => {\n  typeof PROCESS.emitWarning === 'function'\n    ? PROCESS.emitWarning(msg, type, code, fn)\n    : console.error(`[${code}] ${type}: ${msg}`)\n}\n\nlet AC = globalThis.AbortController\nlet AS = globalThis.AbortSignal\n\n/* c8 ignore start */\nif (typeof AC === 'undefined') {\n  //@ts-ignore\n  AS = class AbortSignal {\n    onabort?: (...a: any[]) => any\n    _onabort: ((...a: any[]) => any)[] = []\n    reason?: any\n    aborted: boolean = false\n    addEventListener(_: string, fn: (...a: any[]) => any) {\n      this._onabort.push(fn)\n    }\n  }\n  //@ts-ignore\n  AC = class AbortController {\n    constructor() {\n      warnACPolyfill()\n    }\n    signal = new AS()\n    abort(reason: any) {\n      if (this.signal.aborted) return\n      //@ts-ignore\n      this.signal.reason = reason\n      //@ts-ignore\n      this.signal.aborted = true\n      //@ts-ignore\n      for (const fn of this.signal._onabort) {\n        fn(reason)\n      }\n      this.signal.onabort?.(reason)\n    }\n  }\n  let printACPolyfillWarning =\n    PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING !== '1'\n  const warnACPolyfill = () => {\n    if (!printACPolyfillWarning) return\n    printACPolyfillWarning = false\n    emitWarning(\n      'AbortController is not defined. If using lru-cache in ' +\n        'node 14, load an AbortController polyfill from the ' +\n        '`node-abort-controller` package. A minimal polyfill is ' +\n        'provided for use by LRUCache.fetch(), but it should not be ' +\n        'relied upon in other contexts (eg, passing it to other APIs that ' +\n        'use AbortController/AbortSignal might have undesirable effects). ' +\n        'You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.',\n      'NO_ABORT_CONTROLLER',\n      'ENOTSUP',\n      warnACPolyfill\n    )\n  }\n}\n/* c8 ignore stop */\n\nconst shouldWarn = (code: string) => !warned.has(code)\n\nconst TYPE = Symbol('type')\ntype PosInt = number & { [TYPE]: 'Positive Integer' }\ntype Index = number & { [TYPE]: 'LRUCache Index' }\n\nconst isPosInt = (n: any): n is PosInt =>\n  n && n === Math.floor(n) && n > 0 && isFinite(n)\n\ntype UintArray = Uint8Array | Uint16Array | Uint32Array\ntype NumberArray = UintArray | number[]\n\n/* c8 ignore start */\n// This is a little bit ridiculous, tbh.\n// The maximum array length is 2^32-1 or thereabouts on most JS impls.\n// And well before that point, you're caching the entire world, I mean,\n// that's ~32GB of just integers for the next/prev links, plus whatever\n// else to hold that many keys and values.  Just filling the memory with\n// zeroes at init time is brutal when you get that big.\n// But why not be complete?\n// Maybe in the future, these limits will have expanded.\nconst getUintArray = (max: number) =>\n  !isPosInt(max)\n    ? null\n    : max <= Math.pow(2, 8)\n    ? Uint8Array\n    : max <= Math.pow(2, 16)\n    ? Uint16Array\n    : max <= Math.pow(2, 32)\n    ? Uint32Array\n    : max <= Number.MAX_SAFE_INTEGER\n    ? ZeroArray\n    : null\n/* c8 ignore stop */\n\nclass ZeroArray extends Array<number> {\n  constructor(size: number) {\n    super(size)\n    this.fill(0)\n  }\n}\n\ntype StackLike = Stack | Index[]\nclass Stack {\n  heap: NumberArray\n  length: number\n  // private constructor\n  static #constructing: boolean = false\n  static create(max: number): StackLike {\n    const HeapCls = getUintArray(max)\n    if (!HeapCls) return []\n    Stack.#constructing = true\n    const s = new Stack(max, HeapCls)\n    Stack.#constructing = false\n    return s\n  }\n  constructor(\n    max: number,\n    HeapCls: { new (n: number): NumberArray }\n  ) {\n    /* c8 ignore start */\n    if (!Stack.#constructing) {\n      throw new TypeError('instantiate Stack using Stack.create(n)')\n    }\n    /* c8 ignore stop */\n    this.heap = new HeapCls(max)\n    this.length = 0\n  }\n  push(n: Index) {\n    this.heap[this.length++] = n\n  }\n  pop(): Index {\n    return this.heap[--this.length] as Index\n  }\n}\n\n/**\n * Promise representing an in-progress {@link LRUCache#fetch} call\n */\nexport type BackgroundFetch<V> = Promise<V | undefined> & {\n  __returned: BackgroundFetch<V> | undefined\n  __abortController: AbortController\n  __staleWhileFetching: V | undefined\n}\n\ntype DisposeTask<K, V> = [\n  value: V,\n  key: K,\n  reason: LRUCache.DisposeReason\n]\n\nexport namespace LRUCache {\n  /**\n   * An integer greater than 0, reflecting the calculated size of items\n   */\n  export type Size = number\n\n  /**\n   * Integer greater than 0, representing some number of milliseconds, or the\n   * time at which a TTL started counting from.\n   */\n  export type Milliseconds = number\n\n  /**\n   * An integer greater than 0, reflecting a number of items\n   */\n  export type Count = number\n\n  /**\n   * The reason why an item was removed from the cache, passed\n   * to the {@link Disposer} methods.\n   */\n  export type DisposeReason = 'evict' | 'set' | 'delete'\n  /**\n   * A method called upon item removal, passed as the\n   * {@link OptionsBase.dispose} and/or\n   * {@link OptionsBase.disposeAfter} options.\n   */\n  export type Disposer<K, V> = (\n    value: V,\n    key: K,\n    reason: DisposeReason\n  ) => void\n\n  /**\n   * A function that returns the effective calculated size\n   * of an entry in the cache.\n   */\n  export type SizeCalculator<K, V> = (value: V, key: K) => Size\n\n  /**\n   * Options provided to the\n   * {@link OptionsBase.fetchMethod} function.\n   */\n  export interface FetcherOptions<K, V, FC = unknown> {\n    signal: AbortSignal\n    options: FetcherFetchOptions<K, V, FC>\n    /**\n     * Object provided in the {@link FetchOptions.context} option to\n     * {@link LRUCache#fetch}\n     */\n    context: FC\n  }\n\n  /**\n   * Status object that may be passed to {@link LRUCache#fetch},\n   * {@link LRUCache#get}, {@link LRUCache#set}, and {@link LRUCache#has}.\n   */\n  export interface Status<V> {\n    /**\n     * The status of a set() operation.\n     *\n     * - add: the item was not found in the cache, and was added\n     * - update: the item was in the cache, with the same value provided\n     * - replace: the item was in the cache, and replaced\n     * - miss: the item was not added to the cache for some reason\n     */\n    set?: 'add' | 'update' | 'replace' | 'miss'\n\n    /**\n     * the ttl stored for the item, or undefined if ttls are not used.\n     */\n    ttl?: Milliseconds\n\n    /**\n     * the start time for the item, or undefined if ttls are not used.\n     */\n    start?: Milliseconds\n\n    /**\n     * The timestamp used for TTL calculation\n     */\n    now?: Milliseconds\n\n    /**\n     * the remaining ttl for the item, or undefined if ttls are not used.\n     */\n    remainingTTL?: Milliseconds\n\n    /**\n     * The calculated size for the item, if sizes are used.\n     */\n    entrySize?: Size\n\n    /**\n     * The total calculated size of the cache, if sizes are used.\n     */\n    totalCalculatedSize?: Size\n\n    /**\n     * A flag indicating that the item was not stored, due to exceeding the\n     * {@link OptionsBase.maxEntrySize}\n     */\n    maxEntrySizeExceeded?: true\n\n    /**\n     * The old value, specified in the case of `set:'update'` or\n     * `set:'replace'`\n     */\n    oldValue?: V\n\n    /**\n     * The results of a {@link LRUCache#has} operation\n     *\n     * - hit: the item was found in the cache\n     * - stale: the item was found in the cache, but is stale\n     * - miss: the item was not found in the cache\n     */\n    has?: 'hit' | 'stale' | 'miss'\n\n    /**\n     * The status of a {@link LRUCache#fetch} operation.\n     * Note that this can change as the underlying fetch() moves through\n     * various states.\n     *\n     * - inflight: there is another fetch() for this key which is in process\n     * - get: there is no fetchMethod, so {@link LRUCache#get} was called.\n     * - miss: the item is not in cache, and will be fetched.\n     * - hit: the item is in the cache, and was resolved immediately.\n     * - stale: the item is in the cache, but stale.\n     * - refresh: the item is in the cache, and not stale, but\n     *   {@link FetchOptions.forceRefresh} was specified.\n     */\n    fetch?: 'get' | 'inflight' | 'miss' | 'hit' | 'stale' | 'refresh'\n\n    /**\n     * The {@link OptionsBase.fetchMethod} was called\n     */\n    fetchDispatched?: true\n\n    /**\n     * The cached value was updated after a successful call to\n     * {@link OptionsBase.fetchMethod}\n     */\n    fetchUpdated?: true\n\n    /**\n     * The reason for a fetch() rejection.  Either the error raised by the\n     * {@link OptionsBase.fetchMethod}, or the reason for an\n     * AbortSignal.\n     */\n    fetchError?: Error\n\n    /**\n     * The fetch received an abort signal\n     */\n    fetchAborted?: true\n\n    /**\n     * The abort signal received was ignored, and the fetch was allowed to\n     * continue.\n     */\n    fetchAbortIgnored?: true\n\n    /**\n     * The fetchMethod promise resolved successfully\n     */\n    fetchResolved?: true\n\n    /**\n     * The fetchMethod promise was rejected\n     */\n    fetchRejected?: true\n\n    /**\n     * The status of a {@link LRUCache#get} operation.\n     *\n     * - fetching: The item is currently being fetched.  If a previous value\n     *   is present and allowed, that will be returned.\n     * - stale: The item is in the cache, and is stale.\n     * - hit: the item is in the cache\n     * - miss: the item is not in the cache\n     */\n    get?: 'stale' | 'hit' | 'miss'\n\n    /**\n     * A fetch or get operation returned a stale value.\n     */\n    returnedStale?: true\n  }\n\n  /**\n   * options which override the options set in the LRUCache constructor\n   * when calling {@link LRUCache#fetch}.\n   *\n   * This is the union of {@link GetOptions} and {@link SetOptions}, plus\n   * {@link OptionsBase.noDeleteOnFetchRejection},\n   * {@link OptionsBase.allowStaleOnFetchRejection},\n   * {@link FetchOptions.forceRefresh}, and\n   * {@link OptionsBase.context}\n   *\n   * Any of these may be modified in the {@link OptionsBase.fetchMethod}\n   * function, but the {@link GetOptions} fields will of course have no\n   * effect, as the {@link LRUCache#get} call already happened by the time\n   * the fetchMethod is called.\n   */\n  export interface FetcherFetchOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n      | 'noDeleteOnFetchRejection'\n      | 'allowStaleOnFetchRejection'\n      | 'ignoreFetchAbort'\n      | 'allowStaleOnFetchAbort'\n    > {\n    status?: Status<V>\n    size?: Size\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#fetch} method.\n   */\n  export interface FetchOptions<K, V, FC>\n    extends FetcherFetchOptions<K, V, FC> {\n    /**\n     * Set to true to force a re-load of the existing data, even if it\n     * is not yet stale.\n     */\n    forceRefresh?: boolean\n    /**\n     * Context provided to the {@link OptionsBase.fetchMethod} as\n     * the {@link FetcherOptions.context} param.\n     *\n     * If the FC type is specified as unknown (the default),\n     * undefined or void, then this is optional.  Otherwise, it will\n     * be required.\n     */\n    context?: FC\n    signal?: AbortSignal\n    status?: Status<V>\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is something\n   * other than `unknown`, `undefined`, or `void`\n   */\n  export interface FetchOptionsWithContext<K, V, FC>\n    extends FetchOptions<K, V, FC> {\n    context: FC\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is\n   * `undefined` or `void`\n   */\n  export interface FetchOptionsNoContext<K, V>\n    extends FetchOptions<K, V, undefined> {\n    context?: undefined\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#has} method.\n   */\n  export interface HasOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'updateAgeOnHas'> {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#get} method.\n   */\n  export interface GetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'allowStale' | 'updateAgeOnGet' | 'noDeleteOnStaleGet'\n    > {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#peek} method.\n   */\n  export interface PeekOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'allowStale'> {}\n\n  /**\n   * Options that may be passed to the {@link LRUCache#set} method.\n   */\n  export interface SetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'sizeCalculation' | 'ttl' | 'noDisposeOnSet' | 'noUpdateTTL'\n    > {\n    /**\n     * If size tracking is enabled, then setting an explicit size\n     * in the {@link LRUCache#set} call will prevent calling the\n     * {@link OptionsBase.sizeCalculation} function.\n     */\n    size?: Size\n    /**\n     * If TTL tracking is enabled, then setting an explicit start\n     * time in the {@link LRUCache#set} call will override the\n     * default time from `performance.now()` or `Date.now()`.\n     *\n     * Note that it must be a valid value for whichever time-tracking\n     * method is in use.\n     */\n    start?: Milliseconds\n    status?: Status<V>\n  }\n\n  /**\n   * The type signature for the {@link OptionsBase.fetchMethod} option.\n   */\n  export type Fetcher<K, V, FC = unknown> = (\n    key: K,\n    staleValue: V | undefined,\n    options: FetcherOptions<K, V, FC>\n  ) => Promise<V | undefined | void> | V | undefined | void\n\n  /**\n   * Options which may be passed to the {@link LRUCache} constructor.\n   *\n   * Most of these may be overridden in the various options that use\n   * them.\n   *\n   * Despite all being technically optional, the constructor requires that\n   * a cache is at minimum limited by one or more of {@link OptionsBase.max},\n   * {@link OptionsBase.ttl}, or {@link OptionsBase.maxSize}.\n   *\n   * If {@link OptionsBase.ttl} is used alone, then it is strongly advised\n   * (and in fact required by the type definitions here) that the cache\n   * also set {@link OptionsBase.ttlAutopurge}, to prevent potentially\n   * unbounded storage.\n   */\n  export interface OptionsBase<K, V, FC> {\n    /**\n     * The maximum number of items to store in the cache before evicting\n     * old entries. This is read-only on the {@link LRUCache} instance,\n     * and may not be overridden.\n     *\n     * If set, then storage space will be pre-allocated at construction\n     * time, and the cache will perform significantly faster.\n     *\n     * Note that significantly fewer items may be stored, if\n     * {@link OptionsBase.maxSize} and/or {@link OptionsBase.ttl} are also\n     * set.\n     */\n    max?: Count\n\n    /**\n     * Max time in milliseconds for items to live in cache before they are\n     * considered stale.  Note that stale items are NOT preemptively removed\n     * by default, and MAY live in the cache long after they have expired.\n     *\n     * Also, as this cache is optimized for LRU/MRU operations, some of\n     * the staleness/TTL checks will reduce performance, as they will incur\n     * overhead by deleting items.\n     *\n     * Must be an integer number of ms. If set to 0, this indicates \"no TTL\"\n     *\n     * @default 0\n     */\n    ttl?: Milliseconds\n\n    /**\n     * Minimum amount of time in ms in which to check for staleness.\n     * Defaults to 1, which means that the current time is checked\n     * at most once per millisecond.\n     *\n     * Set to 0 to check the current time every time staleness is tested.\n     * (This reduces performance, and is theoretically unnecessary.)\n     *\n     * Setting this to a higher value will improve performance somewhat\n     * while using ttl tracking, albeit at the expense of keeping stale\n     * items around a bit longer than their TTLs would indicate.\n     *\n     * @default 1\n     */\n    ttlResolution?: Milliseconds\n\n    /**\n     * Preemptively remove stale items from the cache.\n     * Note that this may significantly degrade performance,\n     * especially if the cache is storing a large number of items.\n     * It is almost always best to just leave the stale items in\n     * the cache, and let them fall out as new items are added.\n     *\n     * Note that this means that {@link OptionsBase.allowStale} is a bit\n     * pointless, as stale items will be deleted almost as soon as they\n     * expire.\n     *\n     * @default false\n     */\n    ttlAutopurge?: boolean\n\n    /**\n     * Update the age of items on {@link LRUCache#get}, renewing their TTL\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     *\n     * @default false\n     */\n    updateAgeOnGet?: boolean\n\n    /**\n     * Update the age of items on {@link LRUCache#has}, renewing their TTL\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     *\n     * @default false\n     */\n    updateAgeOnHas?: boolean\n\n    /**\n     * Allow {@link LRUCache#get} and {@link LRUCache#fetch} calls to return\n     * stale data, if available.\n     */\n    allowStale?: boolean\n\n    /**\n     * Function that is called on items when they are dropped from the cache.\n     * This can be handy if you want to close file descriptors or do other\n     * cleanup tasks when items are no longer accessible. Called with `key,\n     * value`.  It's called before actually removing the item from the\n     * internal cache, so it is *NOT* safe to re-add them.\n     *\n     * Use {@link OptionsBase.disposeAfter} if you wish to dispose items after\n     * they have been full removed, when it is safe to add them back to the\n     * cache.\n     */\n    dispose?: Disposer<K, V>\n\n    /**\n     * The same as {@link OptionsBase.dispose}, but called *after* the entry\n     * is completely removed and the cache is once again in a clean state.\n     * It is safe to add an item right back into the cache at this point.\n     * However, note that it is *very* easy to inadvertently create infinite\n     * recursion this way.\n     */\n    disposeAfter?: Disposer<K, V>\n\n    /**\n     * Set to true to suppress calling the\n     * {@link OptionsBase.dispose} function if the entry key is\n     * still accessible within the cache.\n     * This may be overridden by passing an options object to\n     * {@link LRUCache#set}.\n     */\n    noDisposeOnSet?: boolean\n\n    /**\n     * Boolean flag to tell the cache to not update the TTL when\n     * setting a new value for an existing key (ie, when updating a value\n     * rather than inserting a new value).  Note that the TTL value is\n     * _always_ set (if provided) when adding a new entry into the cache.\n     *\n     * Has no effect if a {@link OptionsBase.ttl} is not set.\n     */\n    noUpdateTTL?: boolean\n\n    /**\n     * If you wish to track item size, you must provide a maxSize\n     * note that we still will only keep up to max *actual items*,\n     * if max is set, so size tracking may cause fewer than max items\n     * to be stored.  At the extreme, a single item of maxSize size\n     * will cause everything else in the cache to be dropped when it\n     * is added.  Use with caution!\n     *\n     * Note also that size tracking can negatively impact performance,\n     * though for most cases, only minimally.\n     */\n    maxSize?: Size\n\n    /**\n     * The maximum allowed size for any single item in the cache.\n     *\n     * If a larger item is passed to {@link LRUCache#set} or returned by a\n     * {@link OptionsBase.fetchMethod}, then it will not be stored in the\n     * cache.\n     */\n    maxEntrySize?: Size\n\n    /**\n     * A function that returns a number indicating the item's size.\n     *\n     * If not provided, and {@link OptionsBase.maxSize} or\n     * {@link OptionsBase.maxEntrySize} are set, then all\n     * {@link LRUCache#set} calls **must** provide an explicit\n     * {@link SetOptions.size} or sizeCalculation param.\n     */\n    sizeCalculation?: SizeCalculator<K, V>\n\n    /**\n     * Method that provides the implementation for {@link LRUCache#fetch}\n     */\n    fetchMethod?: Fetcher<K, V, FC>\n\n    /**\n     * Set to true to suppress the deletion of stale data when a\n     * {@link OptionsBase.fetchMethod} returns a rejected promise.\n     */\n    noDeleteOnFetchRejection?: boolean\n\n    /**\n     * Do not delete stale items when they are retrieved with\n     * {@link LRUCache#get}.\n     *\n     * Note that the `get` return value will still be `undefined`\n     * unless {@link OptionsBase.allowStale} is true.\n     */\n    noDeleteOnStaleGet?: boolean\n\n    /**\n     * Set to true to allow returning stale data when a\n     * {@link OptionsBase.fetchMethod} throws an error or returns a rejected\n     * promise.\n     *\n     * This differs from using {@link OptionsBase.allowStale} in that stale\n     * data will ONLY be returned in the case that the\n     * {@link LRUCache#fetch} fails, not any other times.\n     */\n    allowStaleOnFetchRejection?: boolean\n\n    /**\n     * Set to true to return a stale value from the cache when the\n     * `AbortSignal` passed to the {@link OptionsBase.fetchMethod} dispatches an `'abort'`\n     * event, whether user-triggered, or due to internal cache behavior.\n     *\n     * Unless {@link OptionsBase.ignoreFetchAbort} is also set, the underlying\n     * {@link OptionsBase.fetchMethod} will still be considered canceled, and\n     * any value it returns will be ignored and not cached.\n     *\n     * Caveat: since fetches are aborted when a new value is explicitly\n     * set in the cache, this can lead to fetch returning a stale value,\n     * since that was the fallback value _at the moment the `fetch()` was\n     * initiated_, even though the new updated value is now present in\n     * the cache.\n     *\n     * For example:\n     *\n     * ```ts\n     * const cache = new LRUCache<string, any>({\n     *   ttl: 100,\n     *   fetchMethod: async (url, oldValue, { signal }) =>  {\n     *     const res = await fetch(url, { signal })\n     *     return await res.json()\n     *   }\n     * })\n     * cache.set('https://example.com/', { some: 'data' })\n     * // 100ms go by...\n     * const result = cache.fetch('https://example.com/')\n     * cache.set('https://example.com/', { other: 'thing' })\n     * console.log(await result) // { some: 'data' }\n     * console.log(cache.get('https://example.com/')) // { other: 'thing' }\n     * ```\n     */\n    allowStaleOnFetchAbort?: boolean\n\n    /**\n     * Set to true to ignore the `abort` event emitted by the `AbortSignal`\n     * object passed to {@link OptionsBase.fetchMethod}, and still cache the\n     * resulting resolution value, as long as it is not `undefined`.\n     *\n     * When used on its own, this means aborted {@link LRUCache#fetch} calls are not\n     * immediately resolved or rejected when they are aborted, and instead\n     * take the full time to await.\n     *\n     * When used with {@link OptionsBase.allowStaleOnFetchAbort}, aborted\n     * {@link LRUCache#fetch} calls will resolve immediately to their stale\n     * cached value or `undefined`, and will continue to process and eventually\n     * update the cache when they resolve, as long as the resulting value is\n     * not `undefined`, thus supporting a \"return stale on timeout while\n     * refreshing\" mechanism by passing `AbortSignal.timeout(n)` as the signal.\n     *\n     * **Note**: regardless of this setting, an `abort` event _is still\n     * emitted on the `AbortSignal` object_, so may result in invalid results\n     * when passed to other underlying APIs that use AbortSignals.\n     *\n     * This may be overridden in the {@link OptionsBase.fetchMethod} or the\n     * call to {@link LRUCache#fetch}.\n     */\n    ignoreFetchAbort?: boolean\n  }\n\n  export interface OptionsMaxLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    max: Count\n  }\n  export interface OptionsTTLLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    ttl: Milliseconds\n    ttlAutopurge: boolean\n  }\n  export interface OptionsSizeLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    maxSize: Size\n  }\n\n  /**\n   * The valid safe options for the {@link LRUCache} constructor\n   */\n  export type Options<K, V, FC> =\n    | OptionsMaxLimit<K, V, FC>\n    | OptionsSizeLimit<K, V, FC>\n    | OptionsTTLLimit<K, V, FC>\n\n  /**\n   * Entry objects used by {@link LRUCache#load} and {@link LRUCache#dump}\n   */\n  export interface Entry<V> {\n    value: V\n    ttl?: Milliseconds\n    size?: Size\n    start?: Milliseconds\n  }\n}\n\n/**\n * Default export, the thing you're using this module to get.\n *\n * All properties from the options object (with the exception of\n * {@link OptionsBase.max} and {@link OptionsBase.maxSize}) are added as\n * normal public members. (`max` and `maxBase` are read-only getters.)\n * Changing any of these will alter the defaults for subsequent method calls,\n * but is otherwise safe.\n */\nexport class LRUCache<K extends {}, V extends {}, FC = unknown> {\n  // properties coming in from the options of these, only max and maxSize\n  // really *need* to be protected. The rest can be modified, as they just\n  // set defaults for various methods.\n  readonly #max: LRUCache.Count\n  readonly #maxSize: LRUCache.Size\n  readonly #dispose?: LRUCache.Disposer<K, V>\n  readonly #disposeAfter?: LRUCache.Disposer<K, V>\n  readonly #fetchMethod?: LRUCache.Fetcher<K, V, FC>\n\n  /**\n   * {@link LRUCache.OptionsBase.ttl}\n   */\n  ttl: LRUCache.Milliseconds\n\n  /**\n   * {@link LRUCache.OptionsBase.ttlResolution}\n   */\n  ttlResolution: LRUCache.Milliseconds\n  /**\n   * {@link LRUCache.OptionsBase.ttlAutopurge}\n   */\n  ttlAutopurge: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnGet}\n   */\n  updateAgeOnGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnHas}\n   */\n  updateAgeOnHas: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStale}\n   */\n  allowStale: boolean\n\n  /**\n   * {@link LRUCache.OptionsBase.noDisposeOnSet}\n   */\n  noDisposeOnSet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noUpdateTTL}\n   */\n  noUpdateTTL: boolean\n  /**\n   * {@link LRUCache.OptionsBase.maxEntrySize}\n   */\n  maxEntrySize: LRUCache.Size\n  /**\n   * {@link LRUCache.OptionsBase.sizeCalculation}\n   */\n  sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}\n   */\n  noDeleteOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}\n   */\n  noDeleteOnStaleGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}\n   */\n  allowStaleOnFetchAbort: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}\n   */\n  allowStaleOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.ignoreFetchAbort}\n   */\n  ignoreFetchAbort: boolean\n\n  // computed properties\n  #size: LRUCache.Count\n  #calculatedSize: LRUCache.Size\n  #keyMap: Map<K, Index>\n  #keyList: (K | undefined)[]\n  #valList: (V | BackgroundFetch<V> | undefined)[]\n  #next: NumberArray\n  #prev: NumberArray\n  #head: Index\n  #tail: Index\n  #free: StackLike\n  #disposed?: DisposeTask<K, V>[]\n  #sizes?: ZeroArray\n  #starts?: ZeroArray\n  #ttls?: ZeroArray\n\n  #hasDispose: boolean\n  #hasFetchMethod: boolean\n  #hasDisposeAfter: boolean\n\n  /**\n   * Do not call this method unless you need to inspect the\n   * inner workings of the cache.  If anything returned by this\n   * object is modified in any way, strange breakage may occur.\n   *\n   * These fields are private for a reason!\n   *\n   * @internal\n   */\n  static unsafeExposeInternals<\n    K extends {},\n    V extends {},\n    FC extends unknown = unknown\n  >(c: LRUCache<K, V, FC>) {\n    return {\n      // properties\n      starts: c.#starts,\n      ttls: c.#ttls,\n      sizes: c.#sizes,\n      keyMap: c.#keyMap as Map<K, number>,\n      keyList: c.#keyList,\n      valList: c.#valList,\n      next: c.#next,\n      prev: c.#prev,\n      get head() {\n        return c.#head\n      },\n      get tail() {\n        return c.#tail\n      },\n      free: c.#free,\n      // methods\n      isBackgroundFetch: (p: any) => c.#isBackgroundFetch(p),\n      backgroundFetch: (\n        k: K,\n        index: number | undefined,\n        options: LRUCache.FetchOptions<K, V, FC>,\n        context: any\n      ): BackgroundFetch<V> =>\n        c.#backgroundFetch(\n          k,\n          index as Index | undefined,\n          options,\n          context\n        ),\n      moveToTail: (index: number): void =>\n        c.#moveToTail(index as Index),\n      indexes: (options?: { allowStale: boolean }) =>\n        c.#indexes(options),\n      rindexes: (options?: { allowStale: boolean }) =>\n        c.#rindexes(options),\n      isStale: (index: number | undefined) =>\n        c.#isStale(index as Index),\n    }\n  }\n\n  // Protected read-only members\n\n  /**\n   * {@link LRUCache.OptionsBase.max} (read-only)\n   */\n  get max(): LRUCache.Count {\n    return this.#max\n  }\n  /**\n   * {@link LRUCache.OptionsBase.maxSize} (read-only)\n   */\n  get maxSize(): LRUCache.Count {\n    return this.#maxSize\n  }\n  /**\n   * The total computed size of items in the cache (read-only)\n   */\n  get calculatedSize(): LRUCache.Size {\n    return this.#calculatedSize\n  }\n  /**\n   * The number of items stored in the cache (read-only)\n   */\n  get size(): LRUCache.Count {\n    return this.#size\n  }\n  /**\n   * {@link LRUCache.OptionsBase.fetchMethod} (read-only)\n   */\n  get fetchMethod(): LRUCache.Fetcher<K, V, FC> | undefined {\n    return this.#fetchMethod\n  }\n  /**\n   * {@link LRUCache.OptionsBase.dispose} (read-only)\n   */\n  get dispose() {\n    return this.#dispose\n  }\n  /**\n   * {@link LRUCache.OptionsBase.disposeAfter} (read-only)\n   */\n  get disposeAfter() {\n    return this.#disposeAfter\n  }\n\n  constructor(\n    options: LRUCache.Options<K, V, FC> | LRUCache<K, V, FC>\n  ) {\n    const {\n      max = 0,\n      ttl,\n      ttlResolution = 1,\n      ttlAutopurge,\n      updateAgeOnGet,\n      updateAgeOnHas,\n      allowStale,\n      dispose,\n      disposeAfter,\n      noDisposeOnSet,\n      noUpdateTTL,\n      maxSize = 0,\n      maxEntrySize = 0,\n      sizeCalculation,\n      fetchMethod,\n      noDeleteOnFetchRejection,\n      noDeleteOnStaleGet,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n    } = options\n\n    if (max !== 0 && !isPosInt(max)) {\n      throw new TypeError('max option must be a nonnegative integer')\n    }\n\n    const UintArray = max ? getUintArray(max) : Array\n    if (!UintArray) {\n      throw new Error('invalid max value: ' + max)\n    }\n\n    this.#max = max\n    this.#maxSize = maxSize\n    this.maxEntrySize = maxEntrySize || this.#maxSize\n    this.sizeCalculation = sizeCalculation\n    if (this.sizeCalculation) {\n      if (!this.#maxSize && !this.maxEntrySize) {\n        throw new TypeError(\n          'cannot set sizeCalculation without setting maxSize or maxEntrySize'\n        )\n      }\n      if (typeof this.sizeCalculation !== 'function') {\n        throw new TypeError('sizeCalculation set to non-function')\n      }\n    }\n\n    if (\n      fetchMethod !== undefined &&\n      typeof fetchMethod !== 'function'\n    ) {\n      throw new TypeError(\n        'fetchMethod must be a function if specified'\n      )\n    }\n    this.#fetchMethod = fetchMethod\n    this.#hasFetchMethod = !!fetchMethod\n\n    this.#keyMap = new Map()\n    this.#keyList = new Array(max).fill(undefined)\n    this.#valList = new Array(max).fill(undefined)\n    this.#next = new UintArray(max)\n    this.#prev = new UintArray(max)\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free = Stack.create(max)\n    this.#size = 0\n    this.#calculatedSize = 0\n\n    if (typeof dispose === 'function') {\n      this.#dispose = dispose\n    }\n    if (typeof disposeAfter === 'function') {\n      this.#disposeAfter = disposeAfter\n      this.#disposed = []\n    } else {\n      this.#disposeAfter = undefined\n      this.#disposed = undefined\n    }\n    this.#hasDispose = !!this.#dispose\n    this.#hasDisposeAfter = !!this.#disposeAfter\n\n    this.noDisposeOnSet = !!noDisposeOnSet\n    this.noUpdateTTL = !!noUpdateTTL\n    this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection\n    this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection\n    this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort\n    this.ignoreFetchAbort = !!ignoreFetchAbort\n\n    // NB: maxEntrySize is set to maxSize if it's set\n    if (this.maxEntrySize !== 0) {\n      if (this.#maxSize !== 0) {\n        if (!isPosInt(this.#maxSize)) {\n          throw new TypeError(\n            'maxSize must be a positive integer if specified'\n          )\n        }\n      }\n      if (!isPosInt(this.maxEntrySize)) {\n        throw new TypeError(\n          'maxEntrySize must be a positive integer if specified'\n        )\n      }\n      this.#initializeSizeTracking()\n    }\n\n    this.allowStale = !!allowStale\n    this.noDeleteOnStaleGet = !!noDeleteOnStaleGet\n    this.updateAgeOnGet = !!updateAgeOnGet\n    this.updateAgeOnHas = !!updateAgeOnHas\n    this.ttlResolution =\n      isPosInt(ttlResolution) || ttlResolution === 0\n        ? ttlResolution\n        : 1\n    this.ttlAutopurge = !!ttlAutopurge\n    this.ttl = ttl || 0\n    if (this.ttl) {\n      if (!isPosInt(this.ttl)) {\n        throw new TypeError(\n          'ttl must be a positive integer if specified'\n        )\n      }\n      this.#initializeTTLTracking()\n    }\n\n    // do not allow completely unbounded caches\n    if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {\n      throw new TypeError(\n        'At least one of max, maxSize, or ttl is required'\n      )\n    }\n    if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {\n      const code = 'LRU_CACHE_UNBOUNDED'\n      if (shouldWarn(code)) {\n        warned.add(code)\n        const msg =\n          'TTL caching without ttlAutopurge, max, or maxSize can ' +\n          'result in unbounded memory consumption.'\n        emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache)\n      }\n    }\n  }\n\n  /**\n   * Return the remaining TTL time for a given entry key\n   */\n  getRemainingTTL(key: K) {\n    return this.#keyMap.has(key) ? Infinity : 0\n  }\n\n  #initializeTTLTracking() {\n    const ttls = new ZeroArray(this.#max)\n    const starts = new ZeroArray(this.#max)\n    this.#ttls = ttls\n    this.#starts = starts\n\n    this.#setItemTTL = (index, ttl, start = perf.now()) => {\n      starts[index] = ttl !== 0 ? start : 0\n      ttls[index] = ttl\n      if (ttl !== 0 && this.ttlAutopurge) {\n        const t = setTimeout(() => {\n          if (this.#isStale(index)) {\n            this.delete(this.#keyList[index] as K)\n          }\n        }, ttl + 1)\n        // unref() not supported on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n    }\n\n    this.#updateItemAge = index => {\n      starts[index] = ttls[index] !== 0 ? perf.now() : 0\n    }\n\n    this.#statusTTL = (status, index) => {\n      if (ttls[index]) {\n        const ttl = ttls[index]\n        const start = starts[index]\n        status.ttl = ttl\n        status.start = start\n        status.now = cachedNow || getNow()\n        const age = status.now - start\n        status.remainingTTL = ttl - age\n      }\n    }\n\n    // debounce calls to perf.now() to 1s so we're not hitting\n    // that costly call repeatedly.\n    let cachedNow = 0\n    const getNow = () => {\n      const n = perf.now()\n      if (this.ttlResolution > 0) {\n        cachedNow = n\n        const t = setTimeout(\n          () => (cachedNow = 0),\n          this.ttlResolution\n        )\n        // not available on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n      return n\n    }\n\n    this.getRemainingTTL = key => {\n      const index = this.#keyMap.get(key)\n      if (index === undefined) {\n        return 0\n      }\n      const ttl = ttls[index]\n      const start = starts[index]\n      if (ttl === 0 || start === 0) {\n        return Infinity\n      }\n      const age = (cachedNow || getNow()) - start\n      return ttl - age\n    }\n\n    this.#isStale = index => {\n      return (\n        ttls[index] !== 0 &&\n        starts[index] !== 0 &&\n        (cachedNow || getNow()) - starts[index] > ttls[index]\n      )\n    }\n  }\n\n  // conditionally set private methods related to TTL\n  #updateItemAge: (index: Index) => void = () => {}\n  #statusTTL: (status: LRUCache.Status<V>, index: Index) => void =\n    () => {}\n  #setItemTTL: (\n    index: Index,\n    ttl: LRUCache.Milliseconds,\n    start?: LRUCache.Milliseconds\n    // ignore because we never call this if we're not already in TTL mode\n    /* c8 ignore start */\n  ) => void = () => {}\n  /* c8 ignore stop */\n\n  #isStale: (index: Index) => boolean = () => false\n\n  #initializeSizeTracking() {\n    const sizes = new ZeroArray(this.#max)\n    this.#calculatedSize = 0\n    this.#sizes = sizes\n    this.#removeItemSize = index => {\n      this.#calculatedSize -= sizes[index]\n      sizes[index] = 0\n    }\n    this.#requireSize = (k, v, size, sizeCalculation) => {\n      // provisionally accept background fetches.\n      // actual value size will be checked when they return.\n      if (this.#isBackgroundFetch(v)) {\n        return 0\n      }\n      if (!isPosInt(size)) {\n        if (sizeCalculation) {\n          if (typeof sizeCalculation !== 'function') {\n            throw new TypeError('sizeCalculation must be a function')\n          }\n          size = sizeCalculation(v, k)\n          if (!isPosInt(size)) {\n            throw new TypeError(\n              'sizeCalculation return invalid (expect positive integer)'\n            )\n          }\n        } else {\n          throw new TypeError(\n            'invalid size value (must be positive integer). ' +\n              'When maxSize or maxEntrySize is used, sizeCalculation ' +\n              'or size must be set.'\n          )\n        }\n      }\n      return size\n    }\n    this.#addItemSize = (\n      index: Index,\n      size: LRUCache.Size,\n      status?: LRUCache.Status<V>\n    ) => {\n      sizes[index] = size\n      if (this.#maxSize) {\n        const maxSize = this.#maxSize - sizes[index]\n        while (this.#calculatedSize > maxSize) {\n          this.#evict(true)\n        }\n      }\n      this.#calculatedSize += sizes[index]\n      if (status) {\n        status.entrySize = size\n        status.totalCalculatedSize = this.#calculatedSize\n      }\n    }\n  }\n\n  #removeItemSize: (index: Index) => void = _i => {}\n  #addItemSize: (\n    index: Index,\n    size: LRUCache.Size,\n    status?: LRUCache.Status<V>\n  ) => void = (_i, _s, _st) => {}\n  #requireSize: (\n    k: K,\n    v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => LRUCache.Size = (\n    _k: K,\n    _v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => {\n    if (size || sizeCalculation) {\n      throw new TypeError(\n        'cannot set size without setting maxSize or maxEntrySize on cache'\n      )\n    }\n    return 0\n  };\n\n  *#indexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#tail; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#head) {\n          break\n        } else {\n          i = this.#prev[i] as Index\n        }\n      }\n    }\n  }\n\n  *#rindexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#head; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#tail) {\n          break\n        } else {\n          i = this.#next[i] as Index\n        }\n      }\n    }\n  }\n\n  #isValidIndex(index: Index) {\n    return (\n      index !== undefined &&\n      this.#keyMap.get(this.#keyList[index] as K) === index\n    )\n  }\n\n  /**\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from most recently used to least recently used.\n   */\n  *entries() {\n    for (const i of this.#indexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]]\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.entries}\n   *\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from least recently used to most recently used.\n   */\n  *rentries() {\n    for (const i of this.#rindexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]]\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the keys in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *keys() {\n    for (const i of this.#indexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.keys}\n   *\n   * Return a generator yielding the keys in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rkeys() {\n    for (const i of this.#rindexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the values in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *values() {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i]\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.values}\n   *\n   * Return a generator yielding the values in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rvalues() {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i]\n      }\n    }\n  }\n\n  /**\n   * Iterating over the cache itself yields the same results as\n   * {@link LRUCache.entries}\n   */\n  [Symbol.iterator]() {\n    return this.entries()\n  }\n\n  /**\n   * Find a value for which the supplied fn method returns a truthy value,\n   * similar to Array.find().  fn is called as fn(value, key, cache).\n   */\n  find(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => boolean,\n    getOptions: LRUCache.GetOptions<K, V, FC> = {}\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      if (fn(value, this.#keyList[i] as K, this)) {\n        return this.get(this.#keyList[i] as K, getOptions)\n      }\n    }\n  }\n\n  /**\n   * Call the supplied function on each item in the cache, in order from\n   * most recently used to least recently used.  fn is called as\n   * fn(value, key, cache).  Does not update age or recenty of use.\n   * Does not iterate over stale values.\n   */\n  forEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * The same as {@link LRUCache.forEach} but items are iterated over in\n   * reverse order.  (ie, less recently used items are iterated over first.)\n   */\n  rforEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * Delete any stale entries. Returns true if anything was removed,\n   * false otherwise.\n   */\n  purgeStale() {\n    let deleted = false\n    for (const i of this.#rindexes({ allowStale: true })) {\n      if (this.#isStale(i)) {\n        this.delete(this.#keyList[i] as K)\n        deleted = true\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Return an array of [key, {@link LRUCache.Entry}] tuples which can be\n   * passed to cache.load()\n   */\n  dump() {\n    const arr: [K, LRUCache.Entry<V>][] = []\n    for (const i of this.#indexes({ allowStale: true })) {\n      const key = this.#keyList[i]\n      const v = this.#valList[i]\n      const value: V | undefined = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined || key === undefined) continue\n      const entry: LRUCache.Entry<V> = { value }\n      if (this.#ttls && this.#starts) {\n        entry.ttl = this.#ttls[i]\n        // always dump the start relative to a portable timestamp\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = perf.now() - this.#starts[i]\n        entry.start = Math.floor(Date.now() - age)\n      }\n      if (this.#sizes) {\n        entry.size = this.#sizes[i]\n      }\n      arr.unshift([key, entry])\n    }\n    return arr\n  }\n\n  /**\n   * Reset the cache and load in the items in entries in the order listed.\n   * Note that the shape of the resulting cache may be different if the\n   * same options are not used in both caches.\n   */\n  load(arr: [K, LRUCache.Entry<V>][]) {\n    this.clear()\n    for (const [key, entry] of arr) {\n      if (entry.start) {\n        // entry.start is a portable timestamp, but we may be using\n        // node's performance.now(), so calculate the offset, so that\n        // we get the intended remaining TTL, no matter how long it's\n        // been on ice.\n        //\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = Date.now() - entry.start\n        entry.start = perf.now() - age\n      }\n      this.set(key, entry.value, entry)\n    }\n  }\n\n  /**\n   * Add a value to the cache.\n   *\n   * Note: if `undefined` is specified as a value, this is an alias for\n   * {@link LRUCache#delete}\n   */\n  set(\n    k: K,\n    v: V | BackgroundFetch<V> | undefined,\n    setOptions: LRUCache.SetOptions<K, V, FC> = {}\n  ) {\n    if (v === undefined) {\n      this.delete(k)\n      return this\n    }\n    const {\n      ttl = this.ttl,\n      start,\n      noDisposeOnSet = this.noDisposeOnSet,\n      sizeCalculation = this.sizeCalculation,\n      status,\n    } = setOptions\n    let { noUpdateTTL = this.noUpdateTTL } = setOptions\n\n    const size = this.#requireSize(\n      k,\n      v,\n      setOptions.size || 0,\n      sizeCalculation\n    )\n    // if the item doesn't fit, don't do anything\n    // NB: maxEntrySize set to maxSize by default\n    if (this.maxEntrySize && size > this.maxEntrySize) {\n      if (status) {\n        status.set = 'miss'\n        status.maxEntrySizeExceeded = true\n      }\n      // have to delete, in case something is there already.\n      this.delete(k)\n      return this\n    }\n    let index = this.#size === 0 ? undefined : this.#keyMap.get(k)\n    if (index === undefined) {\n      // addition\n      index = (\n        this.#size === 0\n          ? this.#tail\n          : this.#free.length !== 0\n          ? this.#free.pop()\n          : this.#size === this.#max\n          ? this.#evict(false)\n          : this.#size\n      ) as Index\n      this.#keyList[index] = k\n      this.#valList[index] = v\n      this.#keyMap.set(k, index)\n      this.#next[this.#tail] = index\n      this.#prev[index] = this.#tail\n      this.#tail = index\n      this.#size++\n      this.#addItemSize(index, size, status)\n      if (status) status.set = 'add'\n      noUpdateTTL = false\n    } else {\n      // update\n      this.#moveToTail(index)\n      const oldVal = this.#valList[index] as V | BackgroundFetch<V>\n      if (v !== oldVal) {\n        if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {\n          oldVal.__abortController.abort(new Error('replaced'))\n          const { __staleWhileFetching: s } = oldVal\n          if (s !== undefined && !noDisposeOnSet) {\n            if (this.#hasDispose) {\n              this.#dispose?.(s as V, k, 'set')\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([s as V, k, 'set'])\n            }\n          }\n        } else if (!noDisposeOnSet) {\n          if (this.#hasDispose) {\n            this.#dispose?.(oldVal as V, k, 'set')\n          }\n          if (this.#hasDisposeAfter) {\n            this.#disposed?.push([oldVal as V, k, 'set'])\n          }\n        }\n        this.#removeItemSize(index)\n        this.#addItemSize(index, size, status)\n        this.#valList[index] = v\n        if (status) {\n          status.set = 'replace'\n          const oldValue =\n            oldVal && this.#isBackgroundFetch(oldVal)\n              ? oldVal.__staleWhileFetching\n              : oldVal\n          if (oldValue !== undefined) status.oldValue = oldValue\n        }\n      } else if (status) {\n        status.set = 'update'\n      }\n    }\n    if (ttl !== 0 && !this.#ttls) {\n      this.#initializeTTLTracking()\n    }\n    if (this.#ttls) {\n      if (!noUpdateTTL) {\n        this.#setItemTTL(index, ttl, start)\n      }\n      if (status) this.#statusTTL(status, index)\n    }\n    if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return this\n  }\n\n  /**\n   * Evict the least recently used item, returning its value or\n   * `undefined` if cache is empty.\n   */\n  pop(): V | undefined {\n    try {\n      while (this.#size) {\n        const val = this.#valList[this.#head]\n        this.#evict(true)\n        if (this.#isBackgroundFetch(val)) {\n          if (val.__staleWhileFetching) {\n            return val.__staleWhileFetching\n          }\n        } else if (val !== undefined) {\n          return val\n        }\n      }\n    } finally {\n      if (this.#hasDisposeAfter && this.#disposed) {\n        const dt = this.#disposed\n        let task: DisposeTask<K, V> | undefined\n        while ((task = dt?.shift())) {\n          this.#disposeAfter?.(...task)\n        }\n      }\n    }\n  }\n\n  #evict(free: boolean) {\n    const head = this.#head\n    const k = this.#keyList[head] as K\n    const v = this.#valList[head] as V\n    if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {\n      v.__abortController.abort(new Error('evicted'))\n    } else if (this.#hasDispose || this.#hasDisposeAfter) {\n      if (this.#hasDispose) {\n        this.#dispose?.(v, k, 'evict')\n      }\n      if (this.#hasDisposeAfter) {\n        this.#disposed?.push([v, k, 'evict'])\n      }\n    }\n    this.#removeItemSize(head)\n    // if we aren't about to use the index, then null these out\n    if (free) {\n      this.#keyList[head] = undefined\n      this.#valList[head] = undefined\n      this.#free.push(head)\n    }\n    if (this.#size === 1) {\n      this.#head = this.#tail = 0 as Index\n      this.#free.length = 0\n    } else {\n      this.#head = this.#next[head] as Index\n    }\n    this.#keyMap.delete(k)\n    this.#size--\n    return head\n  }\n\n  /**\n   * Check if a key is in the cache, without updating the recency of use.\n   * Will return false if the item is stale, even though it is technically\n   * in the cache.\n   *\n   * Will not update item age unless\n   * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.\n   */\n  has(k: K, hasOptions: LRUCache.HasOptions<K, V, FC> = {}) {\n    const { updateAgeOnHas = this.updateAgeOnHas, status } =\n      hasOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const v = this.#valList[index]\n      if (\n        this.#isBackgroundFetch(v) &&\n        v.__staleWhileFetching === undefined\n      ) {\n        return false\n      }\n      if (!this.#isStale(index)) {\n        if (updateAgeOnHas) {\n          this.#updateItemAge(index)\n        }\n        if (status) {\n          status.has = 'hit'\n          this.#statusTTL(status, index)\n        }\n        return true\n      } else if (status) {\n        status.has = 'stale'\n        this.#statusTTL(status, index)\n      }\n    } else if (status) {\n      status.has = 'miss'\n    }\n    return false\n  }\n\n  /**\n   * Like {@link LRUCache#get} but doesn't update recency or delete stale\n   * items.\n   *\n   * Returns `undefined` if the item is stale, unless\n   * {@link LRUCache.OptionsBase.allowStale} is set.\n   */\n  peek(k: K, peekOptions: LRUCache.PeekOptions<K, V, FC> = {}) {\n    const { allowStale = this.allowStale } = peekOptions\n    const index = this.#keyMap.get(k)\n    if (\n      index !== undefined &&\n      (allowStale || !this.#isStale(index))\n    ) {\n      const v = this.#valList[index]\n      // either stale and allowed, or forcing a refresh of non-stale value\n      return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v\n    }\n  }\n\n  #backgroundFetch(\n    k: K,\n    index: Index | undefined,\n    options: LRUCache.FetchOptions<K, V, FC>,\n    context: any\n  ): BackgroundFetch<V> {\n    const v = index === undefined ? undefined : this.#valList[index]\n    if (this.#isBackgroundFetch(v)) {\n      return v\n    }\n\n    const ac = new AC()\n    const { signal } = options\n    // when/if our AC signals, then stop listening to theirs.\n    signal?.addEventListener('abort', () => ac.abort(signal.reason), {\n      signal: ac.signal,\n    })\n\n    const fetchOpts = {\n      signal: ac.signal,\n      options,\n      context,\n    }\n\n    const cb = (\n      v: V | undefined,\n      updateCache = false\n    ): V | undefined => {\n      const { aborted } = ac.signal\n      const ignoreAbort = options.ignoreFetchAbort && v !== undefined\n      if (options.status) {\n        if (aborted && !updateCache) {\n          options.status.fetchAborted = true\n          options.status.fetchError = ac.signal.reason\n          if (ignoreAbort) options.status.fetchAbortIgnored = true\n        } else {\n          options.status.fetchResolved = true\n        }\n      }\n      if (aborted && !ignoreAbort && !updateCache) {\n        return fetchFail(ac.signal.reason)\n      }\n      // either we didn't abort, and are still here, or we did, and ignored\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        if (v === undefined) {\n          if (bf.__staleWhileFetching) {\n            this.#valList[index as Index] = bf.__staleWhileFetching\n          } else {\n            this.delete(k)\n          }\n        } else {\n          if (options.status) options.status.fetchUpdated = true\n          this.set(k, v, fetchOpts.options)\n        }\n      }\n      return v\n    }\n\n    const eb = (er: any) => {\n      if (options.status) {\n        options.status.fetchRejected = true\n        options.status.fetchError = er\n      }\n      return fetchFail(er)\n    }\n\n    const fetchFail = (er: any): V | undefined => {\n      const { aborted } = ac.signal\n      const allowStaleAborted =\n        aborted && options.allowStaleOnFetchAbort\n      const allowStale =\n        allowStaleAborted || options.allowStaleOnFetchRejection\n      const noDelete = allowStale || options.noDeleteOnFetchRejection\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        // if we allow stale on fetch rejections, then we need to ensure that\n        // the stale value is not removed from the cache when the fetch fails.\n        const del = !noDelete || bf.__staleWhileFetching === undefined\n        if (del) {\n          this.delete(k)\n        } else if (!allowStaleAborted) {\n          // still replace the *promise* with the stale value,\n          // since we are done with the promise at this point.\n          // leave it untouched if we're still waiting for an\n          // aborted background fetch that hasn't yet returned.\n          this.#valList[index as Index] = bf.__staleWhileFetching\n        }\n      }\n      if (allowStale) {\n        if (options.status && bf.__staleWhileFetching !== undefined) {\n          options.status.returnedStale = true\n        }\n        return bf.__staleWhileFetching\n      } else if (bf.__returned === bf) {\n        throw er\n      }\n    }\n\n    const pcall = (\n      res: (v: V | undefined) => void,\n      rej: (e: any) => void\n    ) => {\n      const fmp = this.#fetchMethod?.(k, v, fetchOpts)\n      if (fmp && fmp instanceof Promise) {\n        fmp.then(v => res(v === undefined ? undefined : v), rej)\n      }\n      // ignored, we go until we finish, regardless.\n      // defer check until we are actually aborting,\n      // so fetchMethod can override.\n      ac.signal.addEventListener('abort', () => {\n        if (\n          !options.ignoreFetchAbort ||\n          options.allowStaleOnFetchAbort\n        ) {\n          res(undefined)\n          // when it eventually resolves, update the cache.\n          if (options.allowStaleOnFetchAbort) {\n            res = v => cb(v, true)\n          }\n        }\n      })\n    }\n\n    if (options.status) options.status.fetchDispatched = true\n    const p = new Promise(pcall).then(cb, eb)\n    const bf: BackgroundFetch<V> = Object.assign(p, {\n      __abortController: ac,\n      __staleWhileFetching: v,\n      __returned: undefined,\n    })\n\n    if (index === undefined) {\n      // internal, don't expose status.\n      this.set(k, bf, { ...fetchOpts.options, status: undefined })\n      index = this.#keyMap.get(k)\n    } else {\n      this.#valList[index] = bf\n    }\n    return bf\n  }\n\n  #isBackgroundFetch(p: any): p is BackgroundFetch<V> {\n    if (!this.#hasFetchMethod) return false\n    const b = p as BackgroundFetch<V>\n    return (\n      !!b &&\n      b instanceof Promise &&\n      b.hasOwnProperty('__staleWhileFetching') &&\n      b.__abortController instanceof AC\n    )\n  }\n\n  /**\n   * Make an asynchronous cached fetch using the\n   * {@link LRUCache.OptionsBase.fetchMethod} function.\n   *\n   * If multiple fetches for the same key are issued, then they will all be\n   * coalesced into a single call to fetchMethod.\n   *\n   * Note that this means that handling options such as\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort},\n   * {@link LRUCache.FetchOptions.signal},\n   * and {@link LRUCache.OptionsBase.allowStaleOnFetchRejection} will be\n   * determined by the FIRST fetch() call for a given key.\n   *\n   * This is a known (fixable) shortcoming which will be addresed on when\n   * someone complains about it, as the fix would involve added complexity and\n   * may not be worth the costs for this edge case.\n   */\n  fetch(\n    k: K,\n    fetchOptions: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : LRUCache.FetchOptionsWithContext<K, V, FC>\n  ): Promise<undefined | V>\n  // this overload not allowed if context is required\n  fetch(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    fetchOptions?: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : never\n  ): Promise<undefined | V>\n  async fetch(\n    k: K,\n    fetchOptions: LRUCache.FetchOptions<K, V, FC> = {}\n  ): Promise<undefined | V> {\n    const {\n      // get options\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      // set options\n      ttl = this.ttl,\n      noDisposeOnSet = this.noDisposeOnSet,\n      size = 0,\n      sizeCalculation = this.sizeCalculation,\n      noUpdateTTL = this.noUpdateTTL,\n      // fetch exclusive options\n      noDeleteOnFetchRejection = this.noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection = this.allowStaleOnFetchRejection,\n      ignoreFetchAbort = this.ignoreFetchAbort,\n      allowStaleOnFetchAbort = this.allowStaleOnFetchAbort,\n      context,\n      forceRefresh = false,\n      status,\n      signal,\n    } = fetchOptions\n\n    if (!this.#hasFetchMethod) {\n      if (status) status.fetch = 'get'\n      return this.get(k, {\n        allowStale,\n        updateAgeOnGet,\n        noDeleteOnStaleGet,\n        status,\n      })\n    }\n\n    const options = {\n      allowStale,\n      updateAgeOnGet,\n      noDeleteOnStaleGet,\n      ttl,\n      noDisposeOnSet,\n      size,\n      sizeCalculation,\n      noUpdateTTL,\n      noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n      status,\n      signal,\n    }\n\n    let index = this.#keyMap.get(k)\n    if (index === undefined) {\n      if (status) status.fetch = 'miss'\n      const p = this.#backgroundFetch(k, index, options, context)\n      return (p.__returned = p)\n    } else {\n      // in cache, maybe already fetching\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        const stale =\n          allowStale && v.__staleWhileFetching !== undefined\n        if (status) {\n          status.fetch = 'inflight'\n          if (stale) status.returnedStale = true\n        }\n        return stale ? v.__staleWhileFetching : (v.__returned = v)\n      }\n\n      // if we force a refresh, that means do NOT serve the cached value,\n      // unless we are already in the process of refreshing the cache.\n      const isStale = this.#isStale(index)\n      if (!forceRefresh && !isStale) {\n        if (status) status.fetch = 'hit'\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        if (status) this.#statusTTL(status, index)\n        return v\n      }\n\n      // ok, it is stale or a forced refresh, and not already fetching.\n      // refresh the cache.\n      const p = this.#backgroundFetch(k, index, options, context)\n      const hasStale = p.__staleWhileFetching !== undefined\n      const staleVal = hasStale && allowStale\n      if (status) {\n        status.fetch = isStale ? 'stale' : 'refresh'\n        if (staleVal && isStale) status.returnedStale = true\n      }\n      return staleVal ? p.__staleWhileFetching : (p.__returned = p)\n    }\n  }\n\n  /**\n   * Return a value from the cache. Will update the recency of the cache\n   * entry found.\n   *\n   * If the key is not found, get() will return `undefined`.\n   */\n  get(k: K, getOptions: LRUCache.GetOptions<K, V, FC> = {}) {\n    const {\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      status,\n    } = getOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const value = this.#valList[index]\n      const fetching = this.#isBackgroundFetch(value)\n      if (status) this.#statusTTL(status, index)\n      if (this.#isStale(index)) {\n        if (status) status.get = 'stale'\n        // delete only if not an in-flight background fetch\n        if (!fetching) {\n          if (!noDeleteOnStaleGet) {\n            this.delete(k)\n          }\n          if (status && allowStale) status.returnedStale = true\n          return allowStale ? value : undefined\n        } else {\n          if (\n            status &&\n            allowStale &&\n            value.__staleWhileFetching !== undefined\n          ) {\n            status.returnedStale = true\n          }\n          return allowStale ? value.__staleWhileFetching : undefined\n        }\n      } else {\n        if (status) status.get = 'hit'\n        // if we're currently fetching it, we don't actually have it yet\n        // it's not stale, which means this isn't a staleWhileRefetching.\n        // If it's not stale, and fetching, AND has a __staleWhileFetching\n        // value, then that means the user fetched with {forceRefresh:true},\n        // so it's safe to return that value.\n        if (fetching) {\n          return value.__staleWhileFetching\n        }\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        return value\n      }\n    } else if (status) {\n      status.get = 'miss'\n    }\n  }\n\n  #connect(p: Index, n: Index) {\n    this.#prev[n] = p\n    this.#next[p] = n\n  }\n\n  #moveToTail(index: Index): void {\n    // if tail already, nothing to do\n    // if head, move head to next[index]\n    // else\n    //   move next[prev[index]] to next[index] (head has no prev)\n    //   move prev[next[index]] to prev[index]\n    // prev[index] = tail\n    // next[tail] = index\n    // tail = index\n    if (index !== this.#tail) {\n      if (index === this.#head) {\n        this.#head = this.#next[index] as Index\n      } else {\n        this.#connect(\n          this.#prev[index] as Index,\n          this.#next[index] as Index\n        )\n      }\n      this.#connect(this.#tail, index)\n      this.#tail = index\n    }\n  }\n\n  /**\n   * Deletes a key out of the cache.\n   * Returns true if the key was deleted, false otherwise.\n   */\n  delete(k: K) {\n    let deleted = false\n    if (this.#size !== 0) {\n      const index = this.#keyMap.get(k)\n      if (index !== undefined) {\n        deleted = true\n        if (this.#size === 1) {\n          this.clear()\n        } else {\n          this.#removeItemSize(index)\n          const v = this.#valList[index]\n          if (this.#isBackgroundFetch(v)) {\n            v.__abortController.abort(new Error('deleted'))\n          } else if (this.#hasDispose || this.#hasDisposeAfter) {\n            if (this.#hasDispose) {\n              this.#dispose?.(v as V, k, 'delete')\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([v as V, k, 'delete'])\n            }\n          }\n          this.#keyMap.delete(k)\n          this.#keyList[index] = undefined\n          this.#valList[index] = undefined\n          if (index === this.#tail) {\n            this.#tail = this.#prev[index] as Index\n          } else if (index === this.#head) {\n            this.#head = this.#next[index] as Index\n          } else {\n            this.#next[this.#prev[index]] = this.#next[index]\n            this.#prev[this.#next[index]] = this.#prev[index]\n          }\n          this.#size--\n          this.#free.push(index)\n        }\n      }\n    }\n    if (this.#hasDisposeAfter && this.#disposed?.length) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Clear the cache entirely, throwing away all values.\n   */\n  clear() {\n    for (const index of this.#rindexes({ allowStale: true })) {\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        v.__abortController.abort(new Error('deleted'))\n      } else {\n        const k = this.#keyList[index]\n        if (this.#hasDispose) {\n          this.#dispose?.(v as V, k as K, 'delete')\n        }\n        if (this.#hasDisposeAfter) {\n          this.#disposed?.push([v as V, k as K, 'delete'])\n        }\n      }\n    }\n\n    this.#keyMap.clear()\n    this.#valList.fill(undefined)\n    this.#keyList.fill(undefined)\n    if (this.#ttls && this.#starts) {\n      this.#ttls.fill(0)\n      this.#starts.fill(0)\n    }\n    if (this.#sizes) {\n      this.#sizes.fill(0)\n    }\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free.length = 0\n    this.#calculatedSize = 0\n    this.#size = 0\n    if (this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///home/gcadoret/www/lcov-reporter/node_modules/minipass/dist/cjs/index.js":{"lineLengths":[13,72,62,2,62,87,51,13,7,21,21,6,35,52,51,3,78,40,3,30,28,29,40,37,36,28,3,67,3,32,28,41,35,69,56,32,3,67,3,32,28,41,36,32,32,26,46,41,43,45,32,28,30,40,36,34,34,32,32,32,30,44,40,42,40,42,38,42,30,36,34,36,30,30,34,32,46,38,49,29,79,60,11,32,24,47,27,78,3,62,2,12,3,12,8,9,9,12,34,23,25,25,43,44,5,14,56,5,34,25,24,24,11,22,26,28,5,1,3,67,22,2,12,3,36,14,59,23,5,34,31,56,42,5,1,50,90,3,34,2,58,2,75,55,2,67,41,3,46,22,21,17,18,17,15,12,14,18,26,27,21,27,23,24,13,22,24,24,7,40,7,20,7,37,7,20,7,69,70,51,63,7,26,35,16,16,73,84,9,43,36,34,9,46,46,37,9,14,37,34,9,38,38,64,19,63,60,79,9,63,59,77,9,35,21,34,33,30,13,18,70,13,9,5,7,66,6,62,77,55,73,15,7,24,34,5,7,55,7,20,30,5,7,49,7,24,70,5,7,67,7,23,70,5,7,43,7,22,32,5,7,49,7,25,72,5,7,38,7,21,27,5,7,45,6,78,74,34,7,22,41,5,57,15,29,49,43,5,7,43,7,19,29,5,7,78,34,7,22,32,26,25,22,47,30,141,24,9,45,26,30,9,22,30,49,67,71,42,63,59,43,58,86,13,48,58,43,13,49,88,13,9,58,62,31,32,33,58,34,32,30,41,16,40,41,38,19,23,33,9,56,55,28,41,38,19,23,33,9,70,61,40,64,73,52,49,9,55,52,47,9,73,54,30,26,37,12,36,37,34,15,19,29,5,7,38,6,74,17,6,70,77,66,6,72,31,7,13,28,24,32,39,22,44,35,24,9,29,21,59,79,40,28,31,43,71,14,9,59,31,19,5,22,29,32,14,28,45,36,45,45,38,40,13,18,48,41,40,13,9,33,47,31,21,5,30,42,23,30,9,45,26,30,9,32,40,15,33,25,30,66,37,65,63,43,35,20,5,51,16,28,19,58,35,9,29,29,28,32,26,27,35,12,31,5,7,61,6,79,77,78,76,41,7,14,30,5,7,23,7,13,30,28,32,5,7,53,7,21,31,5,7,71,46,7,19,29,5,7,56,7,18,28,5,25,29,36,12,47,33,5,21,29,36,12,57,36,5,30,62,33,59,31,5,25,33,29,5,7,74,6,33,7,22,28,24,32,40,26,57,29,12,42,46,50,20,25,27,9,14,78,76,46,44,57,28,44,16,31,9,20,5,7,47,6,74,73,73,52,7,18,57,16,43,65,42,17,33,13,16,62,23,9,5,7,36,7,30,36,5,7,64,71,6,68,6,80,57,6,75,78,26,6,77,79,16,7,21,42,28,36,34,56,31,13,9,65,35,9,53,27,40,9,57,30,28,63,16,50,9,19,5,7,37,7,33,37,5,7,45,6,73,76,73,52,7,22,43,73,74,64,28,64,44,35,38,38,13,9,19,5,7,60,6,80,76,79,14,7,28,49,48,36,58,38,13,9,19,5,7,47,7,22,33,5,24,34,33,31,40,24,38,29,35,32,29,35,39,9,5,7,66,71,6,73,72,18,6,74,74,75,71,19,6,72,63,6,79,74,71,6,74,66,7,23,29,74,29,29,31,30,25,9,33,45,23,29,63,43,9,32,35,9,34,32,57,55,29,44,45,23,9,34,39,36,71,43,24,35,23,9,35,45,35,23,9,57,39,40,23,9,35,44,31,19,5,22,38,45,29,9,71,31,19,5,17,30,25,33,30,26,51,31,5,18,28,45,23,46,39,17,37,45,13,9,38,20,9,38,39,19,5,7,74,23,7,21,39,26,11,30,31,60,39,33,30,24,34,43,11,16,19,5,7,78,28,6,41,7,20,31,59,9,41,30,26,50,5,7,64,7,21,49,76,47,44,11,5,7,45,6,74,7,30,70,22,32,28,34,25,27,52,10,28,24,30,36,29,68,26,30,24,23,35,41,39,47,23,27,14,39,41,39,47,29,54,14,33,41,41,47,23,58,14,73,46,29,30,48,42,40,42,15,10,16,17,24,25,38,28,14,10,5,7,38,6,75,44,7,25,70,22,32,28,28,25,34,38,34,27,52,10,28,24,30,38,68,10,31,31,35,16,17,24,25,33,28,14,10,5,7,79,6,70,19,6,76,30,6,70,21,7,17,30,19,39,16,37,24,9,31,31,62,32,31,24,60,23,15,35,61,12,33,20,5,7,33,6,70,6,18,7,27,32,5,1,28,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///home/gcadoret/www/lcov-reporter/node_modules/minipass/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["const proc =\n  typeof process === 'object' && process\n    ? process\n    : {\n        stdout: null,\n        stderr: null,\n      }\nimport { EventEmitter } from 'events'\nimport Stream from 'stream'\nimport { StringDecoder } from 'string_decoder'\n\n/**\n * Same as StringDecoder, but exposing the `lastNeed` flag on the type\n */\ntype SD = StringDecoder & { lastNeed: boolean }\n\nexport type { SD, Pipe, PipeProxyErrors }\n\n/**\n * Return true if the argument is a Minipass stream, Node stream, or something\n * else that Minipass can interact with.\n */\nexport const isStream = (\n  s: any\n): s is Minipass.Readable | Minipass.Writable =>\n  !!s &&\n  typeof s === 'object' &&\n  (s instanceof Minipass ||\n    s instanceof Stream ||\n    isReadable(s) ||\n    isWritable(s))\n\n/**\n * Return true if the argument is a valid {@link Minipass.Readable}\n */\nexport const isReadable = (s: any): s is Minipass.Readable =>\n  !!s &&\n  typeof s === 'object' &&\n  s instanceof EventEmitter &&\n  typeof (s as Minipass.Readable).pipe === 'function' &&\n  // node core Writable streams have a pipe() method, but it throws\n  (s as Minipass.Readable).pipe !== Stream.Writable.prototype.pipe\n\n/**\n * Return true if the argument is a valid {@link Minipass.Writable}\n */\nexport const isWritable = (s: any): s is Minipass.Readable =>\n  !!s &&\n  typeof s === 'object' &&\n  s instanceof EventEmitter &&\n  typeof (s as Minipass.Writable).write === 'function' &&\n  typeof (s as Minipass.Writable).end === 'function'\n\nconst EOF = Symbol('EOF')\nconst MAYBE_EMIT_END = Symbol('maybeEmitEnd')\nconst EMITTED_END = Symbol('emittedEnd')\nconst EMITTING_END = Symbol('emittingEnd')\nconst EMITTED_ERROR = Symbol('emittedError')\nconst CLOSED = Symbol('closed')\nconst READ = Symbol('read')\nconst FLUSH = Symbol('flush')\nconst FLUSHCHUNK = Symbol('flushChunk')\nconst ENCODING = Symbol('encoding')\nconst DECODER = Symbol('decoder')\nconst FLOWING = Symbol('flowing')\nconst PAUSED = Symbol('paused')\nconst RESUME = Symbol('resume')\nconst BUFFER = Symbol('buffer')\nconst PIPES = Symbol('pipes')\nconst BUFFERLENGTH = Symbol('bufferLength')\nconst BUFFERPUSH = Symbol('bufferPush')\nconst BUFFERSHIFT = Symbol('bufferShift')\nconst OBJECTMODE = Symbol('objectMode')\n// internal event when stream is destroyed\nconst DESTROYED = Symbol('destroyed')\n// internal event when stream has an error\nconst ERROR = Symbol('error')\nconst EMITDATA = Symbol('emitData')\nconst EMITEND = Symbol('emitEnd')\nconst EMITEND2 = Symbol('emitEnd2')\nconst ASYNC = Symbol('async')\nconst ABORT = Symbol('abort')\nconst ABORTED = Symbol('aborted')\nconst SIGNAL = Symbol('signal')\nconst DATALISTENERS = Symbol('dataListeners')\nconst DISCARDED = Symbol('discarded')\n\nconst defer = (fn: (...a: any[]) => any) => Promise.resolve().then(fn)\nconst nodefer = (fn: (...a: any[]) => any) => fn()\n\n// events that mean 'the stream is over'\n// these are treated specially, and re-emitted\n// if they are listened for after emitting.\ntype EndishEvent = 'end' | 'finish' | 'prefinish'\nconst isEndish = (ev: any): ev is EndishEvent =>\n  ev === 'end' || ev === 'finish' || ev === 'prefinish'\n\nconst isArrayBufferLike = (b: any): b is ArrayBufferLike =>\n  b instanceof ArrayBuffer ||\n  (!!b &&\n    typeof b === 'object' &&\n    b.constructor &&\n    b.constructor.name === 'ArrayBuffer' &&\n    b.byteLength >= 0)\n\nconst isArrayBufferView = (b: any): b is ArrayBufferView =>\n  !Buffer.isBuffer(b) && ArrayBuffer.isView(b)\n\n/**\n * Options that may be passed to stream.pipe()\n */\nexport interface PipeOptions {\n  /**\n   * end the destination stream when the source stream ends\n   */\n  end?: boolean\n  /**\n   * proxy errors from the source stream to the destination stream\n   */\n  proxyErrors?: boolean\n}\n\n/**\n * Internal class representing a pipe to a destination stream.\n *\n * @internal\n */\nclass Pipe<T extends unknown> {\n  src: Minipass<T>\n  dest: Minipass<any, T>\n  opts: PipeOptions\n  ondrain: () => any\n  constructor(\n    src: Minipass<T>,\n    dest: Minipass.Writable,\n    opts: PipeOptions\n  ) {\n    this.src = src\n    this.dest = dest as Minipass<any, T>\n    this.opts = opts\n    this.ondrain = () => src[RESUME]()\n    this.dest.on('drain', this.ondrain)\n  }\n  unpipe() {\n    this.dest.removeListener('drain', this.ondrain)\n  }\n  // only here for the prototype\n  /* c8 ignore start */\n  proxyErrors(_er: any) {}\n  /* c8 ignore stop */\n  end() {\n    this.unpipe()\n    if (this.opts.end) this.dest.end()\n  }\n}\n\n/**\n * Internal class representing a pipe to a destination stream where\n * errors are proxied.\n *\n * @internal\n */\nclass PipeProxyErrors<T> extends Pipe<T> {\n  unpipe() {\n    this.src.removeListener('error', this.proxyErrors)\n    super.unpipe()\n  }\n  constructor(\n    src: Minipass<T>,\n    dest: Minipass.Writable,\n    opts: PipeOptions\n  ) {\n    super(src, dest, opts)\n    this.proxyErrors = er => dest.emit('error', er)\n    src.on('error', this.proxyErrors)\n  }\n}\n\nexport namespace Minipass {\n  /**\n   * Encoding used to create a stream that outputs strings rather than\n   * Buffer objects.\n   */\n  export type Encoding = BufferEncoding | 'buffer' | null\n\n  /**\n   * Any stream that Minipass can pipe into\n   */\n  export type Writable =\n    | Minipass<any, any, any>\n    | NodeJS.WriteStream\n    | (NodeJS.WriteStream & { fd: number })\n    | (EventEmitter & {\n        end(): any\n        write(chunk: any, ...args: any[]): any\n      })\n\n  /**\n   * Any stream that can be read from\n   */\n  export type Readable =\n    | Minipass<any, any, any>\n    | NodeJS.ReadStream\n    | (NodeJS.ReadStream & { fd: number })\n    | (EventEmitter & {\n        pause(): any\n        resume(): any\n        pipe(...destArgs: any[]): any\n      })\n\n  /**\n   * Utility type that can be iterated sync or async\n   */\n  export type DualIterable<T> = Iterable<T> & AsyncIterable<T>\n\n  type EventArguments = Record<string | symbol, unknown[]>\n\n  /**\n   * The listing of events that a Minipass class can emit.\n   * Extend this when extending the Minipass class, and pass as\n   * the third template argument.  The key is the name of the event,\n   * and the value is the argument list.\n   *\n   * Any undeclared events will still be allowed, but the handler will get\n   * arguments as `unknown[]`.\n   */\n  export interface Events<RType extends any = Buffer>\n    extends EventArguments {\n    readable: []\n    data: [chunk: RType]\n    error: [er: unknown]\n    abort: [reason: unknown]\n    drain: []\n    resume: []\n    end: []\n    finish: []\n    prefinish: []\n    close: []\n    [DESTROYED]: [er?: unknown]\n    [ERROR]: [er: unknown]\n  }\n\n  /**\n   * String or buffer-like data that can be joined and sliced\n   */\n  export type ContiguousData =\n    | Buffer\n    | ArrayBufferLike\n    | ArrayBufferView\n    | string\n  export type BufferOrString = Buffer | string\n\n  /**\n   * Options passed to the Minipass constructor.\n   */\n  export type SharedOptions = {\n    /**\n     * Defer all data emission and other events until the end of the\n     * current tick, similar to Node core streams\n     */\n    async?: boolean\n    /**\n     * A signal which will abort the stream\n     */\n    signal?: AbortSignal\n    /**\n     * Output string encoding. Set to `null` or `'buffer'` (or omit) to\n     * emit Buffer objects rather than strings.\n     *\n     * Conflicts with `objectMode`\n     */\n    encoding?: BufferEncoding | null | 'buffer'\n    /**\n     * Output data exactly as it was written, supporting non-buffer/string\n     * data (such as arbitrary objects, falsey values, etc.)\n     *\n     * Conflicts with `encoding`\n     */\n    objectMode?: boolean\n  }\n\n  /**\n   * Options for a string encoded output\n   */\n  export type EncodingOptions = SharedOptions & {\n    encoding: BufferEncoding\n    objectMode?: false\n  }\n\n  /**\n   * Options for contiguous data buffer output\n   */\n  export type BufferOptions = SharedOptions & {\n    encoding?: null | 'buffer'\n    objectMode?: false\n  }\n\n  /**\n   * Options for objectMode arbitrary output\n   */\n  export type ObjectModeOptions = SharedOptions & {\n    objectMode: true\n    encoding?: null\n  }\n\n  /**\n   * Utility type to determine allowed options based on read type\n   */\n  export type Options<T> = T extends string\n    ? EncodingOptions | ObjectModeOptions\n    : T extends Buffer\n    ? BufferOptions | ObjectModeOptions\n    : SharedOptions\n}\n\nconst isObjectModeOptions = (\n  o: Minipass.SharedOptions\n): o is Minipass.ObjectModeOptions => !!o.objectMode\n\nconst isEncodingOptions = (\n  o: Minipass.SharedOptions\n): o is Minipass.EncodingOptions =>\n  !o.objectMode && !!o.encoding && o.encoding !== 'buffer'\n\n/**\n * Main export, the Minipass class\n *\n * `RType` is the type of data emitted, defaults to Buffer\n *\n * `WType` is the type of data to be written, if RType is buffer or string,\n * then any {@link Minipass.ContiguousData} is allowed.\n *\n * `Events` is the set of event handler signatures that this object\n * will emit, see {@link Minipass.Events}\n */\nexport class Minipass<\n    RType extends unknown = Buffer,\n    WType extends unknown = RType extends Minipass.BufferOrString\n      ? Minipass.ContiguousData\n      : RType,\n    Events extends Minipass.Events<RType> = Minipass.Events<RType>\n  >\n  extends EventEmitter\n  implements Minipass.DualIterable<RType>\n{\n  [FLOWING]: boolean = false;\n  [PAUSED]: boolean = false;\n  [PIPES]: Pipe<RType>[] = [];\n  [BUFFER]: RType[] = [];\n  [OBJECTMODE]: boolean;\n  [ENCODING]: BufferEncoding | null;\n  [ASYNC]: boolean;\n  [DECODER]: SD | null;\n  [EOF]: boolean = false;\n  [EMITTED_END]: boolean = false;\n  [EMITTING_END]: boolean = false;\n  [CLOSED]: boolean = false;\n  [EMITTED_ERROR]: unknown = null;\n  [BUFFERLENGTH]: number = 0;\n  [DESTROYED]: boolean = false;\n  [SIGNAL]?: AbortSignal;\n  [ABORTED]: boolean = false;\n  [DATALISTENERS]: number = 0;\n  [DISCARDED]: boolean = false\n\n  /**\n   * true if the stream can be written\n   */\n  writable: boolean = true\n  /**\n   * true if the stream can be read\n   */\n  readable: boolean = true\n\n  /**\n   * If `RType` is Buffer, then options do not need to be provided.\n   * Otherwise, an options object must be provided to specify either\n   * {@link Minipass.SharedOptions.objectMode} or\n   * {@link Minipass.SharedOptions.encoding}, as appropriate.\n   */\n  constructor(\n    ...args: RType extends Buffer\n      ? [] | [Minipass.Options<RType>]\n      : [Minipass.Options<RType>]\n  ) {\n    const options: Minipass.Options<RType> = (args[0] ||\n      {}) as Minipass.Options<RType>\n    super()\n    if (options.objectMode && typeof options.encoding === 'string') {\n      throw new TypeError(\n        'Encoding and objectMode may not be used together'\n      )\n    }\n    if (isObjectModeOptions(options)) {\n      this[OBJECTMODE] = true\n      this[ENCODING] = null\n    } else if (isEncodingOptions(options)) {\n      this[ENCODING] = options.encoding\n      this[OBJECTMODE] = false\n    } else {\n      this[OBJECTMODE] = false\n      this[ENCODING] = null\n    }\n    this[ASYNC] = !!options.async\n    this[DECODER] = this[ENCODING]\n      ? (new StringDecoder(this[ENCODING]) as SD)\n      : null\n\n    //@ts-ignore - private option for debugging and testing\n    if (options && options.debugExposeBuffer === true) {\n      Object.defineProperty(this, 'buffer', { get: () => this[BUFFER] })\n    }\n    //@ts-ignore - private option for debugging and testing\n    if (options && options.debugExposePipes === true) {\n      Object.defineProperty(this, 'pipes', { get: () => this[PIPES] })\n    }\n\n    const { signal } = options\n    if (signal) {\n      this[SIGNAL] = signal\n      if (signal.aborted) {\n        this[ABORT]()\n      } else {\n        signal.addEventListener('abort', () => this[ABORT]())\n      }\n    }\n  }\n\n  /**\n   * The amount of data stored in the buffer waiting to be read.\n   *\n   * For Buffer strings, this will be the total byte length.\n   * For string encoding streams, this will be the string character length,\n   * according to JavaScript's `string.length` logic.\n   * For objectMode streams, this is a count of the items waiting to be\n   * emitted.\n   */\n  get bufferLength() {\n    return this[BUFFERLENGTH]\n  }\n\n  /**\n   * The `BufferEncoding` currently in use, or `null`\n   */\n  get encoding() {\n    return this[ENCODING]\n  }\n\n  /**\n   * @deprecated - This is a read only property\n   */\n  set encoding(_enc) {\n    throw new Error('Encoding must be set at instantiation time')\n  }\n\n  /**\n   * @deprecated - Encoding may only be set at instantiation time\n   */\n  setEncoding(_enc: Minipass.Encoding) {\n    throw new Error('Encoding must be set at instantiation time')\n  }\n\n  /**\n   * True if this is an objectMode stream\n   */\n  get objectMode() {\n    return this[OBJECTMODE]\n  }\n\n  /**\n   * @deprecated - This is a read-only property\n   */\n  set objectMode(_om) {\n    throw new Error('objectMode must be set at instantiation time')\n  }\n\n  /**\n   * true if this is an async stream\n   */\n  get ['async'](): boolean {\n    return this[ASYNC]\n  }\n  /**\n   * Set to true to make this stream async.\n   *\n   * Once set, it cannot be unset, as this would potentially cause incorrect\n   * behavior.  Ie, a sync stream can be made async, but an async stream\n   * cannot be safely made sync.\n   */\n  set ['async'](a: boolean) {\n    this[ASYNC] = this[ASYNC] || !!a\n  }\n\n  // drop everything and get out of the flow completely\n  [ABORT]() {\n    this[ABORTED] = true\n    this.emit('abort', this[SIGNAL]?.reason)\n    this.destroy(this[SIGNAL]?.reason)\n  }\n\n  /**\n   * True if the stream has been aborted.\n   */\n  get aborted() {\n    return this[ABORTED]\n  }\n  /**\n   * No-op setter. Stream aborted status is set via the AbortSignal provided\n   * in the constructor options.\n   */\n  set aborted(_) {}\n\n  /**\n   * Write data into the stream\n   *\n   * If the chunk written is a string, and encoding is not specified, then\n   * `utf8` will be assumed. If the stream encoding matches the encoding of\n   * a written string, and the state of the string decoder allows it, then\n   * the string will be passed through to either the output or the internal\n   * buffer without any processing. Otherwise, it will be turned into a\n   * Buffer object for processing into the desired encoding.\n   *\n   * If provided, `cb` function is called immediately before return for\n   * sync streams, or on next tick for async streams, because for this\n   * base class, a chunk is considered \"processed\" once it is accepted\n   * and either emitted or buffered. That is, the callback does not indicate\n   * that the chunk has been eventually emitted, though of course child\n   * classes can override this function to do whatever processing is required\n   * and call `super.write(...)` only once processing is completed.\n   */\n  write(chunk: WType, cb?: () => void): boolean\n  write(\n    chunk: WType,\n    encoding?: Minipass.Encoding,\n    cb?: () => void\n  ): boolean\n  write(\n    chunk: WType,\n    encoding?: Minipass.Encoding | (() => void),\n    cb?: () => void\n  ): boolean {\n    if (this[ABORTED]) return false\n    if (this[EOF]) throw new Error('write after end')\n\n    if (this[DESTROYED]) {\n      this.emit(\n        'error',\n        Object.assign(\n          new Error('Cannot call write after a stream was destroyed'),\n          { code: 'ERR_STREAM_DESTROYED' }\n        )\n      )\n      return true\n    }\n\n    if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = 'utf8'\n    }\n\n    if (!encoding) encoding = 'utf8'\n\n    const fn = this[ASYNC] ? defer : nodefer\n\n    // convert array buffers and typed array views into buffers\n    // at some point in the future, we may want to do the opposite!\n    // leave strings and buffers as-is\n    // anything is only allowed if in object mode, so throw\n    if (!this[OBJECTMODE] && !Buffer.isBuffer(chunk)) {\n      if (isArrayBufferView(chunk)) {\n        //@ts-ignore - sinful unsafe type changing\n        chunk = Buffer.from(\n          chunk.buffer,\n          chunk.byteOffset,\n          chunk.byteLength\n        )\n      } else if (isArrayBufferLike(chunk)) {\n        //@ts-ignore - sinful unsafe type changing\n        chunk = Buffer.from(chunk)\n      } else if (typeof chunk !== 'string') {\n        throw new Error(\n          'Non-contiguous data written to non-objectMode stream'\n        )\n      }\n    }\n\n    // handle object mode up front, since it's simpler\n    // this yields better performance, fewer checks later.\n    if (this[OBJECTMODE]) {\n      // maybe impossible?\n      /* c8 ignore start */\n      if (this[FLOWING] && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n      /* c8 ignore stop */\n\n      if (this[FLOWING]) this.emit('data', chunk as unknown as RType)\n      else this[BUFFERPUSH](chunk as unknown as RType)\n\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n      if (cb) fn(cb)\n\n      return this[FLOWING]\n    }\n\n    // at this point the chunk is a buffer or string\n    // don't buffer it up or send it to the decoder\n    if (!(chunk as Minipass.BufferOrString).length) {\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n      if (cb) fn(cb)\n      return this[FLOWING]\n    }\n\n    // fast-path writing strings of same encoding to a stream with\n    // an empty buffer, skipping the buffer/decoder dance\n    if (\n      typeof chunk === 'string' &&\n      // unless it is a string already ready for us to use\n      !(encoding === this[ENCODING] && !this[DECODER]?.lastNeed)\n    ) {\n      //@ts-ignore - sinful unsafe type change\n      chunk = Buffer.from(chunk, encoding)\n    }\n\n    if (Buffer.isBuffer(chunk) && this[ENCODING]) {\n      //@ts-ignore - sinful unsafe type change\n      chunk = this[DECODER].write(chunk)\n    }\n\n    // Note: flushing CAN potentially switch us into not-flowing mode\n    if (this[FLOWING] && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n\n    if (this[FLOWING]) this.emit('data', chunk as unknown as RType)\n    else this[BUFFERPUSH](chunk as unknown as RType)\n\n    if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n    if (cb) fn(cb)\n\n    return this[FLOWING]\n  }\n\n  /**\n   * Low-level explicit read method.\n   *\n   * In objectMode, the argument is ignored, and one item is returned if\n   * available.\n   *\n   * `n` is the number of bytes (or in the case of encoding streams,\n   * characters) to consume. If `n` is not provided, then the entire buffer\n   * is returned, or `null` is returned if no data is available.\n   *\n   * If `n` is greater that the amount of data in the internal buffer,\n   * then `null` is returned.\n   */\n  read(n?: number | null): RType | null {\n    if (this[DESTROYED]) return null\n    this[DISCARDED] = false\n\n    if (\n      this[BUFFERLENGTH] === 0 ||\n      n === 0 ||\n      (n && n > this[BUFFERLENGTH])\n    ) {\n      this[MAYBE_EMIT_END]()\n      return null\n    }\n\n    if (this[OBJECTMODE]) n = null\n\n    if (this[BUFFER].length > 1 && !this[OBJECTMODE]) {\n      // not object mode, so if we have an encoding, then RType is string\n      // otherwise, must be Buffer\n      this[BUFFER] = [\n        (this[ENCODING]\n          ? this[BUFFER].join('')\n          : Buffer.concat(\n              this[BUFFER] as Buffer[],\n              this[BUFFERLENGTH]\n            )) as RType,\n      ]\n    }\n\n    const ret = this[READ](n || null, this[BUFFER][0])\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [READ](n: number | null, chunk: RType) {\n    if (this[OBJECTMODE]) this[BUFFERSHIFT]()\n    else {\n      const c = chunk as Minipass.BufferOrString\n      if (n === c.length || n === null) this[BUFFERSHIFT]()\n      else if (typeof c === 'string') {\n        this[BUFFER][0] = c.slice(n) as RType\n        chunk = c.slice(0, n) as RType\n        this[BUFFERLENGTH] -= n\n      } else {\n        this[BUFFER][0] = c.subarray(n) as RType\n        chunk = c.subarray(0, n) as RType\n        this[BUFFERLENGTH] -= n\n      }\n    }\n\n    this.emit('data', chunk)\n\n    if (!this[BUFFER].length && !this[EOF]) this.emit('drain')\n\n    return chunk\n  }\n\n  /**\n   * End the stream, optionally providing a final write.\n   *\n   * See {@link Minipass#write} for argument descriptions\n   */\n  end(cb?: () => void): this\n  end(chunk: WType, cb?: () => void): this\n  end(chunk: WType, encoding?: Minipass.Encoding, cb?: () => void): this\n  end(\n    chunk?: WType | (() => void),\n    encoding?: Minipass.Encoding | (() => void),\n    cb?: () => void\n  ) {\n    if (typeof chunk === 'function') {\n      cb = chunk as () => void\n      chunk = undefined\n    }\n    if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = 'utf8'\n    }\n    if (chunk !== undefined) this.write(chunk, encoding)\n    if (cb) this.once('end', cb)\n    this[EOF] = true\n    this.writable = false\n\n    // if we haven't written anything, then go ahead and emit,\n    // even if we're not reading.\n    // we'll re-emit if a new 'end' listener is added anyway.\n    // This makes MP more suitable to write-only use cases.\n    if (this[FLOWING] || !this[PAUSED]) this[MAYBE_EMIT_END]()\n    return this\n  }\n\n  // don't let the internal resume be overwritten\n  [RESUME]() {\n    if (this[DESTROYED]) return\n\n    if (!this[DATALISTENERS] && !this[PIPES].length) {\n      this[DISCARDED] = true\n    }\n    this[PAUSED] = false\n    this[FLOWING] = true\n    this.emit('resume')\n    if (this[BUFFER].length) this[FLUSH]()\n    else if (this[EOF]) this[MAYBE_EMIT_END]()\n    else this.emit('drain')\n  }\n\n  /**\n   * Resume the stream if it is currently in a paused state\n   *\n   * If called when there are no pipe destinations or `data` event listeners,\n   * this will place the stream in a \"discarded\" state, where all data will\n   * be thrown away. The discarded state is removed if a pipe destination or\n   * data handler is added, if pause() is called, or if any synchronous or\n   * asynchronous iteration is started.\n   */\n  resume() {\n    return this[RESUME]()\n  }\n\n  /**\n   * Pause the stream\n   */\n  pause() {\n    this[FLOWING] = false\n    this[PAUSED] = true\n    this[DISCARDED] = false\n  }\n\n  /**\n   * true if the stream has been forcibly destroyed\n   */\n  get destroyed() {\n    return this[DESTROYED]\n  }\n\n  /**\n   * true if the stream is currently in a flowing state, meaning that\n   * any writes will be immediately emitted.\n   */\n  get flowing() {\n    return this[FLOWING]\n  }\n\n  /**\n   * true if the stream is currently in a paused state\n   */\n  get paused() {\n    return this[PAUSED]\n  }\n\n  [BUFFERPUSH](chunk: RType) {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] += 1\n    else this[BUFFERLENGTH] += (chunk as Minipass.BufferOrString).length\n    this[BUFFER].push(chunk)\n  }\n\n  [BUFFERSHIFT](): RType {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] -= 1\n    else\n      this[BUFFERLENGTH] -= (\n        this[BUFFER][0] as Minipass.BufferOrString\n      ).length\n    return this[BUFFER].shift() as RType\n  }\n\n  [FLUSH](noDrain: boolean = false) {\n    do {} while (\n      this[FLUSHCHUNK](this[BUFFERSHIFT]()) &&\n      this[BUFFER].length\n    )\n\n    if (!noDrain && !this[BUFFER].length && !this[EOF]) this.emit('drain')\n  }\n\n  [FLUSHCHUNK](chunk: RType) {\n    this.emit('data', chunk)\n    return this[FLOWING]\n  }\n\n  /**\n   * Pipe all data emitted by this stream into the destination provided.\n   *\n   * Triggers the flow of data.\n   */\n  pipe<W extends Minipass.Writable>(dest: W, opts?: PipeOptions): W {\n    if (this[DESTROYED]) return dest\n    this[DISCARDED] = false\n\n    const ended = this[EMITTED_END]\n    opts = opts || {}\n    if (dest === proc.stdout || dest === proc.stderr) opts.end = false\n    else opts.end = opts.end !== false\n    opts.proxyErrors = !!opts.proxyErrors\n\n    // piping an ended stream ends immediately\n    if (ended) {\n      if (opts.end) dest.end()\n    } else {\n      // \"as\" here just ignores the WType, which pipes don't care about,\n      // since they're only consuming from us, and writing to the dest\n      this[PIPES].push(\n        !opts.proxyErrors\n          ? new Pipe<RType>(this as Minipass<RType>, dest, opts)\n          : new PipeProxyErrors<RType>(this as Minipass<RType>, dest, opts)\n      )\n      if (this[ASYNC]) defer(() => this[RESUME]())\n      else this[RESUME]()\n    }\n\n    return dest\n  }\n\n  /**\n   * Fully unhook a piped destination stream.\n   *\n   * If the destination stream was the only consumer of this stream (ie,\n   * there are no other piped destinations or `'data'` event listeners)\n   * then the flow of data will stop until there is another consumer or\n   * {@link Minipass#resume} is explicitly called.\n   */\n  unpipe<W extends Minipass.Writable>(dest: W) {\n    const p = this[PIPES].find(p => p.dest === dest)\n    if (p) {\n      if (this[PIPES].length === 1) {\n        if (this[FLOWING] && this[DATALISTENERS] === 0) {\n          this[FLOWING] = false\n        }\n        this[PIPES] = []\n      } else this[PIPES].splice(this[PIPES].indexOf(p), 1)\n      p.unpipe()\n    }\n  }\n\n  /**\n   * Alias for {@link Minipass#on}\n   */\n  addListener<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ): this {\n    return this.on(ev, handler)\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.on`, with the following\n   * behavior differences to prevent data loss and unnecessary hangs:\n   *\n   * - Adding a 'data' event handler will trigger the flow of data\n   *\n   * - Adding a 'readable' event handler when there is data waiting to be read\n   *   will cause 'readable' to be emitted immediately.\n   *\n   * - Adding an 'endish' event handler ('end', 'finish', etc.) which has\n   *   already passed will cause the event to be emitted immediately and all\n   *   handlers removed.\n   *\n   * - Adding an 'error' event handler after an error has been emitted will\n   *   cause the event to be re-emitted immediately with the error previously\n   *   raised.\n   */\n  on<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ): this {\n    const ret = super.on(\n      ev as string | symbol,\n      handler as (...a: any[]) => any\n    )\n    if (ev === 'data') {\n      this[DISCARDED] = false\n      this[DATALISTENERS]++\n      if (!this[PIPES].length && !this[FLOWING]) {\n        this[RESUME]()\n      }\n    } else if (ev === 'readable' && this[BUFFERLENGTH] !== 0) {\n      super.emit('readable')\n    } else if (isEndish(ev) && this[EMITTED_END]) {\n      super.emit(ev)\n      this.removeAllListeners(ev)\n    } else if (ev === 'error' && this[EMITTED_ERROR]) {\n      const h = handler as (...a: Events['error']) => any\n      if (this[ASYNC]) defer(() => h.call(this, this[EMITTED_ERROR]))\n      else h.call(this, this[EMITTED_ERROR])\n    }\n    return ret\n  }\n\n  /**\n   * Alias for {@link Minipass#off}\n   */\n  removeListener<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ) {\n    return this.off(ev, handler)\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.off`\n   *\n   * If a 'data' event handler is removed, and it was the last consumer\n   * (ie, there are no pipe destinations or other 'data' event listeners),\n   * then the flow of data will stop until there is another consumer or\n   * {@link Minipass#resume} is explicitly called.\n   */\n  off<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ) {\n    const ret = super.off(\n      ev as string | symbol,\n      handler as (...a: any[]) => any\n    )\n    // if we previously had listeners, and now we don't, and we don't\n    // have any pipes, then stop the flow, unless it's been explicitly\n    // put in a discarded flowing state via stream.resume().\n    if (ev === 'data') {\n      this[DATALISTENERS] = this.listeners('data').length\n      if (\n        this[DATALISTENERS] === 0 &&\n        !this[DISCARDED] &&\n        !this[PIPES].length\n      ) {\n        this[FLOWING] = false\n      }\n    }\n    return ret\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.removeAllListeners`\n   *\n   * If all 'data' event handlers are removed, and they were the last consumer\n   * (ie, there are no pipe destinations), then the flow of data will stop\n   * until there is another consumer or {@link Minipass#resume} is explicitly\n   * called.\n   */\n  removeAllListeners<Event extends keyof Events>(ev?: Event) {\n    const ret = super.removeAllListeners(ev as string | symbol | undefined)\n    if (ev === 'data' || ev === undefined) {\n      this[DATALISTENERS] = 0\n      if (!this[DISCARDED] && !this[PIPES].length) {\n        this[FLOWING] = false\n      }\n    }\n    return ret\n  }\n\n  /**\n   * true if the 'end' event has been emitted\n   */\n  get emittedEnd() {\n    return this[EMITTED_END]\n  }\n\n  [MAYBE_EMIT_END]() {\n    if (\n      !this[EMITTING_END] &&\n      !this[EMITTED_END] &&\n      !this[DESTROYED] &&\n      this[BUFFER].length === 0 &&\n      this[EOF]\n    ) {\n      this[EMITTING_END] = true\n      this.emit('end')\n      this.emit('prefinish')\n      this.emit('finish')\n      if (this[CLOSED]) this.emit('close')\n      this[EMITTING_END] = false\n    }\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.emit`, with the following\n   * behavior differences to prevent data loss and unnecessary hangs:\n   *\n   * If the stream has been destroyed, and the event is something other\n   * than 'close' or 'error', then `false` is returned and no handlers\n   * are called.\n   *\n   * If the event is 'end', and has already been emitted, then the event\n   * is ignored. If the stream is in a paused or non-flowing state, then\n   * the event will be deferred until data flow resumes. If the stream is\n   * async, then handlers will be called on the next tick rather than\n   * immediately.\n   *\n   * If the event is 'close', and 'end' has not yet been emitted, then\n   * the event will be deferred until after 'end' is emitted.\n   *\n   * If the event is 'error', and an AbortSignal was provided for the stream,\n   * and there are no listeners, then the event is ignored, matching the\n   * behavior of node core streams in the presense of an AbortSignal.\n   *\n   * If the event is 'finish' or 'prefinish', then all listeners will be\n   * removed after emitting the event, to prevent double-firing.\n   */\n  emit<Event extends keyof Events>(\n    ev: Event,\n    ...args: Events[Event]\n  ): boolean {\n    const data = args[0]\n    // error and close are only events allowed after calling destroy()\n    if (\n      ev !== 'error' &&\n      ev !== 'close' &&\n      ev !== DESTROYED &&\n      this[DESTROYED]\n    ) {\n      return false\n    } else if (ev === 'data') {\n      return !this[OBJECTMODE] && !data\n        ? false\n        : this[ASYNC]\n        ? (defer(() => this[EMITDATA](data as RType)), true)\n        : this[EMITDATA](data as RType)\n    } else if (ev === 'end') {\n      return this[EMITEND]()\n    } else if (ev === 'close') {\n      this[CLOSED] = true\n      // don't emit close before 'end' and 'finish'\n      if (!this[EMITTED_END] && !this[DESTROYED]) return false\n      const ret = super.emit('close')\n      this.removeAllListeners('close')\n      return ret\n    } else if (ev === 'error') {\n      this[EMITTED_ERROR] = data\n      super.emit(ERROR, data)\n      const ret =\n        !this[SIGNAL] || this.listeners('error').length\n          ? super.emit('error', data)\n          : false\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'resume') {\n      const ret = super.emit('resume')\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'finish' || ev === 'prefinish') {\n      const ret = super.emit(ev)\n      this.removeAllListeners(ev)\n      return ret\n    }\n\n    // Some other unknown event\n    const ret = super.emit(ev as string, ...args)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITDATA](data: RType) {\n    for (const p of this[PIPES]) {\n      if (p.dest.write(data) === false) this.pause()\n    }\n    const ret = this[DISCARDED] ? false : super.emit('data', data)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITEND]() {\n    if (this[EMITTED_END]) return false\n\n    this[EMITTED_END] = true\n    this.readable = false\n    return this[ASYNC]\n      ? (defer(() => this[EMITEND2]()), true)\n      : this[EMITEND2]()\n  }\n\n  [EMITEND2]() {\n    if (this[DECODER]) {\n      const data = this[DECODER].end()\n      if (data) {\n        for (const p of this[PIPES]) {\n          p.dest.write(data as RType)\n        }\n        if (!this[DISCARDED]) super.emit('data', data)\n      }\n    }\n\n    for (const p of this[PIPES]) {\n      p.end()\n    }\n    const ret = super.emit('end')\n    this.removeAllListeners('end')\n    return ret\n  }\n\n  /**\n   * Return a Promise that resolves to an array of all emitted data once\n   * the stream ends.\n   */\n  async collect(): Promise<RType[] & { dataLength: number }> {\n    const buf: RType[] & { dataLength: number } = Object.assign([], {\n      dataLength: 0,\n    })\n    if (!this[OBJECTMODE]) buf.dataLength = 0\n    // set the promise first, in case an error is raised\n    // by triggering the flow here.\n    const p = this.promise()\n    this.on('data', c => {\n      buf.push(c)\n      if (!this[OBJECTMODE])\n        buf.dataLength += (c as Minipass.BufferOrString).length\n    })\n    await p\n    return buf\n  }\n\n  /**\n   * Return a Promise that resolves to the concatenation of all emitted data\n   * once the stream ends.\n   *\n   * Not allowed on objectMode streams.\n   */\n  async concat(): Promise<RType> {\n    if (this[OBJECTMODE]) {\n      throw new Error('cannot concat in objectMode')\n    }\n    const buf = await this.collect()\n    return (\n      this[ENCODING]\n        ? buf.join('')\n        : Buffer.concat(buf as Buffer[], buf.dataLength)\n    ) as RType\n  }\n\n  /**\n   * Return a void Promise that resolves once the stream ends.\n   */\n  async promise(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.on(DESTROYED, () => reject(new Error('stream destroyed')))\n      this.on('error', er => reject(er))\n      this.on('end', () => resolve())\n    })\n  }\n\n  /**\n   * Asynchronous `for await of` iteration.\n   *\n   * This will continue emitting all chunks until the stream terminates.\n   */\n  [Symbol.asyncIterator](): AsyncGenerator<RType, void, void> {\n    // set this up front, in case the consumer doesn't call next()\n    // right away.\n    this[DISCARDED] = false\n    let stopped = false\n    const stop = async (): Promise<IteratorReturnResult<void>> => {\n      this.pause()\n      stopped = true\n      return { value: undefined, done: true }\n    }\n    const next = (): Promise<IteratorResult<RType, void>> => {\n      if (stopped) return stop()\n      const res = this.read()\n      if (res !== null) return Promise.resolve({ done: false, value: res })\n\n      if (this[EOF]) return stop()\n\n      let resolve!: (res: IteratorResult<RType>) => void\n      let reject!: (er: unknown) => void\n      const onerr = (er: unknown) => {\n        this.off('data', ondata)\n        this.off('end', onend)\n        this.off(DESTROYED, ondestroy)\n        stop()\n        reject(er)\n      }\n      const ondata = (value: RType) => {\n        this.off('error', onerr)\n        this.off('end', onend)\n        this.off(DESTROYED, ondestroy)\n        this.pause()\n        resolve({ value, done: !!this[EOF] })\n      }\n      const onend = () => {\n        this.off('error', onerr)\n        this.off('data', ondata)\n        this.off(DESTROYED, ondestroy)\n        stop()\n        resolve({ done: true, value: undefined })\n      }\n      const ondestroy = () => onerr(new Error('stream destroyed'))\n      return new Promise<IteratorResult<RType>>((res, rej) => {\n        reject = rej\n        resolve = res\n        this.once(DESTROYED, ondestroy)\n        this.once('error', onerr)\n        this.once('end', onend)\n        this.once('data', ondata)\n      })\n    }\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [Symbol.asyncIterator]() {\n        return this\n      },\n    }\n  }\n\n  /**\n   * Synchronous `for of` iteration.\n   *\n   * The iteration will terminate when the internal buffer runs out, even\n   * if the stream has not yet terminated.\n   */\n  [Symbol.iterator](): Generator<RType, void, void> {\n    // set this up front, in case the consumer doesn't call next()\n    // right away.\n    this[DISCARDED] = false\n    let stopped = false\n    const stop = (): IteratorReturnResult<void> => {\n      this.pause()\n      this.off(ERROR, stop)\n      this.off(DESTROYED, stop)\n      this.off('end', stop)\n      stopped = true\n      return { done: true, value: undefined }\n    }\n\n    const next = (): IteratorResult<RType, void> => {\n      if (stopped) return stop()\n      const value = this.read()\n      return value === null ? stop() : { done: false, value }\n    }\n\n    this.once('end', stop)\n    this.once(ERROR, stop)\n    this.once(DESTROYED, stop)\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [Symbol.iterator]() {\n        return this\n      },\n    }\n  }\n\n  /**\n   * Destroy a stream, preventing it from being used for any further purpose.\n   *\n   * If the stream has a `close()` method, then it will be called on\n   * destruction.\n   *\n   * After destruction, any attempt to write data, read data, or emit most\n   * events will be ignored.\n   *\n   * If an error argument is provided, then it will be emitted in an\n   * 'error' event.\n   */\n  destroy(er: unknown) {\n    if (this[DESTROYED]) {\n      if (er) this.emit('error', er)\n      else this.emit(DESTROYED)\n      return this\n    }\n\n    this[DESTROYED] = true\n    this[DISCARDED] = true\n\n    // throw away all buffered data, it's never coming out\n    this[BUFFER].length = 0\n    this[BUFFERLENGTH] = 0\n\n    const wc = this as Minipass<RType, WType, Events> & {\n      close?: () => void\n    }\n    if (typeof wc.close === 'function' && !this[CLOSED]) wc.close()\n\n    if (er) this.emit('error', er)\n    // if no error to emit, still reject pending promises\n    else this.emit(DESTROYED)\n\n    return this\n  }\n\n  /**\n   * Alias for {@link isStream}\n   *\n   * Former export location, maintained for backwards compatibility.\n   *\n   * @deprecated\n   */\n  static get isStream() {\n    return isStream\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/dist/cjs/src/pattern.js":{"lineLengths":[13,73,62,25,41,45,42,3,67,10,3,15,17,14,11,11,14,10,16,13,11,16,27,57,42,54,9,36,51,9,53,81,9,41,48,54,9,40,34,28,34,75,32,28,29,35,48,49,55,35,25,31,45,69,66,38,32,34,34,17,57,57,50,47,55,13,59,57,54,38,32,34,34,17,35,35,50,47,55,13,9,5,7,53,7,15,46,5,7,44,7,16,66,5,7,44,7,18,71,5,7,41,7,16,64,5,7,63,7,18,34,31,34,39,79,50,68,5,7,58,7,15,45,5,7,74,7,12,37,30,28,39,101,50,40,44,26,5,7,62,7,13,37,40,25,28,45,40,35,35,48,30,48,29,5,26,26,71,74,49,7,64,7,15,37,42,27,30,45,40,38,48,45,5,42,54,56,7,56,7,18,37,45,30,33,50,37,34,5,7,53,7,12,39,78,15,17,5,7,72,23,7,27,37,33,35,5,7,74,7,26,77,25,37,20,5,1,26,35],"data":{"version":3,"file":"pattern.js","sourceRoot":"","sources":["file:///home/gcadoret/www/lcov-reporter/node_modules/glob/src/pattern.ts"],"names":[],"mappings":"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","sourcesContent":["// this is just a very light wrapper around 2 arrays with an offset index\n\nimport { GLOBSTAR } from 'minimatch'\nexport type MMPattern = string | RegExp | typeof GLOBSTAR\n\n// an array of length >= 1\nexport type PatternList = [p: MMPattern, ...rest: MMPattern[]]\nexport type UNCPatternList = [\n  p0: '',\n  p1: '',\n  p2: string,\n  p3: string,\n  ...rest: MMPattern[]\n]\nexport type DrivePatternList = [p0: string, ...rest: MMPattern[]]\nexport type AbsolutePatternList = [p0: '', ...rest: MMPattern[]]\nexport type GlobList = [p: string, ...rest: string[]]\n\nconst isPatternList = (pl: MMPattern[]): pl is PatternList =>\n  pl.length >= 1\nconst isGlobList = (gl: string[]): gl is GlobList => gl.length >= 1\n\n/**\n * An immutable-ish view on an array of glob parts and their parsed\n * results\n */\nexport class Pattern {\n  readonly #patternList: PatternList\n  readonly #globList: GlobList\n  readonly #index: number\n  readonly length: number\n  readonly #platform: NodeJS.Platform\n  #rest?: Pattern | null\n  #globString?: string\n  #isDrive?: boolean\n  #isUNC?: boolean\n  #isAbsolute?: boolean\n  #followGlobstar: boolean = true\n\n  constructor(\n    patternList: MMPattern[],\n    globList: string[],\n    index: number,\n    platform: NodeJS.Platform\n  ) {\n    if (!isPatternList(patternList)) {\n      throw new TypeError('empty pattern list')\n    }\n    if (!isGlobList(globList)) {\n      throw new TypeError('empty glob list')\n    }\n    if (globList.length !== patternList.length) {\n      throw new TypeError('mismatched pattern list and glob list lengths')\n    }\n    this.length = patternList.length\n    if (index < 0 || index >= this.length) {\n      throw new TypeError('index out of range')\n    }\n    this.#patternList = patternList\n    this.#globList = globList\n    this.#index = index\n    this.#platform = platform\n\n    // normalize root entries of absolute patterns on initial creation.\n    if (this.#index === 0) {\n      // c: => ['c:/']\n      // C:/ => ['C:/']\n      // C:/x => ['C:/', 'x']\n      // //host/share => ['//host/share/']\n      // //host/share/ => ['//host/share/']\n      // //host/share/x => ['//host/share/', 'x']\n      // /etc => ['/', 'etc']\n      // / => ['/']\n      if (this.isUNC()) {\n        // '' / '' / 'host' / 'share'\n        const [p0, p1, p2, p3, ...prest] = this.#patternList\n        const [g0, g1, g2, g3, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = [p0, p1, p2, p3, ''].join('/')\n        const g = [g0, g1, g2, g3, ''].join('/')\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      } else if (this.isDrive() || this.isAbsolute()) {\n        const [p1, ...prest] = this.#patternList\n        const [g1, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = (p1 as string) + '/'\n        const g = g1 + '/'\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      }\n    }\n  }\n\n  /**\n   * The first entry in the parsed list of patterns\n   */\n  pattern(): MMPattern {\n    return this.#patternList[this.#index]\n  }\n\n  /**\n   * true of if pattern() returns a string\n   */\n  isString(): boolean {\n    return typeof this.#patternList[this.#index] === 'string'\n  }\n  /**\n   * true of if pattern() returns GLOBSTAR\n   */\n  isGlobstar(): boolean {\n    return this.#patternList[this.#index] === GLOBSTAR\n  }\n  /**\n   * true if pattern() returns a regexp\n   */\n  isRegExp(): boolean {\n    return this.#patternList[this.#index] instanceof RegExp\n  }\n\n  /**\n   * The /-joined set of glob parts that make up this pattern\n   */\n  globString(): string {\n    return (this.#globString =\n      this.#globString ||\n      (this.#index === 0\n        ? this.isAbsolute()\n          ? this.#globList[0] + this.#globList.slice(1).join('/')\n          : this.#globList.join('/')\n        : this.#globList.slice(this.#index).join('/')))\n  }\n\n  /**\n   * true if there are more pattern parts after this one\n   */\n  hasMore(): boolean {\n    return this.length > this.#index + 1\n  }\n\n  /**\n   * The rest of the pattern after this part, or null if this is the end\n   */\n  rest(): Pattern | null {\n    if (this.#rest !== undefined) return this.#rest\n    if (!this.hasMore()) return (this.#rest = null)\n    this.#rest = new Pattern(\n      this.#patternList,\n      this.#globList,\n      this.#index + 1,\n      this.#platform\n    )\n    this.#rest.#isAbsolute = this.#isAbsolute\n    this.#rest.#isUNC = this.#isUNC\n    this.#rest.#isDrive = this.#isDrive\n    return this.#rest\n  }\n\n  /**\n   * true if the pattern represents a //unc/path/ on windows\n   */\n  isUNC(): boolean {\n    const pl = this.#patternList\n    return this.#isUNC !== undefined\n      ? this.#isUNC\n      : (this.#isUNC =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          pl[0] === '' &&\n          pl[1] === '' &&\n          typeof pl[2] === 'string' &&\n          !!pl[2] &&\n          typeof pl[3] === 'string' &&\n          !!pl[3])\n  }\n\n  // pattern like C:/...\n  // split = ['C:', ...]\n  // XXX: would be nice to handle patterns like `c:*` to test the cwd\n  // in c: for *, but I don't know of a way to even figure out what that\n  // cwd is without actually chdir'ing into it?\n  /**\n   * True if the pattern starts with a drive letter on Windows\n   */\n  isDrive(): boolean {\n    const pl = this.#patternList\n    return this.#isDrive !== undefined\n      ? this.#isDrive\n      : (this.#isDrive =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          this.length > 1 &&\n          typeof pl[0] === 'string' &&\n          /^[a-z]:$/i.test(pl[0]))\n  }\n\n  // pattern = '/' or '/...' or '/x/...'\n  // split = ['', ''] or ['', ...] or ['', 'x', ...]\n  // Drive and UNC both considered absolute on windows\n  /**\n   * True if the pattern is rooted on an absolute path\n   */\n  isAbsolute(): boolean {\n    const pl = this.#patternList\n    return this.#isAbsolute !== undefined\n      ? this.#isAbsolute\n      : (this.#isAbsolute =\n          (pl[0] === '' && pl.length > 1) ||\n          this.isDrive() ||\n          this.isUNC())\n  }\n\n  /**\n   * consume the root of the pattern, and return it\n   */\n  root(): string {\n    const p = this.#patternList[0]\n    return typeof p === 'string' && this.isAbsolute() && this.#index === 0\n      ? p\n      : ''\n  }\n\n  /**\n   * Check to see if the current globstar pattern is allowed to follow\n   * a symbolic link.\n   */\n  checkFollowGlobstar(): boolean {\n    return !(\n      this.#index === 0 ||\n      !this.isGlobstar() ||\n      !this.#followGlobstar\n    )\n  }\n\n  /**\n   * Mark that the current globstar pattern is following a symbolic link\n   */\n  markFollowGlobstar(): boolean {\n    if (this.#index === 0 || !this.isGlobstar() || !this.#followGlobstar)\n      return false\n    this.#followGlobstar = false\n    return true\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/dist/cjs/src/walker.js":{"lineLengths":[13,62,68,3,74,11,2,10,3,39,43,49,63,44,27,46,17,3,61,3,16,9,13,9,21,19,20,19,12,9,11,13,39,33,25,25,74,26,57,9,69,27,29,50,28,26,38,57,42,15,9,5,20,70,5,28,55,5,29,13,27,5,14,29,33,19,28,28,27,63,17,9,5,18,33,19,29,27,17,9,14,32,36,9,5,67,44,32,37,29,16,33,61,21,33,20,9,57,74,5,30,19,73,41,53,29,15,24,5,30,37,29,16,33,57,21,33,20,9,57,72,5,30,29,19,85,25,72,36,38,30,9,23,75,39,9,14,75,82,33,21,65,9,5,37,50,14,42,5,35,48,14,42,5,34,29,33,17,28,84,5,46,42,24,33,17,26,79,19,9,52,77,68,65,22,28,30,21,10,73,33,25,20,62,9,53,75,25,13,20,53,34,65,18,93,13,9,15,5,45,61,22,28,30,21,10,73,33,25,20,62,9,72,20,68,9,15,5,38,29,33,17,28,88,5,50,42,24,33,17,26,83,19,9,52,77,68,65,22,28,30,21,10,73,33,25,47,9,53,75,25,13,20,45,59,9,15,5,49,61,22,28,30,21,10,73,33,25,47,9,72,20,72,9,15,5,1,28,35,12,39,36,33,5,18,28,5,18,33,37,36,36,9,41,57,43,44,17,22,38,17,15,11,28,5,16,33,37,36,34,9,68,57,37,41,11,28,5,1,32,35,12,39,36,48,32,29,11,54,55,5,18,30,34,25,5,14,33,33,39,77,15,9,14,73,9,28,5,18,36,34,9,76,28,5,1,32,34],"data":{"version":3,"file":"walker.js","sourceRoot":"","sources":["file:///home/gcadoret/www/lcov-reporter/node_modules/glob/src/walker.ts"],"names":[],"mappings":";;;AAAA;;;;;GAKG;AACH,uCAAmC;AAEnC,2CAAgD;AAQhD,iDAA0C;AAiE1C,MAAM,UAAU,GAAG,CACjB,MAAsC,EACtC,IAAoB,EACR,EAAE,CACd,OAAO,MAAM,KAAK,QAAQ;IACxB,CAAC,CAAC,IAAI,kBAAM,CAAC,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC;IAC5B,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;QACvB,CAAC,CAAC,IAAI,kBAAM,CAAC,MAAM,EAAE,IAAI,CAAC;QAC1B,CAAC,CAAC,MAAM,CAAA;AAEZ;;GAEG;AACH,MAAsB,QAAQ;IAC5B,IAAI,CAAM;IACV,QAAQ,CAAW;IACnB,IAAI,CAAG;IACP,IAAI,GAAc,IAAI,GAAG,EAAQ,CAAA;IACjC,MAAM,GAAY,KAAK,CAAA;IACvB,OAAO,GAAY,KAAK,CAAA;IACxB,SAAS,GAAkB,EAAE,CAAA;IAC7B,OAAO,CAAa;IACpB,IAAI,CAAY;IAChB,MAAM,CAAc;IACpB,QAAQ,CAAQ;IAGhB,YAAY,QAAmB,EAAE,IAAU,EAAE,IAAO;QAClD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;QACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,KAAK,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAA;QACjE,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;SAC7C;QACD,6DAA6D;QAC7D,mBAAmB;QACnB,qBAAqB;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAA;QACzC,oBAAoB;QACpB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA;YACzB,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;gBACzC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAA;YAC3B,CAAC,CAAC,CAAA;SACH;IACH,CAAC;IAED,QAAQ,CAAC,IAAU;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,IAAI,CAAC,CAAA;IAC/D,CAAC;IACD,gBAAgB,CAAC,IAAU;QACzB,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,eAAe,EAAE,CAAC,IAAI,CAAC,CAAA;IAChD,CAAC;IAED,yBAAyB;IACzB,KAAK;QACH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAA;IACpB,CAAC;IACD,MAAM;QACJ,qBAAqB;QACrB,IAAI,IAAI,CAAC,MAAM,EAAE,OAAO;YAAE,OAAM;QAChC,oBAAoB;QACpB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAA;QACnB,IAAI,EAAE,GAA4B,SAAS,CAAA;QAC3C,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE;YACpD,EAAE,EAAE,CAAA;SACL;IACH,CAAC;IACD,QAAQ,CAAC,EAAa;QACpB,IAAI,IAAI,CAAC,MAAM,EAAE,OAAO;YAAE,OAAM;QAChC,qBAAqB;QACrB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,EAAE,EAAE,CAAA;SACL;aAAM;YACL,oBAAoB;YACpB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;SACxB;IACH,CAAC;IAED,+DAA+D;IAC/D,wCAAwC;IACxC,KAAK,CAAC,UAAU,CAAC,CAAO,EAAE,KAAc;QACtC,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK;YAAE,OAAO,SAAS,CAAA;QAC9C,IAAI,GAAqB,CAAA;QACzB,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACtB,GAAG,GAAG,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAA;YAChD,IAAI,CAAC,GAAG;gBAAE,OAAO,SAAS,CAAA;YAC1B,CAAC,GAAG,GAAG,CAAA;SACR;QACD,MAAM,QAAQ,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAA;QAChD,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAA;IACnE,CAAC;IAED,cAAc,CAAC,CAAmB,EAAE,KAAc;QAChD,OAAO,CAAC;YACN,CAAC,IAAI,CAAC,QAAQ,KAAK,QAAQ,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC;YAC1D,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,UAAU,EAAE,CAAC;YAC1B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;YACtC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjB,CAAC,CAAC,CAAC;YACH,CAAC,CAAC,SAAS,CAAA;IACf,CAAC;IAED,cAAc,CAAC,CAAO,EAAE,KAAc;QACpC,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK;YAAE,OAAO,SAAS,CAAA;QAC9C,IAAI,GAAqB,CAAA;QACzB,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACtB,GAAG,GAAG,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC,YAAY,EAAE,CAAA;YAC5C,IAAI,CAAC,GAAG;gBAAE,OAAO,SAAS,CAAA;YAC1B,CAAC,GAAG,GAAG,CAAA;SACR;QACD,MAAM,QAAQ,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAA;QAChD,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAA;IACjE,CAAC;IAKD,WAAW,CAAC,CAAO,EAAE,QAAiB;QACpC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAAE,OAAM;QAC5B,MAAM,GAAG,GACP,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAA;QAClE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;QAChB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAA;QAC/D,4BAA4B;QAC5B,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YAC3B,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;SAClB;aAAM,IAAI,GAAG,EAAE;YACd,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAA;YAC9D,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,CAAA;SAC3B;aAAM;YACL,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAA;YAC9D,MAAM,GAAG,GACP,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBACxD,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI;gBACjB,CAAC,CAAC,EAAE,CAAA;YACR,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,CAAA;SACrD;IACH,CAAC;IAED,KAAK,CAAC,KAAK,CAAC,CAAO,EAAE,QAAiB,EAAE,KAAc;QACpD,MAAM,CAAC,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,KAAK,CAAC,CAAA;QACzC,IAAI,CAAC;YAAE,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAA;IACtC,CAAC;IAED,SAAS,CAAC,CAAO,EAAE,QAAiB,EAAE,KAAc;QAClD,MAAM,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,CAAA;QACvC,IAAI,CAAC;YAAE,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAA;IACtC,CAAC;IAED,MAAM,CAAC,MAAY,EAAE,QAAmB,EAAE,EAAa;QACrD,qBAAqB;QACrB,IAAI,IAAI,CAAC,MAAM,EAAE,OAAO;YAAE,EAAE,EAAE,CAAA;QAC9B,oBAAoB;QACpB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,wBAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAA;IAC9D,CAAC;IAED,OAAO,CACL,MAAY,EACZ,QAAmB,EACnB,SAAoB,EACpB,EAAa;QAEb,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;YAAE,OAAO,EAAE,EAAE,CAAA;QAC9C,IAAI,IAAI,CAAC,MAAM,EAAE,OAAO;YAAE,EAAE,EAAE,CAAA;QAC9B,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC,CAAA;YAClE,OAAM;SACP;QACD,SAAS,CAAC,eAAe,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QAE3C,qEAAqE;QACrE,4DAA4D;QAC5D,yDAAyD;QACzD,IAAI,KAAK,GAAG,CAAC,CAAA;QACb,MAAM,IAAI,GAAG,GAAG,EAAE;YAChB,IAAI,EAAE,KAAK,KAAK,CAAC;gBAAE,EAAE,EAAE,CAAA;QACzB,CAAC,CAAA;QAED,KAAK,MAAM,CAAC,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,IAAI,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE;YAC9D,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAAE,SAAQ;YAC9B,KAAK,EAAE,CAAA;YACP,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,CAAA;SAClD;QAED,KAAK,MAAM,CAAC,IAAI,SAAS,CAAC,cAAc,EAAE,EAAE;YAC1C,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAC5D,SAAQ;aACT;YACD,KAAK,EAAE,CAAA;YACP,MAAM,cAAc,GAAG,CAAC,CAAC,aAAa,EAAE,CAAA;YACxC,IAAI,CAAC,CAAC,aAAa,EAAE;gBACnB,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,cAAc,EAAE,SAAS,EAAE,IAAI,CAAC,CAAA;iBAC7C;gBACH,CAAC,CAAC,SAAS,CACT,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,EACzD,IAAI,CACL,CAAA;aACF;SACF;QAED,IAAI,EAAE,CAAA;IACR,CAAC;IAED,OAAO,CACL,MAAY,EACZ,OAAe,EACf,SAAoB,EACpB,EAAa;QAEb,SAAS,GAAG,SAAS,CAAC,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA;QAEpD,IAAI,KAAK,GAAG,CAAC,CAAA;QACb,MAAM,IAAI,GAAG,GAAG,EAAE;YAChB,IAAI,EAAE,KAAK,KAAK,CAAC;gBAAE,EAAE,EAAE,CAAA;QACzB,CAAC,CAAA;QAED,KAAK,MAAM,CAAC,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,IAAI,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE;YAC9D,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAAE,SAAQ;YAC9B,KAAK,EAAE,CAAA;YACP,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,CAAA;SAClD;QACD,KAAK,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE;YAC7D,KAAK,EAAE,CAAA;YACP,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,CAAA;SACxD;QAED,IAAI,EAAE,CAAA;IACR,CAAC;IAED,UAAU,CAAC,MAAY,EAAE,QAAmB,EAAE,EAAa;QACzD,qBAAqB;QACrB,IAAI,IAAI,CAAC,MAAM,EAAE,OAAO;YAAE,EAAE,EAAE,CAAA;QAC9B,oBAAoB;QACpB,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,wBAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAA;IAClE,CAAC;IAED,WAAW,CACT,MAAY,EACZ,QAAmB,EACnB,SAAoB,EACpB,EAAa;QAEb,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;YAAE,OAAO,EAAE,EAAE,CAAA;QAC9C,IAAI,IAAI,CAAC,MAAM,EAAE,OAAO;YAAE,EAAE,EAAE,CAAA;QAC9B,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CACjB,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,EAAE,CAAC,CAClD,CAAA;YACD,OAAM;SACP;QACD,SAAS,CAAC,eAAe,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QAE3C,qEAAqE;QACrE,4DAA4D;QAC5D,yDAAyD;QACzD,IAAI,KAAK,GAAG,CAAC,CAAA;QACb,MAAM,IAAI,GAAG,GAAG,EAAE;YAChB,IAAI,EAAE,KAAK,KAAK,CAAC;gBAAE,EAAE,EAAE,CAAA;QACzB,CAAC,CAAA;QAED,KAAK,MAAM,CAAC,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,IAAI,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE;YAC9D,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAAE,SAAQ;YAC9B,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAA;SACnC;QAED,KAAK,MAAM,CAAC,IAAI,SAAS,CAAC,cAAc,EAAE,EAAE;YAC1C,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAC5D,SAAQ;aACT;YACD,KAAK,EAAE,CAAA;YACP,MAAM,QAAQ,GAAG,CAAC,CAAC,WAAW,EAAE,CAAA;YAChC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,CAAA;SAC/C;QAED,IAAI,EAAE,CAAA;IACR,CAAC;IAED,WAAW,CACT,MAAY,EACZ,OAAe,EACf,SAAoB,EACpB,EAAa;QAEb,SAAS,GAAG,SAAS,CAAC,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA;QAEpD,IAAI,KAAK,GAAG,CAAC,CAAA;QACb,MAAM,IAAI,GAAG,GAAG,EAAE;YAChB,IAAI,EAAE,KAAK,KAAK,CAAC;gBAAE,EAAE,EAAE,CAAA;QACzB,CAAC,CAAA;QAED,KAAK,MAAM,CAAC,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,IAAI,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE;YAC9D,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAAE,SAAQ;YAC9B,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAA;SACnC;QACD,KAAK,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE;YAC7D,KAAK,EAAE,CAAA;YACP,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,CAAA;SAC5D;QAED,IAAI,EAAE,CAAA;IACR,CAAC;CACF;AAlSD,4BAkSC;AAED,MAAa,UAEX,SAAQ,QAAW;IACnB,OAAO,CAMe;IAEtB,YAAY,QAAmB,EAAE,IAAU,EAAE,IAAO;QAClD,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,EAAgB,CAAA;IACxC,CAAC;IAGD,SAAS,CAAC,CAAgB;QACxB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;IACrB,CAAC;IAED,KAAK,CAAC,IAAI;QACR,IAAI,IAAI,CAAC,MAAM,EAAE,OAAO;YAAE,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAA;QAClD,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;YACzB,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAA;SACxB;QACD,MAAM,IAAI,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;YAC7B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE;gBACzC,IAAI,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE;oBACxB,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;iBACxB;qBAAM;oBACL,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;iBAClB;YACH,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QACF,OAAO,IAAI,CAAC,OAAO,CAAA;IACrB,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,MAAM,EAAE,OAAO;YAAE,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAA;QAClD,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;YACzB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAA;SACtB;QACD,4DAA4D;QAC5D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE;YAC7C,IAAI,IAAI,CAAC,MAAM,EAAE,OAAO;gBAAE,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAA;QACpD,CAAC,CAAC,CAAA;QACF,OAAO,IAAI,CAAC,OAAO,CAAA;IACrB,CAAC;CACF;AAjDD,gCAiDC;AAED,MAAa,UAEX,SAAQ,QAAW;IACnB,OAAO,CAMmC;IAE1C,YAAY,QAAmB,EAAE,IAAU,EAAE,IAAO;QAClD,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,mBAAQ,CAAC;YAC1B,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,UAAU,EAAE,IAAI;SACjB,CAAmB,CAAA;QACpB,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAA;QAC7C,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAA;IAChD,CAAC;IAGD,SAAS,CAAC,CAAgB;QACxB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;QACrB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO;YAAE,IAAI,CAAC,KAAK,EAAE,CAAA;IACzC,CAAC;IAED,MAAM;QACJ,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAA;QACxB,IAAI,MAAM,CAAC,SAAS,EAAE,EAAE;YACtB,MAAM,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;gBACvB,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAA;YAC9D,CAAC,CAAC,CAAA;SACH;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAA;SAC7D;QACD,OAAO,IAAI,CAAC,OAAO,CAAA;IACrB,CAAC;IAED,UAAU;QACR,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;YACzB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAA;SACtB;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAA;QACnE,OAAO,IAAI,CAAC,OAAO,CAAA;IACrB,CAAC;CACF;AA9CD,gCA8CC","sourcesContent":["/**\n * Single-use utility classes to provide functionality to the {@link Glob}\n * methods.\n *\n * @module\n */\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport { Ignore, IgnoreLike } from './ignore.js'\n\n// XXX can we somehow make it so that it NEVER processes a given path more than\n// once, enough that the match set tracking is no longer needed?  that'd speed\n// things up a lot.  Or maybe bring back nounique, and skip it in that case?\n\n// a single minimatch set entry with 1 or more parts\nimport { Pattern } from './pattern.js'\nimport { Processor } from './processor.js'\n\nexport interface GlobWalkerOpts {\n  absolute?: boolean\n  allowWindowsEscape?: boolean\n  cwd?: string | URL\n  dot?: boolean\n  dotRelative?: boolean\n  follow?: boolean\n  ignore?: string | string[] | IgnoreLike\n  mark?: boolean\n  matchBase?: boolean\n  // Note: maxDepth here means \"maximum actual Path.depth()\",\n  // not \"maximum depth beyond cwd\"\n  maxDepth?: number\n  nobrace?: boolean\n  nocase?: boolean\n  nodir?: boolean\n  noext?: boolean\n  noglobstar?: boolean\n  platform?: NodeJS.Platform\n  posix?: boolean\n  realpath?: boolean\n  root?: string\n  stat?: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape?: boolean\n  withFileTypes?: boolean\n}\n\nexport type GWOFileTypesTrue = GlobWalkerOpts & {\n  withFileTypes: true\n}\nexport type GWOFileTypesFalse = GlobWalkerOpts & {\n  withFileTypes: false\n}\nexport type GWOFileTypesUnset = GlobWalkerOpts & {\n  withFileTypes?: undefined\n}\n\nexport type Result<O extends GlobWalkerOpts> = O extends GWOFileTypesTrue\n  ? Path\n  : O extends GWOFileTypesFalse\n  ? string\n  : O extends GWOFileTypesUnset\n  ? string\n  : Path | string\n\nexport type Matches<O extends GlobWalkerOpts> = O extends GWOFileTypesTrue\n  ? Set<Path>\n  : O extends GWOFileTypesFalse\n  ? Set<string>\n  : O extends GWOFileTypesUnset\n  ? Set<string>\n  : Set<Path | string>\n\nexport type MatchStream<O extends GlobWalkerOpts> =\n  O extends GWOFileTypesTrue\n    ? Minipass<Path, Path>\n    : O extends GWOFileTypesFalse\n    ? Minipass<string, string>\n    : O extends GWOFileTypesUnset\n    ? Minipass<string, string>\n    : Minipass<Path | string, Path | string>\n\nconst makeIgnore = (\n  ignore: string | string[] | IgnoreLike,\n  opts: GlobWalkerOpts\n): IgnoreLike =>\n  typeof ignore === 'string'\n    ? new Ignore([ignore], opts)\n    : Array.isArray(ignore)\n    ? new Ignore(ignore, opts)\n    : ignore\n\n/**\n * basic walking utilities that all the glob walker types use\n */\nexport abstract class GlobUtil<O extends GlobWalkerOpts = GlobWalkerOpts> {\n  path: Path\n  patterns: Pattern[]\n  opts: O\n  seen: Set<Path> = new Set<Path>()\n  paused: boolean = false\n  aborted: boolean = false\n  #onResume: (() => any)[] = []\n  #ignore?: IgnoreLike\n  #sep: '\\\\' | '/'\n  signal?: AbortSignal\n  maxDepth: number\n\n  constructor(patterns: Pattern[], path: Path, opts: O)\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    this.patterns = patterns\n    this.path = path\n    this.opts = opts\n    this.#sep = !opts.posix && opts.platform === 'win32' ? '\\\\' : '/'\n    if (opts.ignore) {\n      this.#ignore = makeIgnore(opts.ignore, opts)\n    }\n    // ignore, always set with maxDepth, but it's optional on the\n    // GlobOptions type\n    /* c8 ignore start */\n    this.maxDepth = opts.maxDepth || Infinity\n    /* c8 ignore stop */\n    if (opts.signal) {\n      this.signal = opts.signal\n      this.signal.addEventListener('abort', () => {\n        this.#onResume.length = 0\n      })\n    }\n  }\n\n  #ignored(path: Path): boolean {\n    return this.seen.has(path) || !!this.#ignore?.ignored?.(path)\n  }\n  #childrenIgnored(path: Path): boolean {\n    return !!this.#ignore?.childrenIgnored?.(path)\n  }\n\n  // backpressure mechanism\n  pause() {\n    this.paused = true\n  }\n  resume() {\n    /* c8 ignore start */\n    if (this.signal?.aborted) return\n    /* c8 ignore stop */\n    this.paused = false\n    let fn: (() => any) | undefined = undefined\n    while (!this.paused && (fn = this.#onResume.shift())) {\n      fn()\n    }\n  }\n  onResume(fn: () => any) {\n    if (this.signal?.aborted) return\n    /* c8 ignore start */\n    if (!this.paused) {\n      fn()\n    } else {\n      /* c8 ignore stop */\n      this.#onResume.push(fn)\n    }\n  }\n\n  // do the requisite realpath/stat checking, and return the path\n  // to add or undefined to filter it out.\n  async matchCheck(e: Path, ifDir: boolean): Promise<Path | undefined> {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || (await e.realpath())\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    return this.matchCheckTest(needStat ? await e.lstat() : e, ifDir)\n  }\n\n  matchCheckTest(e: Path | undefined, ifDir: boolean): Path | undefined {\n    return e &&\n      (this.maxDepth === Infinity || e.depth() <= this.maxDepth) &&\n      (!ifDir || e.canReaddir()) &&\n      (!this.opts.nodir || !e.isDirectory()) &&\n      !this.#ignored(e)\n      ? e\n      : undefined\n  }\n\n  matchCheckSync(e: Path, ifDir: boolean): Path | undefined {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || e.realpathSync()\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    return this.matchCheckTest(needStat ? e.lstatSync() : e, ifDir)\n  }\n\n  abstract matchEmit(p: Result<O>): void\n  abstract matchEmit(p: string | Path): void\n\n  matchFinish(e: Path, absolute: boolean) {\n    if (this.#ignored(e)) return\n    const abs =\n      this.opts.absolute === undefined ? absolute : this.opts.absolute\n    this.seen.add(e)\n    const mark = this.opts.mark && e.isDirectory() ? this.#sep : ''\n    // ok, we have what we need!\n    if (this.opts.withFileTypes) {\n      this.matchEmit(e)\n    } else if (abs) {\n      const abs = this.opts.posix ? e.fullpathPosix() : e.fullpath()\n      this.matchEmit(abs + mark)\n    } else {\n      const rel = this.opts.posix ? e.relativePosix() : e.relative()\n      const pre =\n        this.opts.dotRelative && !rel.startsWith('..' + this.#sep)\n          ? '.' + this.#sep\n          : ''\n      this.matchEmit(!rel ? '.' + mark : pre + rel + mark)\n    }\n  }\n\n  async match(e: Path, absolute: boolean, ifDir: boolean): Promise<void> {\n    const p = await this.matchCheck(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  matchSync(e: Path, absolute: boolean, ifDir: boolean): void {\n    const p = this.matchCheckSync(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  walkCB(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() => this.walkCB2(target, patterns, processor, cb))\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const childrenCached = t.readdirCached()\n      if (t.calledReaddir())\n        this.walkCB3(t, childrenCached, processor, next)\n      else {\n        t.readdirCB(\n          (_, entries) => this.walkCB3(t, entries, processor, next),\n          true\n        )\n      }\n    }\n\n    next()\n  }\n\n  walkCB3(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n\n  walkCBSync(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2Sync(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2Sync(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() =>\n        this.walkCB2Sync(target, patterns, processor, cb)\n      )\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const children = t.readdirSync()\n      this.walkCB3Sync(t, children, processor, next)\n    }\n\n    next()\n  }\n\n  walkCB3Sync(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2Sync(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n}\n\nexport class GlobWalker<\n  O extends GlobWalkerOpts = GlobWalkerOpts\n> extends GlobUtil<O> {\n  matches: O extends GWOFileTypesTrue\n    ? Set<Path>\n    : O extends GWOFileTypesFalse\n    ? Set<string>\n    : O extends GWOFileTypesUnset\n    ? Set<string>\n    : Set<Path | string>\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n    this.matches = new Set() as Matches<O>\n  }\n\n  matchEmit(e: Result<O>): void\n  matchEmit(e: Path | string): void {\n    this.matches.add(e)\n  }\n\n  async walk(): Promise<Matches<O>> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      await this.path.lstat()\n    }\n    await new Promise((res, rej) => {\n      this.walkCB(this.path, this.patterns, () => {\n        if (this.signal?.aborted) {\n          rej(this.signal.reason)\n        } else {\n          res(this.matches)\n        }\n      })\n    })\n    return this.matches\n  }\n\n  walkSync(): Matches<O> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    // nothing for the callback to do, because this never pauses\n    this.walkCBSync(this.path, this.patterns, () => {\n      if (this.signal?.aborted) throw this.signal.reason\n    })\n    return this.matches\n  }\n}\n\nexport class GlobStream<\n  O extends GlobWalkerOpts = GlobWalkerOpts\n> extends GlobUtil<O> {\n  results: O extends GWOFileTypesTrue\n    ? Minipass<Path, Path>\n    : O extends GWOFileTypesFalse\n    ? Minipass<string, string>\n    : O extends GWOFileTypesUnset\n    ? Minipass<string, string>\n    : Minipass<Path | string, Path | string>\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n    this.results = new Minipass({\n      signal: this.signal,\n      objectMode: true,\n    }) as MatchStream<O>\n    this.results.on('drain', () => this.resume())\n    this.results.on('resume', () => this.resume())\n  }\n\n  matchEmit(e: Result<O>): void\n  matchEmit(e: Path | string): void {\n    this.results.write(e)\n    if (!this.results.flowing) this.pause()\n  }\n\n  stream(): MatchStream<O> {\n    const target = this.path\n    if (target.isUnknown()) {\n      target.lstat().then(() => {\n        this.walkCB(target, this.patterns, () => this.results.end())\n      })\n    } else {\n      this.walkCB(target, this.patterns, () => this.results.end())\n    }\n    return this.results\n  }\n\n  streamSync(): MatchStream<O> {\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    this.walkCBSync(this.path, this.patterns, () => this.results.end())\n    return this.results\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/dist/cjs/src/ignore.js":{"lineLengths":[13,54,34,66,45,62,24,41,45,54,14,40,22,14,3,41,3,14,13,21,13,21,95,27,27,35,35,24,22,20,19,18,23,33,21,28,27,10,75,72,75,47,75,77,31,79,76,29,78,48,36,62,53,41,50,83,76,74,48,29,42,20,42,31,33,54,24,54,17,13,9,5,16,38,41,45,41,40,56,28,9,40,56,28,9,21,5,24,44,53,48,34,28,9,48,34,28,9,21,5,1,24,34],"data":{"version":3,"file":"ignore.js","sourceRoot":"","sources":["file:///home/gcadoret/www/lcov-reporter/node_modules/glob/src/ignore.ts"],"names":[],"mappings":"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","sourcesContent":["// give it a pattern, and it'll be able to tell you if\n// a given path should be ignored.\n// Ignoring a path ignores its children if the pattern ends in /**\n// Ignores are always parsed in dot:true mode\n\nimport { Minimatch } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\nexport interface IgnoreLike {\n  ignored?: (p: Path) => boolean\n  childrenIgnored?: (p: Path) => boolean\n}\n\nconst defaultPlatform: NodeJS.Platform =\n  typeof process === 'object' &&\n  process &&\n  typeof process.platform === 'string'\n    ? process.platform\n    : 'linux'\n\n/**\n * Class used to process ignored patterns\n */\nexport class Ignore implements IgnoreLike {\n  relative: Minimatch[]\n  relativeChildren: Minimatch[]\n  absolute: Minimatch[]\n  absoluteChildren: Minimatch[]\n\n  constructor(\n    ignored: string[],\n    {\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      platform = defaultPlatform,\n    }: GlobWalkerOpts\n  ) {\n    this.relative = []\n    this.absolute = []\n    this.relativeChildren = []\n    this.absoluteChildren = []\n    const mmopts = {\n      dot: true,\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      optimizationLevel: 2,\n      platform,\n      nocomment: true,\n      nonegate: true,\n    }\n\n    // this is a little weird, but it gives us a clean set of optimized\n    // minimatch matchers, without getting tripped up if one of them\n    // ends in /** inside a brace section, and it's only inefficient at\n    // the start of the walk, not along it.\n    // It'd be nice if the Pattern class just had a .test() method, but\n    // handling globstars is a bit of a pita, and that code already lives\n    // in minimatch anyway.\n    // Another way would be if maybe Minimatch could take its set/globParts\n    // as an option, and then we could at least just use Pattern to test\n    // for absolute-ness.\n    // Yet another way, Minimatch could take an array of glob strings, and\n    // a cwd option, and do the right thing.\n    for (const ign of ignored) {\n      const mm = new Minimatch(ign, mmopts)\n      for (let i = 0; i < mm.set.length; i++) {\n        const parsed = mm.set[i]\n        const globParts = mm.globParts[i]\n        const p = new Pattern(parsed, globParts, 0, platform)\n        const m = new Minimatch(p.globString(), mmopts)\n        const children = globParts[globParts.length - 1] === '**'\n        const absolute = p.isAbsolute()\n        if (absolute) this.absolute.push(m)\n        else this.relative.push(m)\n        if (children) {\n          if (absolute) this.absoluteChildren.push(m)\n          else this.relativeChildren.push(m)\n        }\n      }\n    }\n  }\n\n  ignored(p: Path): boolean {\n    const fullpath = p.fullpath()\n    const fullpaths = `${fullpath}/`\n    const relative = p.relative() || '.'\n    const relatives = `${relative}/`\n    for (const m of this.relative) {\n      if (m.match(relative) || m.match(relatives)) return true\n    }\n    for (const m of this.absolute) {\n      if (m.match(fullpath) || m.match(fullpaths)) return true\n    }\n    return false\n  }\n\n  childrenIgnored(p: Path): boolean {\n    const fullpath = p.fullpath() + '/'\n    const relative = (p.relative() || '.') + '/'\n    for (const m of this.relativeChildren) {\n      if (m.match(relative)) return true\n    }\n    for (const m of this.absoluteChildren) {\n      if (m.match(fullpath)) return true\n    }\n    return false\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/dist/cjs/src/processor.js":{"lineLengths":[13,69,62,93,41,3,65,3,22,10,36,27,5,12,55,5,32,76,5,34,43,48,19,45,12,70,5,1,40,3,66,72,66,3,19,22,34,55,47,72,5,29,15,61,17,22,22,11,5,1,34,3,71,20,3,16,22,26,35,19,9,44,19,75,35,13,9,12,46,5,17,44,29,20,63,9,28,20,5,15,60,5,12,66,5,1,28,3,54,2,66,35,3,17,19,32,30,13,11,8,9,39,25,36,30,44,35,35,5,39,33,61,72,47,49,56,40,82,46,23,74,36,28,44,28,53,29,17,22,35,17,13,29,25,18,21,32,65,42,39,22,31,31,13,34,34,26,62,29,60,13,67,49,62,40,67,43,66,64,25,13,50,56,60,72,76,80,42,34,52,50,17,43,43,69,69,65,75,17,22,38,80,80,45,49,44,35,65,77,57,25,21,17,13,43,46,13,9,20,5,22,36,5,13,61,5,62,45,49,31,36,51,65,37,34,45,54,44,44,49,69,17,47,61,17,22,61,17,13,9,23,5,46,50,37,53,13,33,75,80,79,81,71,57,50,17,46,64,51,21,60,54,21,17,13,9,62,20,19,38,41,54,30,28,29,62,13,35,37,41,36,44,13,44,62,13,9,5,38,28,19,20,49,9,14,39,9,5,38,31,26,19,20,49,9,14,39,9,5,1,30,37],"data":{"version":3,"file":"processor.js","sourceRoot":"","sources":["file:///home/gcadoret/www/lcov-reporter/node_modules/glob/src/processor.ts"],"names":[],"mappings":"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","sourcesContent":["// synchronous utility for filtering entries and calculating subwalks\n\nimport { GLOBSTAR, MMRegExp } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { MMPattern, Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\n/**\n * A cache of which patterns have been processed for a given Path\n */\nexport class HasWalkedCache {\n  store: Map<string, Set<string>>\n  constructor(store: Map<string, Set<string>> = new Map()) {\n    this.store = store\n  }\n  copy() {\n    return new HasWalkedCache(new Map(this.store))\n  }\n  hasWalked(target: Path, pattern: Pattern) {\n    return this.store.get(target.fullpath())?.has(pattern.globString())\n  }\n  storeWalked(target: Path, pattern: Pattern) {\n    const fullpath = target.fullpath()\n    const cached = this.store.get(fullpath)\n    if (cached) cached.add(pattern.globString())\n    else this.store.set(fullpath, new Set([pattern.globString()]))\n  }\n}\n\n/**\n * A record of which paths have been matched in a given walk step,\n * and whether they only are considered a match if they are a directory,\n * and whether their absolute or relative path should be returned.\n */\nexport class MatchRecord {\n  store: Map<Path, number> = new Map()\n  add(target: Path, absolute: boolean, ifDir: boolean) {\n    const n = (absolute ? 2 : 0) | (ifDir ? 1 : 0)\n    const current = this.store.get(target)\n    this.store.set(target, current === undefined ? n : n & current)\n  }\n  // match, absolute, ifdir\n  entries(): [Path, boolean, boolean][] {\n    return [...this.store.entries()].map(([path, n]) => [\n      path,\n      !!(n & 2),\n      !!(n & 1),\n    ])\n  }\n}\n\n/**\n * A collection of patterns that must be processed in a subsequent step\n * for a given path.\n */\nexport class SubWalks {\n  store: Map<Path, Pattern[]> = new Map()\n  add(target: Path, pattern: Pattern) {\n    if (!target.canReaddir()) {\n      return\n    }\n    const subs = this.store.get(target)\n    if (subs) {\n      if (!subs.find(p => p.globString() === pattern.globString())) {\n        subs.push(pattern)\n      }\n    } else this.store.set(target, [pattern])\n  }\n  get(target: Path): Pattern[] {\n    const subs = this.store.get(target)\n    /* c8 ignore start */\n    if (!subs) {\n      throw new Error('attempting to walk unknown path')\n    }\n    /* c8 ignore stop */\n    return subs\n  }\n  entries(): [Path, Pattern[]][] {\n    return this.keys().map(k => [k, this.store.get(k) as Pattern[]])\n  }\n  keys(): Path[] {\n    return [...this.store.keys()].filter(t => t.canReaddir())\n  }\n}\n\n/**\n * The class that processes patterns for a given path.\n *\n * Handles child entry filtering, and determining whether a path's\n * directory contents must be read.\n */\nexport class Processor {\n  hasWalkedCache: HasWalkedCache\n  matches = new MatchRecord()\n  subwalks = new SubWalks()\n  patterns?: Pattern[]\n  follow: boolean\n  dot: boolean\n  opts: GlobWalkerOpts\n\n  constructor(opts: GlobWalkerOpts, hasWalkedCache?: HasWalkedCache) {\n    this.opts = opts\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.hasWalkedCache = hasWalkedCache\n      ? hasWalkedCache.copy()\n      : new HasWalkedCache()\n  }\n\n  processPatterns(target: Path, patterns: Pattern[]) {\n    this.patterns = patterns\n    const processingSet: [Path, Pattern][] = patterns.map(p => [target, p])\n\n    // map of paths to the magic-starting subwalks they need to walk\n    // first item in patterns is the filter\n\n    for (let [t, pattern] of processingSet) {\n      this.hasWalkedCache.storeWalked(t, pattern)\n\n      const root = pattern.root()\n      const absolute = pattern.isAbsolute() && this.opts.absolute !== false\n\n      // start absolute patterns at root\n      if (root) {\n        t = t.resolve(\n          root === '/' && this.opts.root !== undefined\n            ? this.opts.root\n            : root\n        )\n        const rest = pattern.rest()\n        if (!rest) {\n          this.matches.add(t, true, false)\n          continue\n        } else {\n          pattern = rest\n        }\n      }\n\n      if (t.isENOENT()) continue\n\n      let p: MMPattern\n      let rest: Pattern | null\n      let changed = false\n      while (\n        typeof (p = pattern.pattern()) === 'string' &&\n        (rest = pattern.rest())\n      ) {\n        const c = t.resolve(p)\n        t = c\n        pattern = rest\n        changed = true\n      }\n      p = pattern.pattern()\n      rest = pattern.rest()\n      if (changed) {\n        if (this.hasWalkedCache.hasWalked(t, pattern)) continue\n        this.hasWalkedCache.storeWalked(t, pattern)\n      }\n\n      // now we have either a final string for a known entry,\n      // more strings for an unknown entry,\n      // or a pattern starting with magic, mounted on t.\n      if (typeof p === 'string') {\n        // must not be final entry, otherwise we would have\n        // concatenated it earlier.\n        const ifDir = p === '..' || p === '' || p === '.'\n        this.matches.add(t.resolve(p), absolute, ifDir)\n        continue\n      } else if (p === GLOBSTAR) {\n        // if no rest, match and subwalk pattern\n        // if rest, process rest and subwalk pattern\n        // if it's a symlink, but we didn't get here by way of a\n        // globstar match (meaning it's the first time THIS globstar\n        // has traversed a symlink), then we follow it. Otherwise, stop.\n        if (\n          !t.isSymbolicLink() ||\n          this.follow ||\n          pattern.checkFollowGlobstar()\n        ) {\n          this.subwalks.add(t, pattern)\n        }\n        const rp = rest?.pattern()\n        const rrest = rest?.rest()\n        if (!rest || ((rp === '' || rp === '.') && !rrest)) {\n          // only HAS to be a dir if it ends in **/ or **/.\n          // but ending in ** will match files as well.\n          this.matches.add(t, absolute, rp === '' || rp === '.')\n        } else {\n          if (rp === '..') {\n            // this would mean you're matching **/.. at the fs root,\n            // and no thanks, I'm not gonna test that specific case.\n            /* c8 ignore start */\n            const tp = t.parent || t\n            /* c8 ignore stop */\n            if (!rrest) this.matches.add(tp, absolute, true)\n            else if (!this.hasWalkedCache.hasWalked(tp, rrest)) {\n              this.subwalks.add(tp, rrest)\n            }\n          }\n        }\n      } else if (p instanceof RegExp) {\n        this.subwalks.add(t, pattern)\n      }\n    }\n\n    return this\n  }\n\n  subwalkTargets(): Path[] {\n    return this.subwalks.keys()\n  }\n\n  child() {\n    return new Processor(this.opts, this.hasWalkedCache)\n  }\n\n  // return a new Processor containing the subwalks for each\n  // child entry, and a set of matches, and\n  // a hasWalkedCache that's a copy of this one\n  // then we're going to call\n  filterEntries(parent: Path, entries: Path[]): Processor {\n    const patterns = this.subwalks.get(parent)\n    // put matches and entry walks into the results processor\n    const results = this.child()\n    for (const e of entries) {\n      for (const pattern of patterns) {\n        const absolute = pattern.isAbsolute()\n        const p = pattern.pattern()\n        const rest = pattern.rest()\n        if (p === GLOBSTAR) {\n          results.testGlobstar(e, pattern, rest, absolute)\n        } else if (p instanceof RegExp) {\n          results.testRegExp(e, p, rest, absolute)\n        } else {\n          results.testString(e, p, rest, absolute)\n        }\n      }\n    }\n    return results\n  }\n\n  testGlobstar(\n    e: Path,\n    pattern: Pattern,\n    rest: Pattern | null,\n    absolute: boolean\n  ) {\n    if (this.dot || !e.name.startsWith('.')) {\n      if (!pattern.hasMore()) {\n        this.matches.add(e, absolute, false)\n      }\n      if (e.canReaddir()) {\n        // if we're in follow mode or it's not a symlink, just keep\n        // testing the same pattern. If there's more after the globstar,\n        // then this symlink consumes the globstar. If not, then we can\n        // follow at most ONE symlink along the way, so we mark it, which\n        // also checks to ensure that it wasn't already marked.\n        if (this.follow || !e.isSymbolicLink()) {\n          this.subwalks.add(e, pattern)\n        } else if (e.isSymbolicLink()) {\n          if (rest && pattern.checkFollowGlobstar()) {\n            this.subwalks.add(e, rest)\n          } else if (pattern.markFollowGlobstar()) {\n            this.subwalks.add(e, pattern)\n          }\n        }\n      }\n    }\n    // if the NEXT thing matches this entry, then also add\n    // the rest.\n    if (rest) {\n      const rp = rest.pattern()\n      if (\n        typeof rp === 'string' &&\n        // dots and empty were handled already\n        rp !== '..' &&\n        rp !== '' &&\n        rp !== '.'\n      ) {\n        this.testString(e, rp, rest.rest(), absolute)\n      } else if (rp === '..') {\n        /* c8 ignore start */\n        const ep = e.parent || e\n        /* c8 ignore stop */\n        this.subwalks.add(ep, rest)\n      } else if (rp instanceof RegExp) {\n        this.testRegExp(e, rp, rest.rest(), absolute)\n      }\n    }\n  }\n\n  testRegExp(\n    e: Path,\n    p: MMRegExp,\n    rest: Pattern | null,\n    absolute: boolean\n  ) {\n    if (!p.test(e.name)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n\n  testString(e: Path, p: string, rest: Pattern | null, absolute: boolean) {\n    // should never happen?\n    if (!e.isNamed(p)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///home/gcadoret/www/lcov-reporter/node_modules/glob/dist/cjs/src/has-magic.js":{"lineLengths":[13,62,26,41,3,74,30,2,78,77,74,78,78,77,3,45,34,28,5,30,61,24,5,17,2,28,37],"data":{"version":3,"file":"has-magic.js","sourceRoot":"","sources":["file:///home/gcadoret/www/lcov-reporter/node_modules/glob/src/has-magic.ts"],"names":[],"mappings":";;;AAAA,yCAAqC;AAGrC;;;;;;;;;;GAUG;AACI,MAAM,QAAQ,GAAG,CACtB,OAA0B,EAC1B,UAAuB,EAAE,EAChB,EAAE;IACX,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QAC3B,OAAO,GAAG,CAAC,OAAO,CAAC,CAAA;KACpB;IACD,KAAK,MAAM,CAAC,IAAI,OAAO,EAAE;QACvB,IAAI,IAAI,qBAAS,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE;YAAE,OAAO,IAAI,CAAA;KACtD;IACD,OAAO,KAAK,CAAA;AACd,CAAC,CAAA;AAXY,QAAA,QAAQ,YAWpB","sourcesContent":["import { Minimatch } from 'minimatch'\nimport { GlobOptions } from './glob.js'\n\n/**\n * Return true if the patterns provided contain any magic glob characters,\n * given the options provided.\n *\n * Brace expansion is not considered \"magic\" unless the `magicalBraces` option\n * is set, as brace expansion just turns one string into an array of strings.\n * So a pattern like `'x{a,b}y'` would return `false`, because `'xay'` and\n * `'xby'` both do not contain any magic glob characters, and it's treated the\n * same as if you had called it on `['xay', 'xby']`. When `magicalBraces:true`\n * is in the options, brace expansion _is_ treated as a pattern having magic.\n */\nexport const hasMagic = (\n  pattern: string | string[],\n  options: GlobOptions = {}\n): boolean => {\n  if (!Array.isArray(pattern)) {\n    pattern = [pattern]\n  }\n  for (const p of pattern) {\n    if (new Minimatch(p, options).hasMagic()) return true\n  }\n  return false\n}\n"]},"url":null,"sourceURL":null}}}